[
  {
    "scan_id": "d2b2da3f-7d2e-4c3e-9f46-094f01099518",
    "vulnerabilities": [
      {
        "cves": [
          {
            "cve": "CVE-2025-30204",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-405"
            ]
          }
        ],
        "summary": "golang-jwt is a Go implementation of JSON Web Tokens. Starting in version 3.2.0 and prior to versions 5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a call to strings.Split) its argument (which is untrusted data) on periods. As a result, in the face of a malicious request whose Authorization header consists of Bearer  followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the function's argument), with a constant factor of about 16. This issue is fixed in 5.2.2 and 4.5.2.",
        "severity": "High",
        "components": {
          "go://github.com/golang-jwt/jwt/v4:4.5.0": {
            "fixed_versions": [
              "[4.5.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang-jwt/jwt/v4:4.5.0",
                  "full_path": "github.com/golang-jwt/jwt/v4"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-678437",
        "references": [
          "https://github.com/golang-jwt/jwt/security/advisories/GHSA-mh63-6h87-95cp",
          "https://github.com/advisories/GHSA-mh63-6h87-95cp",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-30204",
          "https://pkg.go.dev/vuln/GO-2025-3553",
          "https://github.com/golang-jwt/jwt/commit/bf316c48137a1212f8d0af9288cc9ce8e59f1afb",
          "https://security.netapp.com/advisory/ntap-20250404-0002/",
          "https://github.com/golang-jwt/jwt/commit/0951d184286dece21f73c85673fd308786ffe9c3",
          "https://security.netapp.com/advisory/ntap-20250404-0002"
        ],
        "extended_information": {
          "short_description": "Unbounded resource consumption in golang-jwt can lead to denial of service when an attacker client sends a malformed token.",
          "full_description": "A design bug in Go `golang-jwt` module may lead to denial of service when an attacker sends a malformed token to a server.\n\nThe `parse.ParseUnverified()` function starts with:\n```\nfunc (p *Parser) ParseUnverified(tokenString string, claims Claims) (token *Token, parts []string, err error) {\n \tparts = strings.Split(tokenString, \".\")\n \tif len(parts) != 3 {\n \t\treturn nil, parts, newError(\"token contains an invalid number of segments\", ErrTokenMalformed)\n```\nIf an attacker sends a token which has many dots (e.g. 100000) the `strings.Split()` function might crash due to unexpected memory consumption which may lead to DoS.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "May lead to denial of service."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must find a remote input propagating to the `parse.ParseUnverified()` function.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-51744",
            "cvss_v3_score": "3.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N",
            "cwe": [
              "CWE-347",
              "CWE-755"
            ]
          }
        ],
        "summary": "golang-jwt is a Go implementation of JSON Web Tokens. Unclear documentation of the error behavior in `ParseWithClaims` can lead to situation where users are potentially not checking errors in the way they should be. Especially, if a token is both expired and invalid, the errors returned by `ParseWithClaims` return both error codes. If users only check for the `jwt.ErrTokenExpired ` using `error.Is`, they will ignore the embedded `jwt.ErrTokenSignatureInvalid` and thus potentially accept invalid tokens. A fix has been back-ported with the error handling logic from the `v5` branch to the `v4` branch. In this logic, the `ParseWithClaims` function will immediately return in \"dangerous\" situations (e.g., an invalid signature), limiting the combined errors only to situations where the signature is valid, but further validation failed (e.g., if the signature is valid, but is expired AND has the wrong audience). This fix is part of the 4.5.1 release. We are aware that this changes the behaviour of an established function and is not 100 % backwards compatible, so updating to 4.5.1 might break your code. In case you cannot update to 4.5.0, please make sure that you are properly checking for all errors (\"dangerous\" ones first), so that you are not running in the case detailed above.",
        "severity": "Low",
        "components": {
          "go://github.com/golang-jwt/jwt/v4:4.5.0": {
            "fixed_versions": [
              "[4.5.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang-jwt/jwt/v4:4.5.0",
                  "full_path": "github.com/golang-jwt/jwt/v4"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-652208",
        "references": [
          "https://github.com/golang-jwt/jwt/commit/7b1c1c00a171c6c79bbdb40e4ce7d197060c1c2c",
          "https://github.com/golang-jwt/jwt/security/advisories/GHSA-29wx-vh33-7x7r",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-51744",
          "https://github.com/advisories/GHSA-29wx-vh33-7x7r",
          "https://pkg.go.dev/vuln/GO-2024-3250"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-27304",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-190",
              "CWE-89"
            ]
          }
        ],
        "summary": "pgx is a PostgreSQL driver and toolkit for Go. SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control. The problem is resolved in v4.18.2 and v5.5.4. As a workaround, reject user input large enough to cause a single query or bind message to exceed 4 GB in size.",
        "severity": "High",
        "components": {
          "go://github.com/jackc/pgproto3/v2:2.3.2": {
            "fixed_versions": [
              "[2.3.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/jackc/pgproto3/v2:2.3.2",
                  "full_path": "github.com/jackc/pgproto3/v2"
                }
              ]
            ]
          },
          "go://github.com/jackc/pgx/v4:4.18.1": {
            "fixed_versions": [
              "[4.18.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/jackc/pgx/v4:4.18.1",
                  "full_path": "github.com/jackc/pgx/v4"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-593317",
        "references": [
          "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8",
          "https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4",
          "https://www.youtube.com/watch?v=Tfg1B8u1yvE",
          "https://pkg.go.dev/vuln/GO-2024-2606",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-27304",
          "https://github.com/advisories/GHSA-mrww-27vc-gghv",
          "https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007",
          "https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df",
          "https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8",
          "https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv",
          "https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8"
        ],
        "extended_information": {
          "short_description": "Integer overflow in pgx leads to SQL query smuggling which may allow remote attackers to bypass query restrictions and perform SQL injection",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "Exploitable when pgx is used as a PostgreSQL server and applies a filter on SQL queries.",
              "is_positive": true
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "Exploiting the vulnerability allows the attacker to split a query to multiple queries. This can allow the attacker to evade certain checks or filters that are applied on the queries, depending on the exact configuration of pgx.",
              "is_positive": true
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "SQL Injection."
            },
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "Can be exploited by remote attackers when PostgreSQL is listening over TCP (and not a domain socket)."
            },
            {
              "name": "The issue can only be exploited by an attacker with high privileges",
              "description": "The attacker must be able to perform SQL queries on the pgx server.",
              "is_positive": true
            }
          ],
          "remediation": "##### Deployment mitigations\n\nConfigure a Firewall to drop any packets going to PostgreSQL (usually TCP port 5432) that are larger than 1GB.\nFor example with IPTABLES - \n```\n`iptables -A INPUT -p tcp --dport 5432 -m length --length :1000000000 -j DROP`\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-27289",
            "cvss_v3_score": "8.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-89"
            ]
          }
        ],
        "summary": "pgx is a PostgreSQL driver and toolkit for Go. Prior to version 4.18.2, SQL injection can occur when all of the following conditions are met: the non-default simple protocol is used; a placeholder for a numeric value must be immediately preceded by a minus; there must be a second placeholder for a string value after the first placeholder; both must be on the same line; and both parameter values must be user-controlled. The problem is resolved in v4.18.2. As a workaround, do not use the simple protocol or do not place a minus directly before a placeholder.",
        "severity": "High",
        "components": {
          "go://github.com/jackc/pgx/v4:4.18.1": {
            "fixed_versions": [
              "[4.18.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/jackc/pgx/v4:4.18.1",
                  "full_path": "github.com/jackc/pgx/v4"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-593318",
        "references": [
          "https://www.sonarsource.com/blog/double-dash-double-trouble-a-subtle-sql-injection-flaw",
          "https://pkg.go.dev/vuln/GO-2024-2605",
          "https://www.sonarsource.com/blog/double-dash-double-trouble-a-subtle-sql-injection-flaw/",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-27289",
          "https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df",
          "https://github.com/jackc/pgx/security/advisories/GHSA-m7wr-2xf7-cm9p",
          "https://github.com/advisories/GHSA-m7wr-2xf7-cm9p"
        ],
        "extended_information": {
          "short_description": "Improper escaping of numeric values in PostgreSQL pgx Driver may lead to SQL injection when using a non-default query mode.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "To successfully trigger the vulnerability, all of the following conditions must be satisfied:\n1. A Non-default query mode (`?prefer_simple_protocol=true` at the end of the JDBC connection string or set directly in code), which is highly unlikely.\n2. SQL query with two attacker-controlled variables (one numeric and one string in the same line). The string variable must be after the numeric one.\n3. The SQL query must contain \"-\" before and adjacent to the numeric variable (for example, `SELECT * FROM tablename WHERE count=-$1 OR name=$2`).",
              "is_positive": true
            },
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
              "is_positive": true
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "The exploitation of the vulnerability leads to SQL injection."
            },
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "The issue has an exploit published",
              "description": "An example of an exploitation method is included in the GitHub advisory."
            }
          ],
          "remediation": "##### Development mitigations\n\nIf your SQL query contains a minus (`-`) followed by a numeric variable that is user-controlled, verify the number is not a negative number before passing it to the SQL query.\nAlternatively, don't use the `prefer_simple_protocol=true` mode."
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22872",
            "cvss_v3_score": "6.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:L",
            "cwe": [
              "CWE-79"
            ]
          }
        ],
        "summary": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. \u003cmath\u003e, \u003csvg\u003e, etc contexts).",
        "severity": "Medium",
        "components": {
          "go://golang.org/x/net:0.17.0": {
            "fixed_versions": [
              "[0.38.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://golang.org/x/net:0.17.0",
                  "full_path": "golang.org/x/net"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-693274",
        "references": [
          "https://go.dev/cl/662715",
          "https://pkg.go.dev/vuln/GO-2025-3595",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22872",
          "https://security.netapp.com/advisory/ntap-20250516-0007",
          "https://go.dev/issue/73070",
          "https://security.netapp.com/advisory/ntap-20250516-0007/",
          "https://groups.google.com/g/golang-announce/c/ezSKR9vqbqA",
          "https://github.com/advisories/GHSA-vvgc-356p-c3xw"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45288",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-400"
            ]
          }
        ],
        "summary": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.21.9]",
              "[1.22.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          },
          "go://golang.org/x/net:0.17.0": {
            "fixed_versions": [
              "[0.23.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://golang.org/x/net:0.17.0",
                  "full_path": "golang.org/x/net"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-597401",
        "references": [
          "https://github.com/advisories/GHSA-4v7x-pqxf-cx7m",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45288",
          "https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M",
          "http://www.openwall.com/lists/oss-security/2024/04/03/16",
          "https://go.dev/cl/576155",
          "https://security.netapp.com/advisory/ntap-20240419-0009",
          "https://security.netapp.com/advisory/ntap-20240419-0009/",
          "https://github.com/advisories/GHSA-qc6v-5g5m-8cw2",
          "https://github.com/zitadel/zitadel-go/security/advisories/GHSA-qc6v-5g5m-8cw2",
          "https://pkg.go.dev/vuln/GO-2024-2631",
          "https://www.cve.org/CVERecord?id=CVE-2023-45288",
          "https://pkg.go.dev/vuln/GO-2024-2611",
          "https://github.com/zitadel/zitadel-go/releases/tag/v3.0.0-next.3",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QRYFHIQ6XRKRYBI2F5UESH67BJBQXUPT",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QRYFHIQ6XRKRYBI2F5UESH67BJBQXUPT/",
          "https://pkg.go.dev/vuln/GO-2024-2687",
          "http://www.openwall.com/lists/oss-security/2024/04/05/4",
          "https://nowotarski.info/http2-continuation-flood-technical-details",
          "https://go.dev/issue/65051"
        ],
        "extended_information": {
          "short_description": "A design problem in the implementation of the HTTP/2 protocol in Golang may lead to denial of service by abusing frame flags.",
          "full_description": "The `net/http` package in Go is used for handling HTTP requests and responses.\n`HTTP/2` is a binary protocol where the client and server exchange binary frames instead of text lines as in `HTTP/1.x`. `HTTP/2` resolves numerous concerns found in HTTP/1.1 by organizing each HTTP message into a series of HTTP/2 frames. These frames include frame type, length, flags, stream identifier (ID), and payload.\n\nThe `HEADERS` frame type allows sending HTTP headers of, both, request and response. The `HEADERS` frame contains many flags.\nThe `CONTINUATION` frame type is similar to the `HEADER` frame, but it has just one flag: `END_HEADERS`. When it is not set, the peer knows that more headers are coming in the following `CONTINUATION` frames.\n\nThis mechanism allows an attacker to send an `HTTP/2` stream with `CONTINUATION` frames, without setting the `END_HEADERS` flag in any of the frames. This can cause denial-of-service when sending an excessive number of these crafted frames due to caching all frames in memory.\n\nThough the `net/http` package uses HTTP/2 by default, a Golang web server must have HTTPS configured to be vulnerable to exploitation.\nThe `x/net/http2` package is vulnerable by default.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "Though the `net/http` package uses HTTP/2 by default, a Golang web server must have HTTPS configured to be vulnerable to exploitation.\nThe `x/net/http2` package is vulnerable by default.",
              "is_positive": true
            },
            {
              "name": "The issue has multiple mentions in general media",
              "description": "This issue is related to the well-covered attack \"HTTP/2 CONTINUATION Flood\"."
            },
            {
              "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
              "description": "A very detailed technical write-up has been published regarding the issue."
            },
            {
              "name": "The issue can be exploited by attackers over the network"
            }
          ],
          "remediation": "##### Development mitigations\n\nFrom Golang version 1.6, the `net/http` package is using the `HTTP/2` protocol by default when using HTTPS. You can disable HTTP/2 by setting `Server.TLSNextProto` (for servers) to a non-nil, empty map.\n\nFor example:\n```\npackage main\n\nimport (\n    \"log\"\n    \"net/http\"\n    \"crypto/tls\"\n)\n\nfunc main() {\n    m := http.NewServeMux()\n    srv := \u0026http.Server{\n        Handler:      m,\n        Addr:         \"127.0.0.1:8080\",\n        TLSNextProto: make(map[string]func(*http.Server, *tls.Conn, http.Handler)),\n    }\n    log.Fatal(srv.ListenAndServe())\n}\n```\n\nAlternatively, the following GODEBUG settings are also supported, which disables the HTTP/2 server support:\n```\nGODEBUG=http2server=0\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22870",
            "cvss_v3_score": "4.4",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L",
            "cwe": [
              "CWE-20",
              "CWE-115"
            ]
          }
        ],
        "summary": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied.",
        "severity": "Medium",
        "components": {
          "go://golang.org/x/net:0.17.0": {
            "fixed_versions": [
              "[0.36.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://golang.org/x/net:0.17.0",
                  "full_path": "golang.org/x/net"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-676974",
        "references": [
          "http://www.openwall.com/lists/oss-security/2025/03/07/2",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22870",
          "https://go.dev/issue/71984",
          "https://go.dev/cl/654697",
          "https://pkg.go.dev/vuln/GO-2025-3503",
          "https://github.com/advisories/GHSA-qxp5-gwg8-xv66",
          "https://security.netapp.com/advisory/ntap-20250509-0007",
          "https://security.netapp.com/advisory/ntap-20250509-0007/"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22868",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-1286"
            ]
          }
        ],
        "summary": "GHSA-6v2p-p543-phr9:\ngolang.org/x/oauth2 Improper Validation of Syntactic Correctness of Input vulnerability\nGHSA-3wqc-mwfx-672p:\nTraefik affected by Go oauth2/jws Improper Validation of Syntactic Correctness of Input vulnerability",
        "severity": "High",
        "components": {
          "go://golang.org/x/oauth2:0.13.0": {
            "fixed_versions": [
              "[0.27.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://golang.org/x/oauth2:0.13.0",
                  "full_path": "golang.org/x/oauth2"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-672307",
        "references": [
          "https://go.dev/cl/652155",
          "https://github.com/advisories/GHSA-6v2p-p543-phr9",
          "https://github.com/advisories/GHSA-3wqc-mwfx-672p",
          "https://github.com/traefik/traefik/releases/tag/v2.11.24",
          "https://github.com/traefik/traefik/security/advisories/GHSA-3wqc-mwfx-672p",
          "https://security.snyk.io/vuln/SNYK-CHAINGUARDLATEST-TRAEFIK33-9403297",
          "https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2",
          "https://go.dev/issue/71490",
          "https://github.com/traefik/traefik/releases/tag/v3.3.6",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22868",
          "https://pkg.go.dev/vuln/GO-2025-3488"
        ],
        "extended_information": {
          "short_description": "Unbounded resource consumption in Go's x/oauth2/jws can lead to denial of service when an attacker client sends a malformed token.",
          "full_description": "A design bug in Go `x/oauth2/jws` module may lead to denial of service when an attacker sends a malformed token to a server.\n\nThe Verify function of Go's JWS module starts with:\n```\nfunc Verify(token string, key *rsa.PublicKey) error {\n\tparts := strings.Split(token, \".\")\n\tif len(parts) != 3 {\n\t\treturn errors.New(\"jws: invalid token received, token must have 3 parts\")\n\t}\n```\nIf an attacker sends a token which has many dots (e.g. 100000) the `strings.Split()` function might crash due to unexpected memory consumption which may lead to DoS.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "May lead to denial of service."
            },
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must find a remote input propagating to the `jws.Verify()` function.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24785",
            "cvss_v3_score": "5.4",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N",
            "cwe": [
              "CWE-150"
            ]
          }
        ],
        "summary": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.21.8]",
              "[1.22.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616746",
        "references": [
          "http://www.openwall.com/lists/oss-security/2024/03/08/4",
          "https://go.dev/cl/564196",
          "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg",
          "https://security.netapp.com/advisory/ntap-20240329-0008/",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24785",
          "https://go.dev/issue/65697",
          "https://pkg.go.dev/vuln/GO-2024-2610"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45289",
            "cvss_v3_score": "4.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
            "cwe": [
              "CWE-212"
            ]
          }
        ],
        "summary": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.21.8]",
              "[1.22.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616747",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45289",
          "https://security.netapp.com/advisory/ntap-20240329-0006/",
          "https://go.dev/issue/65065",
          "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg",
          "https://go.dev/cl/569340",
          "https://pkg.go.dev/vuln/GO-2024-2600",
          "http://www.openwall.com/lists/oss-security/2024/03/08/4"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24790",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "NVD-CWE-noinfo",
              "CWE-180"
            ]
          }
        ],
        "summary": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
        "severity": "Critical",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.21.11]",
              "[1.22.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-606108",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24790",
          "https://www.cve.org/CVERecord?id=CVE-2024-24790",
          "https://go.dev/cl/590316",
          "https://github.com/traefik/traefik/releases/tag/v2.11.4",
          "http://www.openwall.com/lists/oss-security/2024/06/04/1",
          "https://go.dev/issue/67680",
          "https://pkg.go.dev/vuln/GO-2024-2917",
          "https://pkg.go.dev/vuln/GO-2024-2887",
          "https://github.com/advisories/GHSA-7jmw-8259-q9jx",
          "https://github.com/traefik/traefik/security/advisories/GHSA-7jmw-8259-q9jx",
          "https://groups.google.com/g/golang-announce/c/XbxouI9gY7k/m/TuoGEhxIEwAJ",
          "https://github.com/traefik/traefik/releases/tag/v3.0.2"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45284",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cwe": [
              "CWE-41",
              "NVD-CWE-noinfo"
            ]
          }
        ],
        "summary": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.20.11]",
              "[1.21.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-535836",
        "references": [
          "https://go.dev/cl/540277",
          "https://go.dev/issue/63713",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45284",
          "https://pkg.go.dev/vuln/GO-2023-2186",
          "https://groups.google.com/g/golang-announce/c/4tU8LZfBFkY"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-0913",
            "cvss_v3_score": "5.5",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "CWE-59"
            ]
          }
        ],
        "summary": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.23.10]",
              "[1.24.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-704403",
        "references": [
          "https://go.dev/cl/672396",
          "https://go.dev/issue/73702",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-0913",
          "https://pkg.go.dev/vuln/GO-2025-3750",
          "https://groups.google.com/g/golang-announce/c/ufZ8WpEsA3A"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22866",
            "cvss_v3_score": "4.0",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "cwe": [
              "CWE-208"
            ]
          }
        ],
        "summary": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.22.12]",
              "[1.23.6]",
              "[1.24.0-rc.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-669928",
        "references": [
          "https://security.netapp.com/advisory/ntap-20250221-0002/",
          "https://pkg.go.dev/vuln/GO-2025-3447",
          "https://go.dev/issue/71383",
          "https://go.dev/cl/643735",
          "https://groups.google.com/g/golang-announce/c/xU1ZCHUZw3k",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22866"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24787",
            "cvss_v3_score": "6.4",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"
          }
        ],
        "summary": "On Darwin, building a Go module which contains CGO can trigger arbitrary code execution when using the Apple version of ld, due to usage of the -lto_library flag in a \"#cgo LDFLAGS\" directive.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.21.10]",
              "[1.22.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616754",
        "references": [
          "https://go.dev/cl/583815",
          "http://www.openwall.com/lists/oss-security/2024/05/08/3",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24787",
          "https://go.dev/issue/67119",
          "https://pkg.go.dev/vuln/GO-2024-2825",
          "https://security.netapp.com/advisory/ntap-20240531-0006/",
          "https://groups.google.com/g/golang-announce/c/wkkO4P9stm0"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45283",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-22",
              "CWE-41"
            ]
          }
        ],
        "summary": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.20.11]",
              "[1.20.12]",
              "[1.21.4]",
              "[1.21.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-535837",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45283",
          "https://go.dev/cl/540277",
          "http://www.openwall.com/lists/oss-security/2023/12/05/2",
          "https://go.dev/issue/64028",
          "https://go.dev/cl/541175",
          "https://go.dev/issue/63713",
          "https://pkg.go.dev/vuln/GO-2023-2185",
          "https://security.netapp.com/advisory/ntap-20231214-0008/",
          "https://groups.google.com/g/golang-dev/c/6ypN5EjibjM/m/KmLVYH_uAgAJ",
          "https://groups.google.com/g/golang-announce/c/4tU8LZfBFkY"
        ],
        "extended_information": {
          "short_description": "Insufficient input validation in Golang allows attackers to perform path traversal when parsing Windows paths.",
          "full_description": "[Go](https://go.dev/) is an open source programming language that makes it easy to build simple, reliable, and efficient software.\nThe [`path/filepath`](https://pkg.go.dev/path/filepath) package of the Go programming language is used to parse and handle paths. This package takes into consideration the operating system.\nThe `Clean()` function in the  `path/filepath` package is used to clean up a given path and return a shorter, cleaned version of the path. \nOn Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system.\n\nIt was discovered that when running Go applications on Windows, the `path/filepath` package does not recognize paths with a \\??\\ prefix as special. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fixing, `Clean()` could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. The vulnerability affects most of the functions of the `path/filepath` package, not just `Clean()`, this could lead to unexpected results when relying on the package, including path traversal which may lead to arbitrary file-read/file-write.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The security impact of exploiting this vulnerability highly depends on the 1st-party code that uses a `path/filepath` function.\nFor example, suppose the code uses `join()` to create an attacker-named externally writable file in the current directory. In that case, the attacker can create the file in an arbitrary file path, leading to arbitrary file overwrite.",
              "is_positive": true
            },
            {
              "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
              "description": "The advisory contains an explanation of how to trigger the vulnerability."
            },
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability as well as the impact.",
              "is_positive": true
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "For the vulnerability to be exploitable, an attacker must find a remote service that takes user input and specifically opens a file after using a `path/filepath` package function, in which case the attacker may use it to open arbitrary files.",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The vulnerability only affects the Windows operating system.",
              "is_positive": true
            }
          ],
          "remediation": "##### Development mitigations\n\nReplace any path usage of `\\??\\` with the equivalent `\\\\?\\` which is handled properly by `Clean` and other path-related APIs.\n\nFor example -\n```go\n\tmy_path := `\\??\\my\\path`\n\tsafe_path := strings.Replace(my_path, `\\??\\`, `\\\\?\\`, -1)\n\t# safe_path can be used with Clean() etc.\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22871",
            "cvss_v3_score": "9.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cwe": [
              "CWE-1395",
              "CWE-444"
            ]
          }
        ],
        "summary": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
        "severity": "Critical",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.23.8]",
              "[1.24.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-692219",
        "references": [
          "https://github.com/traefik/traefik/releases/tag/v3.3.6",
          "https://go.dev/issue/71988",
          "https://groups.google.com/g/golang-announce/c/Y2uBTVKjBQk",
          "https://pkg.go.dev/vuln/GO-2025-3563",
          "https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2",
          "https://go.dev/cl/652998",
          "https://github.com/traefik/traefik/security/advisories/GHSA-5423-jcjm-2gpv",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22871",
          "http://www.openwall.com/lists/oss-security/2025/04/04/4",
          "https://github.com/traefik/traefik/releases/tag/v2.11.24",
          "https://github.com/advisories/GHSA-5423-jcjm-2gpv"
        ],
        "extended_information": {
          "short_description": "Insufficient input validation in Go's net/http may lead to request smuggling when parsing HTTP requests.",
          "full_description": "The `net/http` package in Go is used for handling HTTP requests and responses.\nThe HTTP protocol uses `CRLF` characters (`\\r\\n`) as line terminators, and it does not allow bare LF (cases where only `\\n` is present, meaning partial `CRLF`) to be used in chunked encoding.\nIn HTTP chunked transfer encoding, the `chunk-size` is a value indicating the number of bytes in the subsequent data chunk.\n\nThe `net/http` library does not reject these bare `LF` characters, but instead allows them in a `chunk-size` line, which may lead to request smuggling under the right conditions:\n\n1. The reverse proxy allows bare `LF` characters and doesn't interpret them as line terminators.\n\n2. The backend server allows bare `LF` characters and interprets them as line terminators.\n\nWith the above configuration, HTTP requests reach the backend server, where they are split due to the interpretation of the bare LF as a line terminator. Thus, the smuggled request is processed as an additional individual request.\n\nFor the backend server, there are such servers, for example, `Nginx` or anything that uses Go's `net/http`,  which is unpatched to this vuln (after this patch, Go's `net/http` completely rejects bare LF).\n\nHowever, for reverse proxy, there is no such known proxy (including `Nginx`, `Traefik`). Most known proxies either disallow Bare LF or treat it as a line terminator.\n\nHTTP Request Smuggling is a web security vulnerability where conflicting interpretations of HTTP specifications by different front-end and back-end servers can lead to request manipulation by attackers.\nThis type of attack can lead to the following impacts: DoS, SSRF, XXS, data leakage, cache poisoning, session manipulation, security bypass, and business logic abuse.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "The vulnerability can be remotely exploited by sending a crafted HTTP request."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "For the vulnerability to be exploitable, both the reverse proxy and the backend server should allow for bare LF characters to be used in chunk-size lines in an HTTP request. Specifically, the backend server should interpret the bare LF character as a line terminator, while the reverse proxy shouldn't.",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "The attacker needs to simply inject CRLF characters to the `Origin` header of the HTTP response, to cause the response to be splitted."
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The impact of HTTP request smuggling vulnerabilities always depends on the context, and specifically, which security check is bypassed in the front-end proxy via the smuggling. The smuggling may allow an attacker to bypass security controls, gain unauthorized access to sensitive data, and possibly compromise other application users.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24791",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
          }
        ],
        "summary": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail. An attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.21.12]",
              "[1.22.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616759",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24791",
          "https://go.dev/issue/67555",
          "https://groups.google.com/g/golang-dev/c/t0rK-qHBqzY/m/6MMoAZkMAgAJ",
          "https://go.dev/cl/591255",
          "https://pkg.go.dev/vuln/GO-2024-2963"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-4673",
            "cvss_v3_score": "6.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N",
            "cwe": [
              "CWE-201"
            ]
          }
        ],
        "summary": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.23.10]",
              "[1.24.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-704401",
        "references": [
          "https://groups.google.com/g/golang-announce/c/ufZ8WpEsA3A",
          "https://go.dev/cl/679257",
          "https://go.dev/issue/73816",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-4673",
          "https://pkg.go.dev/vuln/GO-2025-3751"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-4674",
            "cvss_v3_score": "8.6",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
            "cwe": [
              "CWE-73"
            ]
          }
        ],
        "summary": "The go command may execute unexpected commands when operating in untrusted VCS repositories. This occurs when possibly dangerous VCS configuration is present in repositories. This can happen when a repository was fetched via one VCS (e.g. Git), but contains metadata for another VCS (e.g. Mercurial). Modules which are retrieved using the go command line, i.e. via \"go get\", are not affected.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.23.11]",
              "[1.24.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-712293",
        "references": [
          "https://go.dev/issue/74380",
          "https://groups.google.com/g/golang-announce/c/gTNJnDXmn34",
          "https://go.dev/cl/686515",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-4674",
          "https://pkg.go.dev/vuln/GO-2025-3828"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-45336",
            "cvss_v3_score": "6.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "cwe": [
              "CWE-116"
            ]
          }
        ],
        "summary": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com. In the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.22.11]",
              "[1.23.5]",
              "[1.24.0-rc.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-668447",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-45336",
          "https://groups.google.com/g/golang-dev/c/CAWXhan3Jww/m/bk9LAa-lCgAJ",
          "https://groups.google.com/g/golang-dev/c/bG8cv1muIBM/m/G461hA6lCgAJ",
          "https://go.dev/issue/70530",
          "https://go.dev/cl/643100",
          "https://security.netapp.com/advisory/ntap-20250221-0003/",
          "https://pkg.go.dev/vuln/GO-2025-3420"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24789",
            "cvss_v3_score": "5.5",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "CWE-390",
              "NVD-CWE-noinfo"
            ]
          }
        ],
        "summary": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.21.11]",
              "[1.22.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616756",
        "references": [
          "https://go.dev/cl/585397",
          "http://www.openwall.com/lists/oss-security/2024/06/04/1",
          "https://pkg.go.dev/vuln/GO-2024-2888",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24789",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U5YAEIA6IUHUNGJ7AIXXPQT6D2GYENX7/",
          "https://security.netapp.com/advisory/ntap-20250131-0008/",
          "https://go.dev/issue/66869",
          "https://groups.google.com/g/golang-announce/c/XbxouI9gY7k/m/TuoGEhxIEwAJ"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-47907",
            "cvss_v3_score": "7.0",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:L",
            "cwe": [
              "CWE-362"
            ]
          }
        ],
        "summary": "Cancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.23.12]",
              "[1.24.6]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-713818",
        "references": [
          "https://groups.google.com/g/golang-announce/c/x5MKroML2yM",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-47907",
          "https://pkg.go.dev/vuln/GO-2025-3849",
          "https://go.dev/cl/693735",
          "https://go.dev/issue/74831"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-34155",
            "cvss_v3_score": "4.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-674"
            ]
          }
        ],
        "summary": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.22.7]",
              "[1.23.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-642406",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-34155",
          "https://pkg.go.dev/vuln/GO-2024-3105",
          "https://groups.google.com/g/golang-dev/c/S9POB9NCTdk",
          "https://go.dev/cl/611238",
          "https://go.dev/issue/69138"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24783",
            "cvss_v3_score": "5.9",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "CWE-476"
            ]
          }
        ],
        "summary": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic. This affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.21.8]",
              "[1.22.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616744",
        "references": [
          "https://go.dev/issue/65390",
          "https://go.dev/cl/569339",
          "https://security.netapp.com/advisory/ntap-20240329-0005/",
          "http://www.openwall.com/lists/oss-security/2024/03/08/4",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24783",
          "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg",
          "https://pkg.go.dev/vuln/GO-2024-2598"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45290",
            "cvss_v3_score": "6.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-400",
              "CWE-770"
            ]
          }
        ],
        "summary": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion. With fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.21.8]",
              "[1.22.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616745",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45290",
          "https://go.dev/issue/65383",
          "https://pkg.go.dev/vuln/GO-2024-2599",
          "https://security.netapp.com/advisory/ntap-20240329-0004/",
          "http://www.openwall.com/lists/oss-security/2024/03/08/4",
          "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg",
          "https://go.dev/cl/569341"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-39326",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "cwe": [
              "NVD-CWE-noinfo",
              "CWE-400"
            ]
          }
        ],
        "summary": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.20.12]",
              "[1.21.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-540331",
        "references": [
          "https://go.dev/cl/547335",
          "https://go.dev/issue/64433",
          "https://pkg.go.dev/vuln/GO-2023-2382",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UIU6HOGV6RRIKWM57LOXQA75BGZSIH6G/",
          "https://groups.google.com/g/golang-dev/c/6ypN5EjibjM/m/KmLVYH_uAgAJ",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-39326"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45285",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "NVD-CWE-noinfo",
              "CWE-636"
            ]
          }
        ],
        "summary": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.20.12]",
              "[1.21.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-540330",
        "references": [
          "https://go.dev/cl/540257",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45285",
          "https://pkg.go.dev/vuln/GO-2023-2383",
          "https://go.dev/issue/63845",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UIU6HOGV6RRIKWM57LOXQA75BGZSIH6G/",
          "https://groups.google.com/g/golang-dev/c/6ypN5EjibjM/m/KmLVYH_uAgAJ"
        ],
        "extended_information": {
          "short_description": "A design problem in Go's `cmd/go` allows network attackers to perform man-in-the-middle attacks when a client fetches a module with the `.git` suffix and without an explicit URL scheme.",
          "full_description": "[cmd/go](https://pkg.go.dev/cmd/go) is a command-line tool and part of the Go programming language's toolchain. It is primarily used for managing Go modules, which are collections of Go packages and their dependencies.\nThe logic in `(*vcs).vcs.repoRootFromVCSPaths` function, part of the `cmd/go` package, has a design problem when processing a module's `url` that ends with the `.git` suffix (`foo/bar.git`) and is unavailable via secure protocols (`https`, `ssh`). \n\nFor example, when fetching a module with a URL that has no scheme and ends with `.git` -\n`go get -x dgl.cx/foo.git`\nIf the module cannot be fetched with the `https://` or `git+ssh://` schemes, then Go will unexpectedly try to fetch the module using insecure schemes such as `http://` and `git://`, which allows for man-in-the-middle attacks that can lead to data leakages or even indirect remote code execution (by attackers tampering with the fetched source code).",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "Attackers can mount MitM attacks on fetched Go modules, if the client fetches the module using a URL that satisfies the following conditions:\n1. The URL has to end with `.git`.\n2. The URL must not contain an explicit scheme\n3. The user is fetching modules directly (i.e. sets GOPROXY=off), which is not the default scenario.",
              "is_positive": true
            },
            {
              "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
              "description": "The GitHub issue details the vulnerability and how to trigger it."
            },
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
              "is_positive": true
            }
          ],
          "remediation": "##### Deployment mitigations\n\nUse an explicit (secure) scheme when fetching Go modules.\nFor example instead of -\n```\ngo get -x dgl.cx/foo.git\n```\n\nUse - \n```\ngo get -x https://dgl.cx/foo.git\n```\n\nor alternatively -\n```\ngo get -x git+ssh://dgl.cx/foo.git\n```\n```\n\n##### Deployment mitigations\n\nDo not disable the module proxy.\nSpecifically, do not set the environment variable `GOPROXY=off`."
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24784",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "CWE-150"
            ]
          }
        ],
        "summary": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.21.8]",
              "[1.22.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616748",
        "references": [
          "http://www.openwall.com/lists/oss-security/2024/03/08/4",
          "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg",
          "https://go.dev/issue/65083",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24784",
          "https://security.netapp.com/advisory/ntap-20240329-0007/",
          "https://pkg.go.dev/vuln/GO-2024-2609",
          "https://go.dev/cl/555596"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-34158",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-674"
            ]
          }
        ],
        "summary": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.22.7]",
              "[1.23.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-642404",
        "references": [
          "https://groups.google.com/g/golang-dev/c/S9POB9NCTdk",
          "https://go.dev/issue/69141",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-34158",
          "https://pkg.go.dev/vuln/GO-2024-3107",
          "https://go.dev/cl/611240"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-34156",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-674"
            ]
          }
        ],
        "summary": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.22.7]",
              "[1.23.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-642402",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-34156",
          "https://pkg.go.dev/vuln/GO-2024-3106",
          "https://go.dev/issue/69139",
          "https://go.dev/cl/611239",
          "https://groups.google.com/g/golang-dev/c/S9POB9NCTdk"
        ],
        "extended_information": {
          "short_description": "Uncontrolled recursion in Golang encoding/gob.Decoder.Decode leads to denial of service when decoding attacker-supplied Gob streams.",
          "full_description": "Golang supports an optimized encoder/decoder called \"gob\" for binary values exchanged between an Encoder (transmitter) and a Decoder (receiver). A typical use is transporting arguments and results of remote procedure calls (RPCs) such as those provided by package \"net/rpc\".\n\nIt was discovered that calling `Decoder.Decode` on a message which contains deeply nested structures can cause a panic due to stack exhaustion., which will crash the calling Go process.\n\nExample code snippet vulnerable to this issue-\n```go\ndec := NewDecoder(attacker_input)\ndec.Decode(\u0026output)\n```",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must find remote input that propagates into a `NewDecoder` API call (first argument). The built `Decoder` must then invoke the `Decode` call.",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "Published PoC in test code demonstrates denial of service."
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-45341",
            "cvss_v3_score": "6.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "cwe": [
              "CWE-295"
            ]
          }
        ],
        "summary": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain. Certificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.21.3": {
            "fixed_versions": [
              "[1.22.11]",
              "[1.23.5]",
              "[1.24.0-rc.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/golang/go:1.21.3",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-668446",
        "references": [
          "https://security.netapp.com/advisory/ntap-20250221-0004/",
          "https://groups.google.com/g/golang-dev/c/CAWXhan3Jww/m/bk9LAa-lCgAJ",
          "https://groups.google.com/g/golang-dev/c/bG8cv1muIBM/m/G461hA6lCgAJ",
          "https://go.dev/issue/71156",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-45341",
          "https://pkg.go.dev/vuln/GO-2025-3373",
          "https://go.dev/cl/643099"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-41110",
            "cvss_v3_score": "9.9",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
            "cwe": [
              "CWE-444",
              "CWE-863",
              "CWE-187"
            ]
          }
        ],
        "summary": "Moby is an open-source project created by Docker for software containerization. A security vulnerability has been detected in certain versions of Docker Engine, which could allow an attacker to bypass authorization plugins (AuthZ) under specific circumstances. The base likelihood of this being exploited is low.\n\nUsing a specially-crafted API request, an Engine API client could make the daemon forward the request or response to an authorization plugin without the body. In certain circumstances, the authorization plugin may allow a request which it would have otherwise denied if the body had been forwarded to it.\n\nA security issue was discovered In 2018, where an attacker could bypass AuthZ plugins using a specially crafted API request. This could lead to unauthorized actions, including privilege escalation. Although this issue was fixed in Docker Engine v18.09.1 in January 2019, the fix was not carried forward to later major versions, resulting in a regression. Anyone who depends on authorization plugins that introspect the request and/or response body to make access control decisions is potentially impacted.\n\nDocker EE v19.03.x and all versions of Mirantis Container Runtime are not vulnerable.\n\ndocker-ce v27.1.1 containes patches to fix the vulnerability. Patches have also been merged into the master, 19.03, 20.0, 23.0, 24.0, 25.0, 26.0, and 26.1 release branches. If one is unable to upgrade immediately, avoid using AuthZ plugins and/or restrict access to the Docker API to trusted parties, following the principle of least privilege.",
        "severity": "Critical",
        "components": {
          "go://github.com/docker/docker:24.0.0+incompatible": {
            "fixed_versions": [
              "[23.0.15]",
              "[25.0.6]",
              "[26.1.5]",
              "[27.1.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/docker/docker:24.0.0+incompatible",
                  "full_path": "github.com/docker/docker"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616823",
        "references": [
          "https://github.com/moby/moby/commit/65cc597cea28cdc25bea3b8a86384b4251872919",
          "https://github.com/moby/moby/commit/42f40b1d6dd7562342f832b9cd2adf9e668eeb76",
          "https://github.com/advisories/GHSA-v23v-6jw2-98fq",
          "https://github.com/moby/moby/commit/a79fabbfe84117696a19671f4aa88b82d0f64fc1",
          "https://github.com/moby/moby/commit/ae2b3666c517c96cbc2adf1af5591a6b00d4ec0f",
          "https://github.com/moby/moby/commit/fc274cd2ff4cf3b48c91697fb327dd1fb95588fb",
          "https://github.com/moby/moby/commit/a31260625655cff9ae226b51757915e275e304b0",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-41110",
          "https://github.com/moby/moby/security/advisories/GHSA-v23v-6jw2-98fq",
          "https://github.com/moby/moby/commit/ae160b4edddb72ef4bd71f66b975a1a1cc434f00",
          "https://github.com/moby/moby/commit/cc13f952511154a2866bddbb7dddebfe9e83b801",
          "https://pkg.go.dev/vuln/GO-2024-3005",
          "https://github.com/moby/moby/commit/411e817ddf710ff8e08fa193da80cb78af708191",
          "https://www.docker.com/blog/docker-security-advisory-docker-engine-authz-plugin",
          "https://github.com/moby/moby/commit/852759a7df454cbf88db4e954c919becd48faa9b"
        ],
        "extended_information": {
          "short_description": "Insufficient input validation in Docker may allow the execution of unauthorized actions when using authorization plugins (AuthZ).",
          "full_description": "[Docker Engine](https://docs.docker.com/engine/) is an open-source containerization platform that allows developers to package applications and their dependencies into portable containers. It includes the Docker Daemon, Docker CLI, and a REST API for managing containers, images, networks, and volumes.\n\n[Moby](https://mobyproject.org/) is an open-source project that provides the core components and frameworks for containerization. It serves as the foundation for Docker Engine, offering modular tools like `containerd` and `runc` that can be used to build custom container systems.\n\n[Authorization plugin (AuthZ)](https://docs.docker.com/engine/extend/plugins_authorization/) in Docker are used to control access to Docker resources and operations based on user-defined policies. They allow administrators to implement custom authorization logic for various Docker actions, ensuring that only authorized users can perform specific operations.\n\nAn attacker could exploit this vulnerability by sending a maliciously crafted API request with the `Content-Length` HTTP header set to `0`, causing the Docker daemon to forward the request without a body to the AuthZ plugin. In some cases, the plugin could approve the request and if it does, it could potentially allow unauthorized actions.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "AuthZ must be enabled for this vulnerability to be exploitable.",
              "is_positive": true
            },
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "CVSS is inconsistent because the base likelihood of this being exploited is low.",
              "is_positive": true
            },
            {
              "name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
              "description": "Most Docker Engine APIs are available only locally.",
              "is_positive": true
            },
            {
              "name": "The issue has multiple mentions in general media",
              "description": "This issue received a lot of media coverage from several big technology news outlets."
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-54410",
            "cvss_v3_score": "5.2",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N",
            "cwe": [
              "CWE-909"
            ]
          }
        ],
        "summary": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker Engine, Mirantis Container Runtime, and various other downstream projects/products. A firewalld vulnerability affects Moby releases before 28.0.0. When firewalld reloads, Docker fails to re-create iptables rules that isolate bridge networks, allowing any container to access all ports on any other container across different bridge networks on the same host. This breaks network segmentation between containers that should be isolated, creating significant risk in multi-tenant environments. Only containers in --internal networks remain protected.\nWorkarounds include reloading firewalld and either restarting the docker daemon, re-creating bridge networks, or using rootless mode. Maintainers anticipate a fix for this issue in version 25.0.13.",
        "severity": "Medium",
        "components": {
          "go://github.com/docker/docker:24.0.0+incompatible": {
            "fixed_versions": [
              "[28.0.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/docker/docker:24.0.0+incompatible",
                  "full_path": "github.com/docker/docker"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-712288",
        "references": [
          "https://github.com/moby/moby/pull/49443",
          "https://github.com/moby/moby/pull/49728",
          "https://github.com/moby/moby/security/advisories/GHSA-4vq8-7jfc-9cvp",
          "https://firewalld.org/documentation/howto/reload-firewalld.html",
          "https://github.com/advisories/GHSA-4vq8-7jfc-9cvp",
          "https://pkg.go.dev/vuln/GO-2025-3829",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-54410"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24557",
            "cvss_v3_score": "7.8",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-346",
              "CWE-345"
            ]
          }
        ],
        "summary": "Moby is an open-source project created by Docker to enable software containerization. The classic builder cache system is prone to cache poisoning if the image is built FROM scratch. Also, changes to some instructions (most important being HEALTHCHECK and ONBUILD) would not cause a cache miss. An attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps. 23.0+ users are only affected if they explicitly opted out of Buildkit (DOCKER_BUILDKIT=0 environment variable) or are using the /build API endpoint. All users on versions older than 23.0 could be impacted. Image build API endpoint (/build) and ImageBuild function from github.com/docker/docker/client is also affected as it the uses classic builder by default. Patches are included in 24.0.9 and 25.0.2 releases.",
        "severity": "High",
        "components": {
          "go://github.com/docker/docker:24.0.0+incompatible": {
            "fixed_versions": [
              "[24.0.9]",
              "[25.0.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/docker/docker:24.0.0+incompatible",
                  "full_path": "github.com/docker/docker"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-589785",
        "references": [
          "https://pkg.go.dev/vuln/GO-2024-2512",
          "https://github.com/moby/moby/commit/fca702de7f71362c8d103073c7e4a1d0a467fadd",
          "https://github.com/moby/moby/commit/3e230cfdcc989dc524882f6579f9e0dac77400ae",
          "https://github.com/moby/moby/security/advisories/GHSA-xw73-rw38-6vjc",
          "https://github.com/moby/moby/commit/fce6e0ca9bc000888de3daa157af14fa41fcd0ff",
          "https://github.com/advisories/GHSA-xw73-rw38-6vjc",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24557"
        ],
        "extended_information": {
          "short_description": "Insufficient input validation in Moby may cause cache poisoning and potential code execution when not using a base image.",
          "full_description": "[Moby](https://mobyproject.org/) is an open-source framework provided by Docker for building customized, specialized containers and is widely used by developers working with docker containers.\n\nUsually, when using Moby to build docker images, the first line will be `FROM \u003cimage\u003e`, where `image` will serve as the [base image](https://docs.docker.com/build/building/base-images/) for the new docker build. However, there is another option - `FROM scratch`. When using this option, there is no base image at all - which can be helpful for creating minimal images. \n\nWhen building a docker image, to make the build process more efficient, docker [locally caches](https://docs.docker.com/build/cache/) the already used layers in a directory on the host where the docker daemon is running. This way, the next time the build is requested, layers that weren't changed are loaded from the cache instead of built again.\n\nHowever, when utilizing the caching system on builds that use `FROM scratch`, insufficient validation of the cached layers could let an attacker create an image that passes the checks for a cache candidate - injecting a potentially malicious image into the build process. Such an attacker would need prior knowledge of the Dockerfile used and be able to insert malicious images into the cache saved on the host.\n\nNote that users with version 23.0 and above would need to manually opt out of using the default Buildkit image builder or use the /build API endpoint to be vulnerable.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "Depending on the malicious image used by the attacker, the impact could range from code execution to stealing information.",
              "is_positive": true
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "Exploitation depends on how exactly Docker is hosted, if there are different containers hosted on the same system, and the Dockerfile used.",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "An attacker needs access to the Dockerfile and to be able to insert custom images into the cache. In addition, users with version 23.0 and above would need to manually opt out of using the default Buildkit image builder or use the /build API endpoint to be vulnerable.",
              "is_positive": true
            }
          ],
          "remediation": "##### Development mitigations\n\nUse `Version = types.BuilderBuildKit` or `NoCache = true` in `ImageBuildOptions` for the `ImageBuild` call. For example:\n```\n\topts := types.ImageBuildOptions{\n\t\tDockerfile: \"Dockerfile\",\n\t\tTags:       []string{\"dockerhub.com/node-hello\"},\n\t\tNoCache:     true,\n\t}\n\tres, err := dockerClient.ImageBuild(ctx, tar, opts)\n\tif err != nil {\n\t\treturn err\n\t}\n```\n\n##### Deployment mitigations\n\nUse the `--no-cache` flag when building the docker image, for example:\n`docker build --no-cache -t {IMAGE_NAME} .`\n\nOr, use Buildkit if possible (which is the default for versions 23.0+):\n`DOCKER_BUILDKIT=1 docker build -t {IMAGE_NAME} .`"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24786",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-835",
              "CWE-1286"
            ]
          }
        ],
        "summary": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
        "severity": "Medium",
        "components": {
          "go://google.golang.org/protobuf:1.31.0": {
            "fixed_versions": [
              "[1.33.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://google.golang.org/protobuf:1.31.0",
                  "full_path": "google.golang.org/protobuf"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-593650",
        "references": [
          "http://www.openwall.com/lists/oss-security/2024/03/08/4",
          "https://go.dev/cl/569356",
          "https://pkg.go.dev/vuln/GO-2024-2611",
          "https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0",
          "https://security.netapp.com/advisory/ntap-20240517-0002",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JDMBHAVSDU2FBDZ45U3A2VLSM35OJ2HU/",
          "https://security.netapp.com/advisory/ntap-20240517-0002/",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24786",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JDMBHAVSDU2FBDZ45U3A2VLSM35OJ2HU",
          "https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023",
          "https://github.com/advisories/GHSA-8r3f-844c-mc37"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-32445",
            "cvss_v3_score": "10.0",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
            "cwe": [
              "CWE-250",
              "CWE-268"
            ]
          }
        ],
        "summary": "Argo Events is an event-driven workflow automation framework for Kubernetes. A user with permission to create/modify EventSource and Sensor custom resources can gain privileged access to the host system and cluster, even without having direct administrative privileges. The EventSource and Sensor CRs allow the corresponding orchestrated pod to be customized with spec.template and spec.template.container (with type k8s.io/api/core/v1.Container), thus, any specification under container such as command, args, securityContext , volumeMount can be specified, and applied to the EventSource or Sensor pod. With these, a user would be able to gain privileged access to the cluster host, if he/she specified the EventSource/Sensor CR with some particular properties under template. This vulnerability is fixed in v1.9.6.",
        "severity": "Critical",
        "components": {
          "go://github.com/argoproj/argo-events:1.7.3": {
            "fixed_versions": [
              "[1.9.6]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-events:1.7.3",
                  "full_path": "github.com/argoproj/argo-events"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-692817",
        "references": [
          "https://github.com/advisories/GHSA-hmp7-x699-cvhq",
          "https://pkg.go.dev/vuln/GO-2025-3608",
          "https://github.com/argoproj/argo-events/pull/3528",
          "https://github.com/argoproj/argo-events/commit/18412293a699f559848b00e6e459c9ce2de0d3e2",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-32445",
          "https://github.com/argoproj/argo-events/security/advisories/GHSA-hmp7-x699-cvhq"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-27144",
            "cwe": [
              "CWE-400",
              "CWE-770"
            ]
          }
        ],
        "summary": "Go JOSE provides an implementation of the Javascript Object Signing and Encryption set of standards in Go, including support for JSON Web Encryption (JWE), JSON Web Signature (JWS), and JSON Web Token (JWT) standards. In versions on the 4.x branch prior to version 4.0.5, when parsing compact JWS or JWE input, Go JOSE could use excessive memory. The code used strings.Split(token, \".\") to split JWT tokens, which is vulnerable to excessive memory consumption when processing maliciously crafted tokens with a large number of `.` characters.  An attacker could exploit this by sending numerous malformed tokens, leading to memory exhaustion and a Denial of Service. Version 4.0.5 fixes this issue. As a workaround, applications could pre-validate that payloads passed to Go JOSE do not contain an excessive number of `.` characters.",
        "severity": "Medium",
        "components": {
          "go://github.com/go-jose/go-jose/v3:3.0.0": {
            "fixed_versions": [
              "[3.0.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/go-jose/go-jose/v3:3.0.0",
                  "full_path": "github.com/go-jose/go-jose/v3"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-671712",
        "references": [
          "https://go.dev/issue/71490",
          "https://github.com/go-jose/go-jose/commit/99b346cec4e86d102284642c5dcbe9bb0cacfc22",
          "https://pkg.go.dev/vuln/GO-2025-3485",
          "https://github.com/go-jose/go-jose/releases/tag/v4.0.5",
          "https://github.com/advisories/GHSA-c6gw-w398-hv78",
          "https://github.com/go-jose/go-jose/security/advisories/GHSA-c6gw-w398-hv78",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-27144",
          "https://github.com/golang/go/issues/71490"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-28180",
            "cvss_v3_score": "4.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-409"
            ]
          }
        ],
        "summary": "Package jose aims to provide an implementation of the Javascript Object Signing and Encryption set of standards. An attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). This vulnerability has been patched in versions 4.0.1, 3.0.3 and 2.6.3.",
        "severity": "Medium",
        "components": {
          "go://github.com/go-jose/go-jose/v3:3.0.0": {
            "fixed_versions": [
              "[3.0.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://github.com/go-jose/go-jose/v3:3.0.0",
                  "full_path": "github.com/go-jose/go-jose/v3"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-593423",
        "references": [
          "https://github.com/go-jose/go-jose/commit/add6a284ea0f844fd6628cba637be5451fe4b28a",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IJ6LAJJ2FTA2JVVOACCV5RZTOIZLXUNJ/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KXKGNCRU7OTM5AHC7YIYBNOWI742PRMY",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XJDO5VSIAOGT2WP63AXAAWNRSVJCNCRH",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MSOMHDKRPU3A2JEMRODT2IREDFBLVPGS/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I6MMWFBOXJA6ZCXNVPDFJ4XMK5PVG5RG",
          "https://github.com/go-jose/go-jose/commit/f4c051a0653d78199a053892f7619ebf96339502",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JNPMXL36YGS3GQEVI3Q5HKHJ7YAAQXL5",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MSOMHDKRPU3A2JEMRODT2IREDFBLVPGS",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UG5FSEYJ3GP27FZXC5YAAMMEC5XWKJHG/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IJ6LAJJ2FTA2JVVOACCV5RZTOIZLXUNJ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JNPMXL36YGS3GQEVI3Q5HKHJ7YAAQXL5/",
          "https://pkg.go.dev/vuln/GO-2024-2631",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-28180",
          "https://github.com/go-jose/go-jose/commit/0dd4dd541c665fb292d664f77604ba694726f298",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GD2GSBQTBLYADASUBHHZV2CZPTSLIPQJ/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJO2U5ACZVACNQXJ5EBRFLFW6DP5BROY",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GD2GSBQTBLYADASUBHHZV2CZPTSLIPQJ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I6MMWFBOXJA6ZCXNVPDFJ4XMK5PVG5RG/",
          "https://github.com/go-jose/go-jose/security/advisories/GHSA-c5q2-7r4c-mv6g",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJO2U5ACZVACNQXJ5EBRFLFW6DP5BROY/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KXKGNCRU7OTM5AHC7YIYBNOWI742PRMY/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UG5FSEYJ3GP27FZXC5YAAMMEC5XWKJHG",
          "https://github.com/advisories/GHSA-c5q2-7r4c-mv6g",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XJDO5VSIAOGT2WP63AXAAWNRSVJCNCRH/"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22869",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-770"
            ]
          }
        ],
        "summary": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
        "severity": "High",
        "components": {
          "go://golang.org/x/crypto:0.14.0": {
            "fixed_versions": [
              "[0.35.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://golang.org/x/crypto:0.14.0",
                  "full_path": "golang.org/x/crypto"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-672306",
        "references": [
          "https://security.netapp.com/advisory/ntap-20250411-0010/",
          "https://security.netapp.com/advisory/ntap-20250411-0010",
          "https://github.com/golang/crypto/commit/7292932d45d55c7199324ab0027cc86e8198aa22",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22869",
          "https://pkg.go.dev/vuln/GO-2025-3487",
          "https://go.dev/issue/71931",
          "https://go.dev/cl/652135",
          "https://go-review.googlesource.com/c/crypto/+/652135",
          "https://github.com/advisories/GHSA-hcg3-q754-cr77"
        ],
        "extended_information": {
          "short_description": "Unbounded resource consumption in Go's `crypto/ssh` allows unauthenticated network attackers to cause denial of service.",
          "full_description": "The golang package [x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh) implements an SSH client and server.\n\nTo establish trust between two sides connecting over ssh, the ssh handshake implements a key exchange. During this process each side sends the other an `SSH_MSG_KEXINIT` packet which initializes the exchange. \n\nOnce side A has sent the `SSH_MSG_KEXINIT` packet, it is open to receiving normal data packets from side B. These packets will be queued, and processed once the key exchange is complete. However, if side B is slow at sending its own `SSH_MSG_KEXINIT` packet and quick at sending the data packets, or side B is a malicious user that purposefully refrains from sending the `SSH_MSG_KEXINIT` packet, the data packets could drain side A's memory and potentially cause denial of service from resource consumption.",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "Any client that is allowed to attempt a key exchange can exploit this vulnerability."
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Denial of service."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The highest impact of this vulnerability would be crashing SSH servers. The victim must call the `NewServerConn` API in order to create an SSH server, which would be vulnerable to this issue.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-45337",
            "cvss_v3_score": "9.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cwe": [
              "CWE-1395",
              "CWE-1108",
              "CWE-285"
            ]
          }
        ],
        "summary": "Applications and libraries which misuse connection.serverAuthenticate (via callback field ServerConfig.PublicKeyCallback) may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding...",
        "severity": "Critical",
        "components": {
          "go://golang.org/x/crypto:0.14.0": {
            "fixed_versions": [
              "[0.31.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://golang.org/x/crypto:0.14.0",
                  "full_path": "golang.org/x/crypto"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-657442",
        "references": [
          "https://github.com/advisories/GHSA-7prj-hgx4-2xc3",
          "https://go.dev/cl/635315",
          "https://github.com/ryanbekhen/nanoproxy/security/advisories/GHSA-7prj-hgx4-2xc3",
          "https://pkg.go.dev/vuln/GO-2024-3330",
          "https://github.com/advisories/GHSA-v778-237x-gjrc",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
          "http://www.openwall.com/lists/oss-security/2024/12/11/2",
          "https://security.netapp.com/advisory/ntap-20250131-0007",
          "https://go.dev/issue/70779",
          "https://security.netapp.com/advisory/ntap-20250131-0007/",
          "https://pkg.go.dev/vuln/GO-2024-3321",
          "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
          "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909"
        ],
        "extended_information": {
          "short_description": "API misuse in Golang x/crypto/ssh may lead to authorization bypass when using public key authentication.",
          "full_description": "The golang package [x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh) implements an SSH client and server.\n\nApplications can supply the `ServerConfig` structure with a function `PublicKeyCallback`, which is called when a client offers a public key for authentication (without needing to control its private key). A call to this function does not guarantee that the key offered is actually used to authenticate.\n\nHowever, it has been discovered that some applications might misuse this API and assume that the last key passed to this function is actually the key used in the authentication process. This assumption may be wrong, due to the caching behavior of the package. Vulnerable applications might later rely on this wrong assumption and make authorization decisions based on this key. An attacker may utilize this for user confusion, essentially bypassing authorization.\n\nApplications are only vulnerable if they rely on the last key passed to `PublicKeyCallback` and make authentication decisions based on it. For example:\n```\nfunc runServer(conn net.Conn) error {\n\tvar pubkey string\n\n\tconfig := ssh.ServerConfig{\n\t\tPublicKeyCallback: func(conn ssh.ConnMetadata, key ssh.PublicKey) (*ssh.Permissions, error) {\n\t\t\tpubkey = ssh.FingerprintSHA256(key)\n\t\t\treturn \u0026ssh.Permissions{}, nil\n\t\t},\n\t}\n\n\tserverConn, chans, reqs, err := ssh.NewServerConn(conn, config)\n\tif err != nil {\n\t\treturn err\n\t}\n\t// now make decisions based on pubkey\n}\n```\n\nThe patch provided for this issue made it so the assumed property of `PublicKeyCallback` actually holds, and the last key passed to it is the key used to authenticate. However, the client may still not control the last key passed to `PublicKeyCallback` if the connection is then authenticated with a different method, such as `PasswordCallback`, `KeyboardInteractiveCallback`, or `NoClientAuth`.",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "Exploitation of this vulnerability requires that the application misuse the\nPublicKeyCallback API. This means that the application must assume that the key passed in the last call\nbefore connection establishment is the key used for authentication. In addition, the application must later make authorization decisions based on this key.",
              "is_positive": true
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The impact of this vulnerability depends on the permissions given to an authenticated user.",
              "is_positive": true
            }
          ],
          "remediation": "##### Development mitigations\n\nApplications should not rely on `PublicKeyCallback` in order to know which key was used in the authentication attempt. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the `ServerConn.Permissions` field.\n\nFor example, instead of:\n```\nfunc runServer(conn net.Conn) error {\n\tvar pubkey string\n\n\tconfig := ssh.ServerConfig{\n\t\tPublicKeyCallback: func(conn ssh.ConnMetadata, key ssh.PublicKey) (*ssh.Permissions, error) {\n\t\t\tpubkey = ssh.FingerprintSHA256(key)\n\t\t\treturn \u0026ssh.Permissions{}, nil\n\t\t},\n\t}\n\n\tserverConn, chans, reqs, err := ssh.NewServerConn(conn, config)\n\tif err != nil {\n\t\treturn err\n\t}\n\t// now make decisions based on pubkey\n}\n```\n\nDo:\n```\nfunc runServer(conn net.Conn) error {\n\tvar pubkey string\n\n\tconfig := ssh.ServerConfig{\n\t\tPublicKeyCallback: func(conn ssh.ConnMetadata, key ssh.PublicKey) (*ssh.Permissions, error) {\n\t\t\treturn \u0026ssh.Permissions{\n\t\t\t\t\t// Record the public key used for authentication.\n\t\t\t\t\tExtensions: map[string]string{\n\t\t\t\t\t\t\"pubkey-fp\": ssh.FingerprintSHA256(Key),\n\t\t\t\t\t},\n\t\t\t\t}, nil\n\t\t},\n\t}\n\n\tserverConn, chans, reqs, err := ssh.NewServerConn(conn, config)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tpubkey = serverConn.Permissions.Extensions[\"pubkey-fp\"]\n\t// now make decisions based on pubkey\n}\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-48795",
            "cvss_v3_score": "5.9",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "CWE-345",
              "CWE-354"
            ]
          }
        ],
        "summary": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
        "severity": "Medium",
        "components": {
          "go://golang.org/x/crypto:0.14.0": {
            "fixed_versions": [
              "[0.17.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://golang.org/x/crypto:0.14.0",
                  "full_path": "golang.org/x/crypto"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-540830",
        "references": [
          "https://www.bitvise.com/ssh-client-version-history#933",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/33XHJUB6ROFUOH2OQNENFROTVH6MHSHA/",
          "https://matt.ucc.asn.au/dropbear/CHANGES",
          "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2024-0002",
          "https://github.com/ronf/asyncssh/tags",
          "https://security-tracker.debian.org/tracker/source-package/trilead-ssh2",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KEOTKBUPZXHE3F352JBYNTSNRXYLWD6P",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KMZCVGUGJZZVDPCVDA7TEB22VUCNEXDD",
          "https://github.com/paramiko/paramiko/issues/2337",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3YQLUQWLIHDB5QCXQEX7HXHAWMOKPP5O/",
          "https://www.lancom-systems.de/service-support/allgemeine-sicherheitshinweise#c243508",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/L5Y6MNNVAPIJSXJERQ6PKZVCIUXSNJK7",
          "https://github.com/apache/mina-sshd/issues/445",
          "https://github.com/jtesta/ssh-audit/commit/8e972c5e94b460379fe0c7d20209c16df81538a5",
          "https://groups.google.com/g/golang-announce/c/qA3XtxvMUyg",
          "https://github.com/ronf/asyncssh/commit/0bc73254f41acb140187e0c89606311f88de5b7b",
          "https://www.reddit.com/r/sysadmin/comments/18idv52/cve202348795_why_is_this_cve_still_undisclosed/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/I724O3LSRCPO4WNVIXTZCT4VVRMXMMSG/",
          "https://github.com/warp-tech/russh/security/advisories/GHSA-45x7-px36-x8w8",
          "https://bugs.gentoo.org/920280",
          "https://github.com/ronf/asyncssh/blob/develop/docs/changes.rst",
          "https://www.vicarius.io/vsociety/posts/cve-2023-48795-detect-openssh-vulnerabilit",
          "https://www.vandyke.com/products/securecrt/history.txt",
          "https://news.ycombinator.com/item?id=38685286",
          "https://support.apple.com/kb/HT214084",
          "https://github.com/ronf/asyncssh/security/advisories/GHSA-hfmc-7525-mj55",
          "https://www.crushftp.com/crush10wiki/Wiki.jsp?page=Update",
          "https://www.netsarang.com/en/xshell-update-history",
          "https://github.com/proftpd/proftpd/blob/d21e7a2e47e9b38f709bec58e3fa711f759ad0e1/RELEASE_NOTES",
          "https://github.com/connectbot/sshlib/compare/2.2.21...2.2.22",
          "https://github.com/mwiede/jsch/pull/461",
          "https://gitlab.com/libssh/libssh-mirror/-/tags",
          "https://www.paramiko.org/changelog.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CHHITS4PUOZAKFIUBQAQZC7JWXMOYE4B",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/C3AFMZ6MH2UHHOPIWT5YLSFV3D2VB3AC/",
          "https://thorntech.com/cve-2023-48795-and-sftp-gateway/",
          "https://github.com/openssh/openssh-portable/commits/master",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/33XHJUB6ROFUOH2OQNENFROTVH6MHSHA",
          "https://news.ycombinator.com/item?id=38684904",
          "https://www.netsarang.com/en/xshell-update-history/",
          "https://lists.debian.org/debian-lts-announce/2023/12/msg00017.html",
          "https://github.com/erlang/otp/blob/d1b43dc0f1361d2ad67601169e90a7fc50bb0369/lib/ssh/doc/src/notes.xml#L39-L42",
          "https://lists.debian.org/debian-lts-announce/2024/01/msg00013.html",
          "https://github.com/proftpd/proftpd/issues/456",
          "https://jadaptive.com/important-java-ssh-security-update-new-ssh-vulnerability-discovered-cve-2023-48795",
          "https://access.redhat.com/security/cve/cve-2023-48795",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CHHITS4PUOZAKFIUBQAQZC7JWXMOYE4B/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/APYIXIQOVDCRWLHTGB4VYMAUIAQLKYJ3",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3CAYYW35MUTNO65RVAELICTNZZFMT2XS",
          "https://git.libssh.org/projects/libssh.git/commit/?h=stable-0.10\u0026id=10e09e273f69e149389b3e0e5d44b8c221c2e7f6",
          "https://github.com/libssh2/libssh2/pull/1291",
          "https://jadaptive.com/important-java-ssh-security-update-new-ssh-vulnerability-discovered-cve-2023-48795/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KEOTKBUPZXHE3F352JBYNTSNRXYLWD6P/",
          "https://help.panic.com/releasenotes/transmit5",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QI3EHAHABFQK7OABNCSF5GMYP6TONTI7/",
          "https://security-tracker.debian.org/tracker/source-package/proftpd-dfsg",
          "https://roumenpetrov.info/secsh/#news20231220",
          "https://ubuntu.com/security/CVE-2023-48795",
          "https://github.com/connectbot/sshlib/commit/5c8b534f6e97db7ac0e0e579331213aa25c173ab",
          "https://bugzilla.redhat.com/show_bug.cgi?id=2254210",
          "https://security.netapp.com/advisory/ntap-20240105-0004",
          "https://news.ycombinator.com/item?id=38732005",
          "https://github.com/advisories/GHSA-45x7-px36-x8w8",
          "https://www.openssh.com/txt/release-9.6",
          "https://security-tracker.debian.org/tracker/CVE-2023-48795",
          "https://github.com/proftpd/proftpd/blob/0a7ea9b0ba9fcdf368374a226370d08f10397d99/RELEASE_NOTES",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3CAYYW35MUTNO65RVAELICTNZZFMT2XS/",
          "https://github.com/NixOS/nixpkgs/pull/275249",
          "http://www.openwall.com/lists/oss-security/2024/04/17/8",
          "https://security-tracker.debian.org/tracker/source-package/libssh2",
          "https://www.openwall.com/lists/oss-security/2023/12/18/2",
          "http://packetstormsecurity.com/files/176280/Terrapin-SSH-Connection-Weakening.html",
          "https://thorntech.com/cve-2023-48795-and-sftp-gateway",
          "https://arstechnica.com/security/2023/12/hackers-can-break-ssh-channel-integrity-using-novel-data-corruption-attack",
          "https://lists.debian.org/debian-lts-announce/2024/01/msg00014.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/APYIXIQOVDCRWLHTGB4VYMAUIAQLKYJ3/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BL5KTLOSLH2KHRN4HCXJPK3JUVLDGEL6/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3YQLUQWLIHDB5QCXQEX7HXHAWMOKPP5O",
          "https://github.com/janmojzis/tinyssh/issues/81",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LZQVUHWVWRH73YBXUQJOD6CKHDQBU3DM/",
          "https://groups.google.com/g/golang-announce/c/-n5WqVC18LQ",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BL5KTLOSLH2KHRN4HCXJPK3JUVLDGEL6",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LZQVUHWVWRH73YBXUQJOD6CKHDQBU3DM",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MKQRBF3DWMWPH36LBCOBUTSIZRTPEZXB/",
          "https://arstechnica.com/security/2023/12/hackers-can-break-ssh-channel-integrity-using-novel-data-corruption-attack/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/L5Y6MNNVAPIJSXJERQ6PKZVCIUXSNJK7/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3JIMLVBDWOP4FUPXPTB4PGHHIOMGFLQE",
          "https://github.com/TeraTermProject/teraterm/releases/tag/v5.1",
          "https://github.com/drakkan/sftpgo/releases/tag/v2.5.6",
          "http://www.openwall.com/lists/oss-security/2023/12/20/3",
          "https://go.dev/cl/550715",
          "https://www.suse.com/c/suse-addresses-the-ssh-v2-protocol-terrapin-attack-aka-cve-2023-48795/",
          "https://github.com/cyd01/KiTTY/issues/520",
          "https://github.com/mwiede/jsch/issues/457",
          "https://www.vicarius.io/vsociety/posts/cve-2023-48795-mitigate-openssh-vulnerability",
          "https://security.gentoo.org/glsa/202312-16",
          "https://www.openwall.com/lists/oss-security/2023/12/20/3",
          "http://seclists.org/fulldisclosure/2024/Mar/21",
          "https://forum.netgate.com/topic/184941/terrapin-ssh-attack",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F7EYCFQCTSGJXWO3ZZ44MGKFC5HA7G3Y/",
          "http://www.openwall.com/lists/oss-security/2023/12/18/3",
          "https://github.com/mkj/dropbear/blob/17657c36cce6df7716d5ff151ec09a665382d5dd/CHANGES#L25",
          "https://lists.debian.org/debian-lts-announce/2024/04/msg00016.html",
          "https://github.com/mwiede/jsch/compare/jsch-0.2.14...jsch-0.2.15",
          "https://oryx-embedded.com/download/#changelog",
          "https://github.com/warp-tech/russh/commit/1aa340a7df1d5be1c0f4a9e247aade76dfdd2951",
          "https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html",
          "https://github.com/erlang/otp/releases/tag/OTP-26.2.1",
          "https://github.com/golang/crypto/commit/9d2ee975ef9fe627bf0a6f01c1f69e8ef1d4f05d",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6Y74KVCPEPT4MVU3LHDWCNNOXOE5ZLUR/",
          "https://github.com/PowerShell/Win32-OpenSSH/issues/2189",
          "https://nest.pijul.com/pijul/thrussh/changes/D6H7OWTTMHHX6BTB3B6MNBOBX2L66CBL4LGSEUSAI2MCRCJDQFRQC",
          "https://www.debian.org/security/2023/dsa-5588",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HYEDEXIKFKTUJIN43RG4B7T5ZS6MHUSP/",
          "https://winscp.net/eng/docs/history#6.2.2",
          "https://github.com/paramiko/paramiko/issues/2337#issuecomment-1887642773",
          "https://www.reddit.com/r/sysadmin/comments/18idv52/cve202348795_why_is_this_cve_still_undisclosed",
          "https://github.com/warp-tech/russh/releases/tag/v0.40.2",
          "https://go.dev/issue/64784",
          "https://bugzilla.suse.com/show_bug.cgi?id=1217950",
          "https://security.netapp.com/advisory/ntap-20240105-0004/",
          "https://www.bitvise.com/ssh-server-version-history",
          "https://www.debian.org/security/2023/dsa-5586",
          "https://twitter.com/TrueSkrillor/status/1736774389725565005",
          "https://www.theregister.com/2023/12/20/terrapin_attack_ssh",
          "https://github.com/ronf/asyncssh/commit/69f5a41b458b29367a65fe469c2b0255b5db210a",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3JIMLVBDWOP4FUPXPTB4PGHHIOMGFLQE/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F7EYCFQCTSGJXWO3ZZ44MGKFC5HA7G3Y",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-48795",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QI3EHAHABFQK7OABNCSF5GMYP6TONTI7",
          "https://www.terrapin-attack.com",
          "https://github.com/hierynomus/sshj/issues/916",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HYEDEXIKFKTUJIN43RG4B7T5ZS6MHUSP",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6Y74KVCPEPT4MVU3LHDWCNNOXOE5ZLUR",
          "https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v9.5.0.0p1-Beta",
          "https://github.com/mscdex/ssh2/commit/97b223f8891b96d6fc054df5ab1d5a1a545da2a3",
          "https://www.freebsd.org/security/advisories/FreeBSD-SA-23:19.openssh.asc",
          "https://pkg.go.dev/vuln/GO-2023-2402",
          "https://help.panic.com/releasenotes/transmit5/",
          "https://github.com/net-ssh/net-ssh/blob/2e65064a52d73396bfc3806c9196fc8108f33cd8/CHANGES.txt#L14-L16",
          "https://github.com/ronf/asyncssh",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/C3AFMZ6MH2UHHOPIWT5YLSFV3D2VB3AC",
          "https://nova.app/releases/#v11.8",
          "https://www.suse.com/c/suse-addresses-the-ssh-v2-protocol-terrapin-attack-aka-cve-2023-48795",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KMZCVGUGJZZVDPCVDA7TEB22VUCNEXDD/",
          "https://github.com/rapier1/hpn-ssh/releases",
          "http://www.openwall.com/lists/oss-security/2023/12/19/5",
          "https://www.openssh.com/openbsd.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/I724O3LSRCPO4WNVIXTZCT4VVRMXMMSG",
          "https://crates.io/crates/thrussh/versions",
          "https://filezilla-project.org/versions.php",
          "https://security.gentoo.org/glsa/202312-17",
          "https://github.com/proftpd/proftpd/blob/master/RELEASE_NOTES",
          "https://github.com/TeraTermProject/teraterm/commit/7279fbd6ef4d0c8bdd6a90af4ada2899d786eec0",
          "http://www.openwall.com/lists/oss-security/2024/03/06/3",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MKQRBF3DWMWPH36LBCOBUTSIZRTPEZXB",
          "https://github.com/ssh-mitm/ssh-mitm/issues/165"
        ],
        "extended_information": {
          "short_description": "A design problem in the SSH protocol may lead to a connection security downgrade by local network attackers via MitM.",
          "full_description": "SSH (Secure Shell) is a cryptographic network protocol that provides a secure way to access and manage remote systems over an unsecured network. [OpenSSH](https://www.openssh.com/) refers to an open-source implementation of the SSH (Secure Shell) protocol, offering encrypted communication for secure access to remote systems over networks.\n\n[AES](https://en.wikipedia.org/wiki/Advanced_Encryption_Standard) (Advanced Encryption Standard) is a widely-used symmetric encryption algorithm that ensures secure and efficient encryption and decryption of data.\n\nThe Terrapin attack is a novel cryptographic attack in the SSH protocol itself, causing the compromised client to erroneously perceive that the server lacks support for recent signature algorithms used in user authentication, through a man-in-the-middle (MitM) attack. It affects a wide range of implementations, including but not limited to OpenSSH, Paramiko, and others. \n\nThere are two vulnerable SSH configurations:\n1. `ChaCha20-Poly1305`\n2. Any `aes(128|192|256)-cbc` ciphers using the default MACs (or any MAC that uses Encrypt-then-MAC, EtM, for example - `hmac-sha2-256-etm@openssh.com`).\n\nThe default OpenSSH client and server are vulnerable to this attack, as they are configured to allow the vulnerable `ChaCha20-Poly1305` cipher. \n\nNote that updating either the server or client is not enough! Both must be patched. A vulnerable client connecting to a fixed server will still result in a vulnerable connection.\n\nIn OpenSSH 9.5, a new feature involving [keystroke timing obfuscation](https://lwn.net/Articles/298833/) was introduced. This attack enables a MitM attacker to disable this feature, and consequently to perform a keystroke timing attack against OpenSSH.\n\nThe researchers describe the ChaCha20-Poly1305 cipher integration as easier to exploit than the aes-cbc EtM. \n\nIn this scenario, a prefix truncation attack is employed, wherein the attacker manipulates sequence numbers to selectively delete chosen packets from the start of a communication channel, compromising channel integrity without detection. Specifically, the attacker can omit the `EXT_INFO` message, crucial for negotiating various protocol extensions (specific signature algorithms) without detection by the client or server. To evade detection, the attacker introduces an ignored packet during the handshake, ensuring the sequence numbers remain aligned.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue has multiple mentions in general media",
              "description": "The vulnerability is an inherent flaw in the SSH protocol itself, which affects a wide range of implementations, including but not limited to OpenSSH, Paramiko, and others. Also, the vulnerability received a lot of media attention."
            },
            {
              "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
              "description": "The researchers who found this vulnerability published an academic paper regarding it."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must be able to perform a man-in-the-middle attack on an SSH client or server.\nAdditionally, the SSH server must use a specific configuration:\n1. Enable the `ChaCha20-Poly1305` cipher (enabled by default)\nOR\n2. Enable any `aes(128|192|256)-cbc` ciphers using the default MACs (or any MAC that uses Encrypt-then-MAC, EtM, for example - `hmac-sha2-256-etm@openssh.com`).\n\nThe default OpenSSH client and server are vulnerable to this attack, as they are configured to allow the vulnerable `ChaCha20-Poly1305` cipher. \n\nMoreover, both SSH server and client must be patched to avoid vulnerable connections.",
              "is_positive": true
            },
            {
              "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
              "description": "Although an academic paper was published, no specific implementation of an exploit was shared.\nIt requires a deep understanding of the SSH protocol and substantial further research.",
              "is_positive": true
            }
          ],
          "remediation": "##### Deployment mitigations\n\nTo mitigate this, one can disable the vulnerable `ChaCha20-Poly1305` cipher in the OpenSSH server configuration.\nSpecifically, add the following to your `/etc/ssh/ssh(d)_config`: `Ciphers -chacha20-poly1305@openssh.com`.\nNote the `-` at the start of the chacha20 cipher string.\nThen, restart your SSH server for it to take effect.\n\nIn addition, ensure you’re not explicitly enabling any `aes(128|192|256)-cbc` ciphers in your OpenSSH configuration while using the default MACs (these ciphers are disabled by default)"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-44487",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "NVD-CWE-noinfo",
              "CWE-400"
            ]
          }
        ],
        "summary": "Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound causes denial of service (High)",
        "severity": "High",
        "components": {
          "go://k8s.io/apimachinery:0.24.3": {
            "fixed_versions": [
              "[0.29.0-alpha.3]",
              "[1.29.0-alpha.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://argoproj/workflow-controller:v3.5.1"
                },
                {
                  "component_id": "generic://sha256:865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12/sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar",
                  "full_path": "sha256__865ba3de9ec39b5a91c833e582a2d119f91f7159caaa1b04e2c4d3ae84981a12.tar"
                },
                {
                  "component_id": "go://github.com/argoproj/argo-workflows/v3/cmd/workflow-controller:3.5.1",
                  "full_path": "bin/workflow-controller"
                },
                {
                  "component_id": "go://k8s.io/apimachinery:0.24.3",
                  "full_path": "k8s.io/apimachinery"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-533304",
        "references": [
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VSRDIV77HNKUSM7SJC5BKE5JSHLHU2NK/",
          "https://security.netapp.com/advisory/ntap-20231016-0001",
          "https://github.com/akka/akka-http/issues/4323",
          "https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JIZSEFC3YKCGABA2BZW6ZJRMDZJMB7PJ/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WE2I52RHNNU42PX6NZ2RBUHSFFJ2LVZX",
          "https://lists.w3.org/Archives/Public/ietf-http-wg/2023OctDec/0025.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/E72T67UPDRXHIDLO3OROR25YAMN4GGW5/",
          "https://www.haproxy.com/blog/haproxy-is-not-affected-by-the-http-2-rapid-reset-attack-cve-2023-44487",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00020.html",
          "https://github.com/apache/trafficserver/pull/10564",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HT7T2R4MQKLIF4ODV4BDLPARWFPCJ5CZ/",
          "https://github.com/etcd-io/etcd/issues/16740",
          "https://blog.litespeedtech.com/2023/10/11/rapid-reset-http-2-vulnerablilty/",
          "http://www.openwall.com/lists/oss-security/2023/10/10/6",
          "https://github.com/caddyserver/caddy/releases/tag/v2.7.5",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-44487",
          "https://www.vicarius.io/vsociety/posts/rapid-reset-cve-2023-44487-dos-in-http2-understanding-the-root-cause",
          "https://github.com/grpc/grpc-go/security/advisories/GHSA-m425-mq94-257g",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2MBEPPC36UBVOZZNAXFHKLFGSLCMN5LI/",
          "https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZLU6U2R2IC2K64NDPNMV55AUAO65MAF4",
          "http://www.openwall.com/lists/oss-security/2023/10/10/7",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JMEXY22BFG5Q64HQCM5CK2Q7KDKVV4TY",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VSRDIV77HNKUSM7SJC5BKE5JSHLHU2NK/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZKQSIKIAT5TJ3WSLU3RDBQ35YX4GY4V3/",
          "https://github.com/linkerd/website/pull/1695/commits/4b9c6836471bc8270ab48aae6fd2181bc73fd632",
          "https://github.com/kumahq/kuma/pull/8034",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZKQSIKIAT5TJ3WSLU3RDBQ35YX4GY4V3",
          "https://github.com/alibaba/tengine/issues/1872",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00047.html",
          "https://github.com/apache/httpd/blob/afcdbeebbff4b0c50ea26cdd16e178c0d1f24152/modules/http2/h2_mplx.c#L1101-L1113",
          "http://www.openwall.com/lists/oss-security/2023/10/20/8",
          "https://chaos.social/@icing/111210915918780532",
          "https://nodejs.org/en/blog/vulnerability/october-2023-security-releases/",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00024.html",
          "https://www.debian.org/security/2023/dsa-5522",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZB43REMKRQR62NJEI7I5NQ4FSXNLBKRT/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/E72T67UPDRXHIDLO3OROR25YAMN4GGW5",
          "https://security.netapp.com/advisory/ntap-20240621-0007/",
          "https://github.com/advisories/GHSA-xpw8-rcwv-8f8p",
          "https://community.traefik.io/t/is-traefik-vulnerable-to-cve-2023-44487/20125",
          "https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/",
          "https://news.ycombinator.com/item?id=37837043",
          "https://news.ycombinator.com/item?id=37831062",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2",
          "https://github.com/junkurihara/rust-rpxy/issues/97",
          "https://github.com/nghttp2/nghttp2/pull/1961",
          "https://github.com/line/armeria/pull/5232",
          "https://github.com/apache/apisix/issues/10320",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZLU6U2R2IC2K64NDPNMV55AUAO65MAF4/",
          "https://github.com/grpc/grpc-go/pull/6703",
          "https://aws.amazon.com/security/security-bulletins/AWS-2023-011",
          "https://github.com/dotnet/announcements/issues/277",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BFQD3KUEMFBHPAPBGLWQC34L4OWL5HAZ",
          "https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.14",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FNA62Q767CFAFHBCDKYNPBMZWB7TWYVU/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WLPRQ5TWUQQXYWBJM7ECYDAIL2YVKIUH",
          "https://github.com/grpc/grpc/releases/tag/v1.59.2",
          "https://github.com/tempesta-tech/tempesta/issues/1986",
          "https://bugzilla.redhat.com/show_bug.cgi?id=2242803",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2MBEPPC36UBVOZZNAXFHKLFGSLCMN5LI",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/X6QXN4ORIVF6XBW4WWFE7VNPVC74S45Y",
          "https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/",
          "https://github.com/kumahq/kuma/pull/8001",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/E72T67UPDRXHIDLO3OROR25YAMN4GGW5/",
          "https://arstechnica.com/security/2023/10/how-ddosers-used-the-http-2-protocol-to-deliver-attacks-of-unprecedented-size/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HT7T2R4MQKLIF4ODV4BDLPARWFPCJ5CZ/",
          "https://arstechnica.com/security/2023/10/how-ddosers-used-the-http-2-protocol-to-deliver-attacks-of-unprecedented-size",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LKYHSZQFDNR7RSA7LHVLLIAQMVYCUGBG/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2/",
          "https://www.theregister.com/2023/10/10/http2_rapid_reset_zeroday/",
          "https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LNMZJCDHGLJJLXO4OXWJMTVQRNWOC7UL/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE/",
          "https://www.darkreading.com/cloud/internet-wide-zero-day-bug-fuels-largest-ever-ddos-event",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JMEXY22BFG5Q64HQCM5CK2Q7KDKVV4TY/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WLPRQ5TWUQQXYWBJM7ECYDAIL2YVKIUH/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LNMZJCDHGLJJLXO4OXWJMTVQRNWOC7UL/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/X6QXN4ORIVF6XBW4WWFE7VNPVC74S45Y/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/X6QXN4ORIVF6XBW4WWFE7VNPVC74S45Y/",
          "https://github.com/arkrwn/PoC/tree/main/CVE-2023-44487",
          "https://github.com/Azure/AKS/issues/3947",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LNMZJCDHGLJJLXO4OXWJMTVQRNWOC7UL",
          "https://github.com/netty/netty",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JMEXY22BFG5Q64HQCM5CK2Q7KDKVV4TY",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JMEXY22BFG5Q64HQCM5CK2Q7KDKVV4TY/",
          "https://github.com/dotnet/core/blob/e4613450ea0da7fd2fc6b61dfb2c1c1dec1ce9ec/release-notes/6.0/6.0.23/6.0.23.md?plain=1#L73",
          "https://security.netapp.com/advisory/ntap-20231016-0001/",
          "https://lists.debian.org/debian-lts-announce/2023/11/msg00001.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2/",
          "https://www.bleepingcomputer.com/news/security/new-http-2-rapid-reset-zero-day-attack-breaks-ddos-records/",
          "https://github.com/nghttp2/nghttp2/security/advisories/GHSA-vx74-f528-fxqg",
          "https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61",
          "https://blog.vespa.ai/cve-2023-44487/",
          "https://github.com/caddyserver/caddy/issues/5877",
          "https://ubuntu.com/security/CVE-2023-44487",
          "https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products",
          "https://news.ycombinator.com/item?id=37830998",
          "https://bugzilla.proxmox.com/show_bug.cgi?id=4988",
          "http://www.openwall.com/lists/oss-security/2023/10/18/4",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BFQD3KUEMFBHPAPBGLWQC34L4OWL5HAZ/",
          "https://www.cisa.gov/news-events/alerts/2023/10/10/http2-rapid-reset-vulnerability-cve-2023-44487",
          "https://news.ycombinator.com/item?id=37830987",
          "https://github.com/varnishcache/varnish-cache/issues/3996",
          "https://www.debian.org/security/2023/dsa-5521",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/2MBEPPC36UBVOZZNAXFHKLFGSLCMN5LI",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WE2I52RHNNU42PX6NZ2RBUHSFFJ2LVZX/",
          "https://forums.swift.org/t/swift-nio-http2-security-update-cve-2023-44487-http-2-dos/67764",
          "https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0",
          "https://istio.io/latest/news/security/istio-security-2023-004/",
          "https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ",
          "https://github.com/grpc/grpc-go/releases",
          "https://github.com/projectcontour/contour/pull/5826",
          "https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832",
          "https://security.netapp.com/advisory/ntap-20240621-0006",
          "https://github.com/nodejs/node/pull/50121",
          "https://security.netapp.com/advisory/ntap-20240621-0007",
          "https://linkerd.io/2023/10/12/linkerd-cve-2023-44487",
          "https://blog.litespeedtech.com/2023/10/11/rapid-reset-http-2-vulnerablilty",
          "https://www.openwall.com/lists/oss-security/2023/10/10/6",
          "https://www.debian.org/security/2023/dsa-5549",
          "https://bugzilla.suse.com/show_bug.cgi?id=1216123",
          "https://github.com/ninenines/cowboy/issues/1615",
          "https://www.debian.org/security/2023/dsa-5558",
          "http://www.openwall.com/lists/oss-security/2023/10/19/6",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/E72T67UPDRXHIDLO3OROR25YAMN4GGW5",
          "https://www.theregister.com/2023/10/10/http2_rapid_reset_zeroday",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WLPRQ5TWUQQXYWBJM7ECYDAIL2YVKIUH/",
          "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-http2-reset-d8Kf32vZ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3N4NJ7FR4X4FPZUGNTQAPSTVB2HB2Y4A",
          "https://github.com/micrictor/http2-rst-stream",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VHUHTSXLXGXS7JYKBXTA3VINUPHTNGVU",
          "https://www.netlify.com/blog/netlify-successfully-mitigates-cve-2023-44487/",
          "https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.0-M12",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZKQSIKIAT5TJ3WSLU3RDBQ35YX4GY4V3/",
          "https://msrc.microsoft.com/blog/2023/10/microsoft-response-to-distributed-denial-of-service-ddos-attacks-against-http/2/",
          "https://github.com/h2o/h2o/pull/3291",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VHUHTSXLXGXS7JYKBXTA3VINUPHTNGVU/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3N4NJ7FR4X4FPZUGNTQAPSTVB2HB2Y4A/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2",
          "https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge",
          "https://go.dev/cl/534235",
          "https://github.com/haproxy/haproxy/issues/2312",
          "https://my.f5.com/manage/s/article/K000137106",
          "https://github.com/nghttp2/nghttp2",
          "https://github.com/facebook/proxygen/pull/466",
          "https://blog.cloudflare.com/zero-day-rapid-reset-http2-record-breaking-ddos-attack/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LKYHSZQFDNR7RSA7LHVLLIAQMVYCUGBG",
          "https://github.com/apache/tomcat/tree/main/java/org/apache/coyote/http2",
          "http://www.openwall.com/lists/oss-security/2023/10/13/9",
          "https://linkerd.io/2023/10/12/linkerd-cve-2023-44487/",
          "https://github.com/eclipse/jetty.project/issues/10679",
          "https://github.com/akka/akka-http/pull/4325",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JIZSEFC3YKCGABA2BZW6ZJRMDZJMB7PJ/",
          "https://akka.io/security/akka-http-cve-2023-44487.html",
          "https://github.com/advisories/GHSA-m425-mq94-257g",
          "https://github.com/oqtane/oqtane.framework/discussions/3367",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LKYHSZQFDNR7RSA7LHVLLIAQMVYCUGBG",
          "https://www.bleepingcomputer.com/news/security/new-http-2-rapid-reset-zero-day-attack-breaks-ddos-records",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HT7T2R4MQKLIF4ODV4BDLPARWFPCJ5CZ",
          "https://github.com/golang/go/issues/63417",
          "https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76",
          "https://github.com/bcdannyboy/CVE-2023-44487",
          "https://github.com/envoyproxy/envoy/pull/30055",
          "https://github.com/kumahq/kuma",
          "https://access.redhat.com/security/cve/cve-2023-44487",
          "https://github.com/akka/akka-http/pull/4324",
          "https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv",
          "https://go.dev/cl/534215",
          "https://github.com/advisories/GHSA-qppj-fm5r-hxr3",
          "https://msrc.microsoft.com/blog/2023/10/microsoft-response-to-distributed-denial-of-service-ddos-attacks-against-http/2",
          "http://www.openwall.com/lists/oss-security/2023/10/13/4",
          "https://github.com/advisories/GHSA-vx74-f528-fxqg",
          "https://security.netapp.com/advisory/ntap-20240426-0007/",
          "https://security.netapp.com/advisory/ntap-20240426-0007",
          "https://github.com/kazu-yamamoto/http2/issues/93",
          "https://mailman.nginx.org/pipermail/nginx-devel/2023-October/S36Q5HBXR7CAIMPLLPRSSSYR4PCMWILK.html",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00023.html",
          "https://github.com/apple/swift-nio-http2/security/advisories/GHSA-qppj-fm5r-hxr3",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BFQD3KUEMFBHPAPBGLWQC34L4OWL5HAZ",
          "https://lists.debian.org/debian-lts-announce/2023/11/msg00012.html",
          "https://github.com/grpc/grpc-go/commit/f2180b4d5403d2210b30b93098eb7da31c05c721",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JIZSEFC3YKCGABA2BZW6ZJRMDZJMB7PJ",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BFQD3KUEMFBHPAPBGLWQC34L4OWL5HAZ/",
          "https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps",
          "https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FNA62Q767CFAFHBCDKYNPBMZWB7TWYVU",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3N4NJ7FR4X4FPZUGNTQAPSTVB2HB2Y4A/",
          "https://github.com/h2o/h2o/security/advisories/GHSA-2m7v-gc89-fjqf",
          "https://blog.cloudflare.com/zero-day-rapid-reset-http2-record-breaking-ddos-attack",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WLPRQ5TWUQQXYWBJM7ECYDAIL2YVKIUH",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZLU6U2R2IC2K64NDPNMV55AUAO65MAF4/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HT7T2R4MQKLIF4ODV4BDLPARWFPCJ5CZ",
          "https://blog.qualys.com/vulnerabilities-threat-research/2023/10/10/cve-2023-44487-http-2-rapid-reset-attack",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00045.html",
          "https://www.netlify.com/blog/netlify-successfully-mitigates-cve-2023-44487",
          "https://github.com/opensearch-project/data-prepper/issues/3474",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZB43REMKRQR62NJEI7I5NQ4FSXNLBKRT",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZKQSIKIAT5TJ3WSLU3RDBQ35YX4GY4V3",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZB43REMKRQR62NJEI7I5NQ4FSXNLBKRT/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LKYHSZQFDNR7RSA7LHVLLIAQMVYCUGBG/",
          "https://www.phoronix.com/news/HTTP2-Rapid-Reset-Attack",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WE2I52RHNNU42PX6NZ2RBUHSFFJ2LVZX",
          "https://discuss.hashicorp.com/t/hcsec-2023-32-vault-consul-and-boundary-affected-by-http-2-rapid-reset-denial-of-service-vulnerability-cve-2023-44487/59715",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZLU6U2R2IC2K64NDPNMV55AUAO65MAF4",
          "https://security.netapp.com/advisory/ntap-20240621-0006/",
          "https://edg.io/lp/blog/resets-leaks-ddos-and-the-tale-of-a-hidden-cve",
          "https://blog.vespa.ai/cve-2023-44487",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/X6QXN4ORIVF6XBW4WWFE7VNPVC74S45Y",
          "https://github.com/kumahq/kuma/pull/8023",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZB43REMKRQR62NJEI7I5NQ4FSXNLBKRT",
          "https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JIZSEFC3YKCGABA2BZW6ZJRMDZJMB7PJ",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FNA62Q767CFAFHBCDKYNPBMZWB7TWYVU",
          "https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.81",
          "http://www.openwall.com/lists/oss-security/2023/10/18/8",
          "https://www.debian.org/security/2023/dsa-5570",
          "https://openssf.org/blog/2023/10/10/http-2-rapid-reset-vulnerability-highlights-need-for-rapid-response",
          "https://lists.apache.org/thread/5py8h42mxfsn8l1wy6o41xwhsjlsd87q",
          "https://openssf.org/blog/2023/10/10/http-2-rapid-reset-vulnerability-highlights-need-for-rapid-response/",
          "https://istio.io/latest/news/security/istio-security-2023-004",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3N4NJ7FR4X4FPZUGNTQAPSTVB2HB2Y4A",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VSRDIV77HNKUSM7SJC5BKE5JSHLHU2NK",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/2MBEPPC36UBVOZZNAXFHKLFGSLCMN5LI/",
          "https://gist.github.com/adulau/7c2bfb8e9cdbe4b35a5e131c66a0c088",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FNA62Q767CFAFHBCDKYNPBMZWB7TWYVU/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LNMZJCDHGLJJLXO4OXWJMTVQRNWOC7UL",
          "https://github.com/kazu-yamamoto/http2/commit/f61d41a502bd0f60eb24e1ce14edc7b6df6722a1",
          "https://www.eclipse.org/lists/jetty-announce/msg00181.html",
          "https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack",
          "https://netty.io/news/2023/10/10/4-1-100-Final.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VSRDIV77HNKUSM7SJC5BKE5JSHLHU2NK",
          "https://github.com/Kong/kong/discussions/11741",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VHUHTSXLXGXS7JYKBXTA3VINUPHTNGVU",
          "https://github.com/kubernetes/kubernetes/pull/121120",
          "https://github.com/apache/httpd-site/pull/10",
          "https://aws.amazon.com/security/security-bulletins/AWS-2023-011/",
          "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-44487",
          "https://www.cve.org/CVERecord?id=CVE-2023-44487",
          "https://www.debian.org/security/2023/dsa-5540",
          "https://tomcat.apache.org/security-8.html#Fixed_in_Apache_Tomcat_8.5.94",
          "https://github.com/openresty/openresty/issues/930",
          "https://martinthomson.github.io/h2-stream-limits/draft-thomson-httpbis-h2-stream-limits.html",
          "https://github.com/netty/netty/security/advisories/GHSA-xpw8-rcwv-8f8p",
          "https://github.com/icing/mod_h2/blob/0a864782af0a942aa2ad4ed960a6b32cd35bcf0a/mod_http2/README.md?plain=1#L239-L244",
          "https://security.gentoo.org/glsa/202311-09",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VHUHTSXLXGXS7JYKBXTA3VINUPHTNGVU/",
          "https://security.paloaltonetworks.com/CVE-2023-44487",
          "https://seanmonstar.com/post/730794151136935936/hyper-http2-rapid-reset-unaffected",
          "https://github.com/hyperium/hyper/issues/3337",
          "https://github.com/microsoft/CBL-Mariner/pull/6381",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WE2I52RHNNU42PX6NZ2RBUHSFFJ2LVZX/",
          "https://go.dev/issue/63417",
          "https://cgit.freebsd.org/ports/commit/?id=c64c329c2c1752f46b73e3e6ce9f4329be6629f9"
        ],
        "extended_information": {
          "short_description": "A design problem in the implementation of the HTTP/2 protocol may lead to DoS and ease the possibility of DDoS in web server applications by abusing request cancellation.",
          "full_description": "[The HTTP (Hypertext Transfer Protocol)](https://developer.mozilla.org/en-US/docs/Web/HTTP) is a fundamental protocol of the World Wide Web, enabling the exchange of data between a client (typically a web browser) and a server. It defines the rules for requesting and transmitting web pages and other resources over the internet. Request and response messages are exchanged as a stream of ASCII characters, sent over a reliable transport layer like TCP.\n\n[HTTP/2](https://http2.github.io/) is a modern network protocol designed to improve the performance and efficiency of web communication. It replaces the older HTTP/1.1 protocol and introduces features like header compression and enhanced request cancellation mechanisms, which collectively enhance the speed and responsiveness of websites.\n\nThis request cancellation mechanism allows clients to terminate unnecessary or redundant requests without waiting for a server's response, reducing network congestion and further improving the overall responsiveness of web applications.\n\nHTTP/2 resolves numerous concerns found in HTTP/1.1 by organizing each HTTP message into a series of HTTP/2 frames. These frames include type, length, flags, stream identifier (ID), and payload. The stream ID is essential in clearly associating specific bytes on the network with their corresponding messages, facilitating secure multiplexing and concurrent processing. These streams are bidirectional, enabling clients to transmit frames, and servers to respond with frames using the same ID.\n\nAs detailed in [this technical analysis](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/), there's a vulnerability in the way request cancellation is implemented. The flaw lies in the process of sending an excessive number of requests (specifically, `HEADERS` frames), each immediately followed by a request cancellation frame utilizing the `RST_STREAM` frame. This sequence rapidly leads to a substantial consumption of server-side resources. Consequently, this vulnerability amplifies the risk of Distributed Denial of Service (DDoS) attacks, making it easier to overwhelm and exhaust the server's available resources.\n\nA lot of server applications are vulnerable to the Http/2 Rapid Reset attack.\nHowever, note that HTTP/2 must be enabled, which is not the default configuration on most applications (excluding nghttp2 for example).\nA non-exhaustive list of these vulnerable web applications:\n```\n- Tomcat\n- Jetty\n- NGINX on certain conditions\n- nghttp2\n- Netty\n```",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "The issue has an exploit published",
              "description": "A [PoC exists](https://github.com/imabee101/CVE-2023-44487) for this issue"
            },
            {
              "name": "The issue has been reported to be actively exploited in public networks",
              "description": "Cloudflare identified this vulnerability being exploited in a DDoS attack of unprecedented scale on August 25, 2023, which surpassed their previous largest recorded attack by almost threefold."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker should attack a web server application with HTTP/2 protocol enabled and no (or a high) keepalive-requests options.",
              "is_positive": true
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "This issue can lead to DoS on popular server applications using HTTP/2 protocol and ease the possibility of DDoS attack."
            },
            {
              "name": "The issue has multiple mentions in general media",
              "description": "The vulnerability received extensive media coverage from Google, Cloudflare, and more."
            }
          ],
          "remediation": "##### Deployment mitigations\n\nA possible mitigation is to limit the maximum number of requests that can be made over a single keep-alive connection.\n\n##### Deployment mitigations\n\nFor NGINX:\n\nDisabling HTTP/2 in NGINX is not necessary. Simply ensure you have configured:\n\n- `keepalive_requests` should be kept at the default setting of 1000 requests\n- `http2_max_concurrent_streams` should be kept at the default setting of 128 streams\n- `limit_conn` and `limit_req` should be set \"with a reasonable setting balancing application performance and security\"\n\n##### Development mitigations\n\nFor Nghttp2:\nImplement `nghttp2_on_frame_recv_callback` callback function, and check and count `RST_STREAM` frames. If an excessive number of `RST_STREAM` frames are received, then take action, such as dropping the connection silently, or calling `nghttp2_submit_goaway` and gracefully terminate the connection.\n```c\n#include \u003cnghttp2/nghttp2.h\u003e\n\n// Callback function for handling frame reception\nint on_frame_recv_callback(nghttp2_session* session,\n                           const nghttp2_frame* frame, void* user_data) {\n    // Check if the received frame is an RST_STREAM frame\n    if (frame-\u003ehd.type == NGHTTP2_RST_STREAM) {\n        // Increment a counter for RST_STREAM frames\n        int* rst_stream_counter = (int*)user_data;\n        (*rst_stream_counter)++;\n        \n        // Define a threshold for excessive RST_STREAM frames\n        int rst_stream_threshold = 10;  // Adjust this value as needed\n        \n        // If the threshold is exceeded, take action (e.g., close the connection)\n        if (*rst_stream_counter \u003e rst_stream_threshold) {\n            // Here, you can choose to close the connection gracefully or drop it\n            // For demonstration purposes, we'll just print a message\n            printf(\"Excessive RST_STREAM frames received. Closing the connection.\\n\");\n            // You can call nghttp2_submit_goaway() to send a GOAWAY frame if needed.\n            // nghttp2_submit_goaway(session, NGHTTP2_FLAG_NONE, error_code, opaque_data);\n            // Then, close the connection.\n        }\n    }\n    \n    // Continue processing other frames if needed\n    return 0;\n}\n\nint main() {\n    // Initialize nghttp2_session and set up the on_frame_recv_callback\n    nghttp2_session* session;\n    int rst_stream_counter = 0;\n    \n    // Initialize nghttp2_session, set up callbacks, etc.\n    // ...\n\n    // Set the user data to be passed to the callback\n    nghttp2_session_user_data(session, \u0026rst_stream_counter);\n    \n    // Register the on_frame_recv_callback\n    nghttp2_session_callbacks* callbacks;\n    nghttp2_session_callbacks_new(\u0026callbacks);\n    nghttp2_session_callbacks_set_on_frame_recv_callback(callbacks, on_frame_recv_callback);\n    // Other callback registrations here...\n    \n    // Attach the callbacks to the session\n    nghttp2_session_server_new(\u0026session, callbacks, \u0026rst_stream_counter);\n    \n    // Start processing HTTP/2 frames\n    // ...\n\n    // Cleanup and finish the program\n    // ...\n\n    return 0;\n}\n```\n\n##### Development mitigations\n\nFor Golang:\n\nThe default stream concurrency limit in `golang` is `250 streams (requests) per HTTP/2 connection`. This value may be adjusted in the `golang.org/x/net/http2` package using the `Server.MaxConcurrentStreams` setting and the `ConfigureServer` function which are available in `golang.org/x/net/http2`.\n\n```go\nimport (\n\t\"fmt\"\n\t\"golang.org/x/net/http2\"\n\t\"net/http\"\n)\n\nfunc main() {\n\t// Create an HTTP/2 server instance\n\thttp2Server := \u0026http2.Server{}\n\n\t// Set the desired stream concurrency limit\n\tmaxConcurrentStreams := 500 // Change this to your desired limit\n\thttp2Server.MaxConcurrentStreams = uint32(maxConcurrentStreams)\n\n\t// Configure an HTTP server to use HTTP/2 with the adjusted settings\n\tserver := \u0026http.Server{\n\t\tAddr:    \":8080\",\n\t\tHandler: http.HandlerFunc(handleRequest),\n\t}\n\thttp2.ConfigureServer(server, http2Server)\n\n\t// Start the HTTP server\n\terr := server.ListenAndServeTLS(\"cert.pem\", \"key.pem\")\n\tif err != nil {\n\t\tfmt.Println(\"Error:\", err)\n\t}\n}\n```\n\n##### Development mitigations\n\nFor netty:\n```java\nimport io.netty.handler.codec.http2.Http2FrameListener;\nimport io.netty.handler.codec.http2.Http2FrameStream;\nimport io.netty.handler.codec.http2.Http2ResetFrame;\nimport io.netty.handler.codec.http2.Http2HeadersFrame;\n\npublic class CustomHttp2FrameListener implements Http2FrameListener {\n    private int rstFrameCount = 0;\n    private int maxRstFrameCount = 10; // Adjust this to your desired limit\n    private long resetTimeMillis = System.currentTimeMillis();\n    private long resetTimeIntervalMillis = 60000; // 60 seconds\n\n    @Override\n    public int onDataRead(Http2FrameStream stream, byte[] data, int padding, boolean endOfStream) {\n        // Handle data frames if needed\n        return 0;\n    }\n\n    @Override\n    public void onHeadersRead(Http2FrameStream stream, Http2HeadersFrame headersFrame) {\n        // Handle headers frames if needed\n    }\n\n    @Override\n    public void onHeadersRead(Http2FrameStream stream, Http2HeadersFrame headersFrame, boolean endOfStream) {\n        // Handle headers frames if needed\n    }\n\n    @Override\n    public void onRstStreamRead(Http2FrameStream stream, Http2ResetFrame resetFrame) {\n        long currentTimeMillis = System.currentTimeMillis();\n        \n        // Check if the reset time interval has passed, and reset the count if needed\n        if (currentTimeMillis - resetTimeMillis \u003e= resetTimeIntervalMillis) {\n            rstFrameCount = 0;\n            resetTimeMillis = currentTimeMillis;\n        }\n        \n        rstFrameCount++;\n        \n        // Check if the count exceeds the limit\n        if (rstFrameCount \u003e maxRstFrameCount) {\n            // Take action, e.g., close the connection, log, or drop frames\n            // You can use stream or resetFrame to get more context if needed.\n            // To close the connection, you can use stream.connection().close();\n        }\n    }\n}\n```"
        }
      }
    ],
    "component_id": "docker://argoproj/workflow-controller:v3.5.1",
    "package_type": "docker",
    "status": "completed"
  }
]
