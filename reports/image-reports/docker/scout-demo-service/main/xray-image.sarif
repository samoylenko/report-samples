{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "addresses": [],
      "graphs": [],
      "invocations": [
        {
          "executionSuccessful": true,
          "notificationConfigurationOverrides": [],
          "ruleConfigurationOverrides": [],
          "toolConfigurationNotifications": [],
          "toolExecutionNotifications": [],
          "workingDirectory": {
            "index": -1,
            "uri": "file:///tmp/jfrog.cli.temp.-1756734664-3407022912"
          }
        }
      ],
      "language": "en-US",
      "logicalLocations": [],
      "newlineSequences": [
        "\r\n",
        "\n"
      ],
      "policies": [],
      "redactionTokens": [],
      "results": [
        {
          "fingerprints": {
            "jfrogFingerprintHash": "1ce4ab002f932539c06e71a11e347c5d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-47764] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): 2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
            "text": "[CVE-2024-47764] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar "
          },
          "properties": {
            "fixedVersion": "[0.7.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-47764_cookie_0.4.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "f351f73ce8269b150835bc204b6e35f7"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-26519] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2025-26519] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.2.5-r10]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-26519_3.14:musl-utils_1.2.2-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "3e26812fc236fb014c2ddf922f886517"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-26519] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2025-26519] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.2.5-r10]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-26519_3.14:musl_1.2.2-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "7ac945c21d5218bccf167534311d0c70"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-46195] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2021-46195] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-46195_3.14:libgcc_10.3.1_git20210424-r2",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5afd7928f9325203487465a90de1bd7b"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-46195] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2021-46195] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-46195_3.14:libstdc++_10.3.1_git20210424-r2",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "2b0ca31a2b0fb59edf425ff7964e8afd"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-4039] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-4039] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[13.2.1_git20231014-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-4039_3.14:libgcc_10.3.1_git20210424-r2",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5b256d5cb853fc6a9aaa4ba374dd78ed"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-4039] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-4039] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[13.2.1_git20231014-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-4039_3.14:libstdc++_10.3.1_git20210424-r2",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "047c935f17f377e54fb1dede0f0442ed"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-27943] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2022-27943] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-27943_3.14:libgcc_10.3.1_git20210424-r2",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "ac6424508b5c495a52a4c9e181046c0c"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-27943] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2022-27943] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-27943_3.14:libstdc++_10.3.1_git20210424-r2",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b7ee50cbce79e6f114316e36c60fe3d2"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-3826] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2021-3826] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-3826_3.14:libgcc_10.3.1_git20210424-r2",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "2e8d9cecc6f3cba6de6600f85c5b38aa"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-3826] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2021-3826] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-3826_3.14:libstdc++_10.3.1_git20210424-r2",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b473d90fda9154a9527a026d38e3f4f5"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-43799] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): 2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
            "text": "[CVE-2024-43799] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar "
          },
          "properties": {
            "fixedVersion": "[0.19.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-43799_send_0.17.1",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "db54c59388adff5bf9bab6c5e8b75b23"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-24999] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): 2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
            "text": "[CVE-2022-24999] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar "
          },
          "properties": {
            "fixedVersion": "[6.10.3], [6.2.4], [6.3.3], [6.4.1], [6.5.3], [6.6.1], [6.7.3], [6.8.3], [6.9.7]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-24999_qs_6.7.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "db17a7965d391278ba7daee2230fcff6"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-43800] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): 2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
            "text": "[CVE-2024-43800] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar "
          },
          "properties": {
            "fixedVersion": "[1.16.0], [2.1.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-43800_serve-static_1.14.1",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "6273ae3646c3a962ff257d50c7b4e970"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-37434] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-37434] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.2.12-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-37434_3.14:zlib_1.2.11-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5cbc091c93dbc7aa3f296f3eb0d16229"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2018-25032] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2018-25032] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.2.11-r4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2018-25032_3.14:zlib_1.2.11-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "80087e3d7d37e02ad719b13299449cb4"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-5363] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-5363] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.4-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-5363_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "006294b4785b18e0a01f06337ecbda11"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-5363] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-5363] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.4-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-5363_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "7011fb9a345e3e541b34fadae9711fd7"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0216] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0216] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.8-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0216_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "4066d0240d08c644534e8d76ffdf41b3"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0216] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0216] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.8-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0216_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5291dac021f9be58496de4751e1a2398"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-0778] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-0778] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1n-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-0778_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "dd521c119d1d5743ac5119c491794671"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-0778] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-0778] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1n-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-0778_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "856d9e2b348cf2c168e3450219d92ac3"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0466] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0466] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.8-r3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0466_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "06a0bc4a49ac316f06a8afa8adbd87ed"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0466] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0466] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.8-r3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0466_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "29be2889d38ae6c716d5cea7d8dcf9b2"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2016-7798] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2016-7798] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2016-7798_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "9f2a29ce7aecc02826c7880fef901239"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2016-7798] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2016-7798] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2016-7798_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "bb4609131327119d6c9a2d63ae21aed0"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-5535] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-5535] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.1-r1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-5535_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b9c81b4f6b3340b143e7923a1bd61f7d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-5535] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-5535] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.1-r1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-5535_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "f156b27650816c7cde143268acf57675"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-2511] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-2511] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.2.1-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-2511_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "9930ddb7a0f881d90cacfbb6da393f97"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-2511] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-2511] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.2.1-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-2511_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "e5e85f3d949f1861289b67d89d385463"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-4575] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2025-4575] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.5.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-4575_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "9bfacb4446686fd25f00ce97edc22c12"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-4575] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2025-4575] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.5.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-4575_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "c53d70152c73cbe379154c7a1f37f9bc"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-9355] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-9355] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-9355_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "2e2ce13b2aee61aeae2d13a93c8e23d9"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-9355] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-9355] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-9355_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "a290d0bb8aad257195b92f895bc29c23"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-3996] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-3996] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.7-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-3996_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "7cc9a7998ec6619de1cc28d92af23bbf"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-3996] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-3996] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.7-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-3996_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5146f8559105e86f7cfe10170c11fdf5"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-3446] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-3446] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.1-r3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-3446_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "dbfa9aaa27186fe519c00b00af7e79dd"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-3446] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-3446] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.1-r3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-3446_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "89bf694912040f3aa37ce0c70ed59e39"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0217] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0217] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.8-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0217_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "8e64f18800b0978b153c9a42494528dd"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0217] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0217] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.8-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0217_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "c807a8b7f30b067a71bea394d295e9fe"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-2097] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-2097] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1q-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-2097_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "510f98754411fbabea3407676f0e21ac"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-2097] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-2097] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1q-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-2097_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "2a060c6bf312521fa220c48b235baefb"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2000-1254] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2000-1254] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2000-1254_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "7918e8c0c0ea464ad46f1f2be3c90414"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2000-1254] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2000-1254] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2000-1254_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "1512b4b51c68b0f076f42fca154bd88a"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-2975] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-2975] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.1-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-2975_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "dcfa7ed46c4f653c31ac2a7e4a2161cd"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-2975] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-2975] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.1-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-2975_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "58450f028f4f73ad71f74d413878e8c9"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-13176] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-13176] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.2-r5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-13176_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "4833042194547480cff0ab0fb8426bf7"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-13176] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-13176] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.2-r5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-13176_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "ca163f08b980d2c7528ea3c984bc60fd"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-3786] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-3786] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.7-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-3786_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "78b9bbc869aa78c901d62ad9f2cdc0c1"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-3786] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-3786] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.7-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-3786_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "ba5c45cc1fd6e13f6c24eeb5b8ee1616"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-3712] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-3712] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1l-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-3712_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "d67864037527663a0ec81375956a5ade"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-3712] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-3712] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1l-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-3712_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "25998ec61eaa4ddd63e78a11d91a2804"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-6119] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-6119] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.2-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-6119_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "2c54be5acd95a969d405106ec3cad196"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-6119] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-6119] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.2-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-6119_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "072617c7056e70d2a9347365f7ed0e4b"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-3711] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-3711] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1l-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-3711_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "a623255c7585937b9d8552322df7c5c0"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-3711] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-3711] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1l-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-3711_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "51d04f76cffeb8601eec117329f15f8b"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0401] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0401] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.8-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0401_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "fb770fec47bfa2d17bcb82bb168fe91c"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0401] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0401] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.8-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0401_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5798fbad75d1672266c0deefdcae63fe"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-9143] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-9143] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.2-r3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-9143_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "610052794bd045754c5a020ca972505d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-9143] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-9143] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.2-r3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-9143_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "9650b4a569fb8b6837a4f8174e5154f7"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-1292] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-1292] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1o-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-1292_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "4d0e80c92243bcfd464febd8d2fe1c44"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-1292] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-1292] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1o-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-1292_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b6cf1ba12bbab3bf45732b2983d359f9"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0464] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0464] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1t-r1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0464_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "f2a524ca0edc959ec6728645355477f8"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0464] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0464] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1t-r1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0464_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "dcae95c1cfe4b22d9fd094ad3d0efee7"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0286] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0286] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1t-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0286_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "32b9cafaee7afe5e32453cf902bc9f40"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0286] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0286] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1t-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0286_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b1d8fc45ad22755b9a785b8d22f9c4e2"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-1394] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-1394] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-1394_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "988cf198af58d2d91d23e8af6fed9d2d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-1394] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-1394] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-1394_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "2471e69783760a0053ee705a2fe37e25"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-3817] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-3817] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.2-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-3817_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "6fb0b92d6f6391a91ef9088ad944b067"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-3817] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-3817] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.2-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-3817_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "64ee519166e7485b4b50a7f9adf84f49"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-4603] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-4603] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.0-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-4603_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "ee3ae66f7397d1d78718ecfd2b3fcb11"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-4603] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-4603] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.0-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-4603_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "6e27dd509538a1a8f6ef4073227b96f2"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-1255] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-1255] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.0-r4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-1255_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "0e4e464c6300f483da2810d41a96dbb6"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-1255] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-1255] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.0-r4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-1255_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "1cf5af23f36ba7d398d1a752476977e9"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-0727] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-0727] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.4-r5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-0727_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "161997f33860a7c8d23525eec8b3c8ec"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-0727] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-0727] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.4-r5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-0727_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "f2f92c38615da89997433b88d9403f55"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0465] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0465] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1t-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0465_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "dc5d3dbfb2c177059dfa9e21e904a2ae"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0465] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0465] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1t-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0465_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "86f804ebe03395d721ef7dbcc7b9e1da"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-49210] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-49210] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-49210_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "8c876760b78350e49af768c8f70a6887"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-49210] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-49210] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-49210_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "a8ffcd3db4a2d33c4d00d08f670651bc"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-3602] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-3602] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.7-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-3602_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5d8fe066244605d381e20ad8d3553c18"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-3602] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-3602] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.7-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-3602_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "9b34dfa9611bc60645d4302b78783b03"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-4160] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-4160] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1n-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-4160_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "0b4117d1b9f8ae29b4c83d71e0708549"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-4160] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-4160] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1n-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-4160_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5aa7d74c40ae346f2c58dba0619e1b04"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-2650] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-2650] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-2650_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b4a53dd2a8d0544f19b9833c4d503521"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-2650] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-2650] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-2650_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "155b9349f86cec406bf72bb9d166fa5e"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-4203] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-4203] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.8-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-4203_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "3cb59ca9961d8bf2b997f670582d3dc8"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-4203] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-4203] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.8-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-4203_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "d2df078b68c3be3dff4206445d51b614"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-6237] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-6237] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.4-r4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-6237_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "1e6daea075108258174ced7df4ed4d8e"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-6237] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-6237] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.4-r4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-6237_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "f0b7edbf82d5fe4a065066ffefae2865"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-4450] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-4450] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1t-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-4450_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "c1b9bb1435f326fd791fa163e91b46f0"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-4450] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-4450] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1t-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-4450_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "3367633135546d7732b84cf65e81a43a"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-2068] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-2068] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1p-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-2068_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "978109f00bd92197d32f3973be6c3b98"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-2068] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-2068] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1p-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-2068_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "2e14f15bb5a5f8d8bb395caf0495ff71"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-6129] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-6129] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.4-r3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-6129_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "43e4a78b6604b21f0bd6f121d5b21ab0"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-6129] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-6129] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.4-r3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-6129_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "55562ac91a044e19c0d8363c8bf2607b"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0215] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0215] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1t-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0215_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "bfd1d12d5c56aa30235d93e23e294fb5"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-0215] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-0215] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1t-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-0215_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "91e558fb5d964a1fe960b6034446d43b"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-4304] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-4304] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1t-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-4304_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "c7237117f22bc079de24601ec89ccbec"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-4304] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-4304] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.1.1t-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-4304_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "ecbfc00c1d765f3d02b9d75184b9b58c"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-12797] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-12797] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.3-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-12797_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "4f8a8e3cc91c776edd77068b0c1ba857"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-12797] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-12797] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.3-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-12797_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "bb823e702f7fa6349041cdeabe13c6ad"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-4741] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-4741] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.0-r3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-4741_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "82e53c080289f0549baefeb9c42e43c6"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-4741] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2024-4741] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.3.0-r3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-4741_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "709ca31770b76dc5a00babc8f3c0ae43"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-5678] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-5678] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.4-r1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-5678_3.14:libssl1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "a430ddc44c79d571a22e545939aec1d3"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-5678] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-5678] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[3.1.4-r1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-5678_3.14:libcrypto1.1_1.1.1k-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "3aad80692e8e8eab528d51a9a2e5b491"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-35945] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-35945] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[1.51.0-r1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-35945_3.14:nghttp2-libs_1.43.0-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "58ccfe9c5f8a0d8cd86cd30abd0507b6"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-45590] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): 2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
            "text": "[CVE-2024-45590] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar "
          },
          "properties": {
            "fixedVersion": "[1.20.3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-45590_body-parser_1.19.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "18193c72cb3b09b07e7848467b01aef0"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42375] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42375] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42375_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "274d40fffea257e4a86db8a81a233d72"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42375] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42375] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42375_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "694e904fdca6d4481fb89789b4131772"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42378] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42378] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42378_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "eed9097a1de485a052e84d239b69d2ba"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42378] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42378] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42378_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "31d4ede31d3053e5b759c69a854310cb"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-42366] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-42366] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.36.1-r25]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-42366_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "79b4156ea1b58fd427d5042b5935cab0"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-42366] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-42366] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.36.1-r25]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-42366_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "fea5e7173309df4d49540d7b5429fe64"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42376] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42376] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42376_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "e339ceda3e5d569c089a3492fcba1938"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42376] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42376] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42376_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5f18a8b181cec771fa4d8f25869192d7"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42384] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42384] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42384_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "d4d9be19c2db62f0927750e3679fd027"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42384] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42384] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42384_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "846b7bba0868a2edb0367830a37032d1"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42381] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42381] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42381_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "a95fdca06d0420c358f59bde11e4540f"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42381] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42381] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42381_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "d4370f42df9a7e96b69cf7605e99b11d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42383] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42383] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42383_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "c8cee43a4acf2464fa7bc8c65a29a3e0"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42383] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42383] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42383_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "c7bd0e1069a9e37898d3859d3f5b5187"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-42364] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-42364] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.36.1-r30]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-42364_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "f6f4753f0a68793eb8dfa64070954c0b"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-42364] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-42364] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.36.1-r30]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-42364_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "fc53f46b47eb74f0e4c6f84c605c157f"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-42363] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-42363] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.36.1-r27]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-42363_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "4a5c0226146acce71749649761248260"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-42363] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-42363] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.36.1-r27]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-42363_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "e1f0cc17fed776fafdcaf604e83531ef"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42386] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42386] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42386_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "2953921845d0ba2d73c0128254bbef2d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42386] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42386] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42386_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "fee2062d84a34d4bee884c787bf35b20"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42382] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42382] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42382_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "02efcef71212dc0ff3cfc681d929bbb1"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42382] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42382] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42382_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "ac30e2cdb4942c0d991c5a1f2f3a1f54"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42374] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42374] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42374_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "44152b4ae708ae52cb6ac8c6e369df2c"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42374] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42374] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42374_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "4efae32fc7f0253b5cce9b527df0641d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42385] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42385] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42385_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "6403d8e9e5bbe6a2bef79d69f6497004"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42385] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42385] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42385_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "d60aed402b2a6ea295ee8d3bb9ad5d85"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-42365] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-42365] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.36.1-r30]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-42365_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "ead17e5c7b85db9cb9eda8e1cd60ca99"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-42365] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2023-42365] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.36.1-r30]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-42365_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "db19d90cb099ccb027ede4a8a2e9c2b0"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42377] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42377] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42377_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "056b1b8021ff4caefeaa8f10af9a30bf"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42377] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42377] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42377_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "cb94570e9745878c2509e22818aa198a"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-28391] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-28391] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r7]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-28391_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "2f9da11689d864d2c126f33fb7815520"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-28391] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-28391] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r7]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-28391_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5c7983e697bb2fa9c8aeb7ebfc9d68f0"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42379] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42379] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42379_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "fbde96b1ec4ff4a30fbb468490a5fc72"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42379] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42379] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42379_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b89d810fce8123c036a58f8f441e5430"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42380] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42380] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42380_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "765528d315b4d7083515fbaed263a3c2"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42380] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42380] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.1-r6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42380_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "83ec4127d3c25fe97fecf5daef1b8537"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42373] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42373] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42373_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "3b9e32bf6bb31e1f0801bce2f279ba52"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-42373] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2021-42373] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-42373_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "90a520ea64b12872b2bd50a9bde52f2d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-48174] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-48174] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.36.1-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-48174_3.14:busybox_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "fc1fc3b3a19d8bf3e075c7f972ed907d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-48174] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466",
            "text": "[CVE-2022-48174] sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar "
          },
          "properties": {
            "fixedVersion": "[1.36.1-r2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-48174_3.14:ssl_client_1.33.1-r3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "88d02df767278f19b8333a19af0eccdb"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-25629] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2024-25629] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[1.27.0-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-25629_3.14:c-ares_1.17.2-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "ed69008d93453476e3d489dd8d8ddbf6"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-32067] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-32067] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-32067_3.14:c-ares_1.17.2-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "1f342e2783d58cdbfab0b20daad2f649"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-31130] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-31130] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-31130_3.14:c-ares_1.17.2-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "632aa83e8201b0cdf7e828271fbadb8b"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-31147] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-31147] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-31147_3.14:c-ares_1.17.2-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "0c7fa3713ff2e8938cd3066e71f1ccf7"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-4904] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2022-4904] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-4904_3.14:c-ares_1.17.2-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "9d550512fca6753e46a0bd3b340e858d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-31498] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2025-31498] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[1.34.5-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-31498_3.14:c-ares_1.17.2-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "23328f1ded956347d01d6a5ccaf99ee7"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-31124] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-31124] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-31124_3.14:c-ares_1.17.2-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "09ef15950bdf361bf428a96a720f6b1f"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-29041] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): 2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
            "text": "[CVE-2024-29041] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar "
          },
          "properties": {
            "fixedVersion": "[4.19.2], [5.0.0-beta.3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-29041_express_4.17.1",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "f48f953399a1a8cfd046fdd2b1749422"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-43796] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): 2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
            "text": "[CVE-2024-43796] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar "
          },
          "properties": {
            "fixedVersion": "[4.20.0], [5.0.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-43796_express_4.17.1",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "a64b909c75754ad003aead1854e77f03"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-45143] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-45143] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[18.18.2-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-45143_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "06bb2bed3b765827e9317f9a94fa52b4"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-23083] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2025-23083] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[22.13.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-23083_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b3178cee739e1659b94a1cb2f44877f1"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-27983] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2024-27983] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[20.12.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-27983_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "8397f273c55668e53d8e41868a38901c"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-22018] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2024-22018] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[20.15.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-22018_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5ae484acf8e5d54a9206297c82583cca"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-32002] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-32002] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[18.17.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-32002_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "2505165bec5b01702bb1c6024a1a954e"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-38552] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-38552] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[18.18.2-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-38552_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "3bf3b6b3bf5b1094e400b2d778984eb4"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-22150] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2025-22150] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[22.13.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-22150_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "e52bcf3eeb72875f54cddc4f8b2a393a"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2021-43803] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2021-43803] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2021-43803_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "c49af1bc2e2682b2869c12d5cfc668d4"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-22020] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2024-22020] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[20.15.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-22020_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "727bd95682afd46c152079fb4332779c"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-35255] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2022-35255] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[16.17.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-35255_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "ca910dcd0baf3895b1a30cc62065fcc4"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-23084] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2025-23084] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[22.13.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-23084_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "27572d213348d32ea407e8543198b125"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-27982] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2024-27982] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[20.12.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-27982_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "d223513e9233c4dacfb53d361bd9e697"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-32006] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-32006] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[18.17.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-32006_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "d65d2e084a3123d6b853172c9eba727e"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-23919] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-23919] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[18.14.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-23919_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "a48efdd8ae6cbb6a0daf1eed3d288c1a"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2022-43548] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2022-43548] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[18.12.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2022-43548_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "1730bf6d81d0b1ecd916c59e8dd81a25"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-39333] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-39333] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[18.18.2-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-39333_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "bcd7006d4c1f9a7b67b2b161a0bbfd0c"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-23166] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2025-23166] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[22.15.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-23166_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "a155aecbc7c8d3630eb47b3808cc03a1"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-23936] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-23936] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[18.14.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-23936_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "2c6aace46b51917e0f58337c3883e107"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-24807] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-24807] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[18.14.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-24807_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "1f8d605114b7ded82628590524fc9de2"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-23165] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2025-23165] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[22.15.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-23165_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "c51d94996f4a6eecbf36ab804b3ed255"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-23085] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2025-23085] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[22.13.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-23085_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "4b9b9fce2978de73a8bc3a9f2579acff"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-32559] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2023-32559] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[18.17.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-32559_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b7166976af98e8ffc64de0492a08af85"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-36137] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f",
            "text": "[CVE-2024-36137] sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar "
          },
          "properties": {
            "fixedVersion": "[20.15.1-r0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-36137_3.14:nodejs_14.21.3-r0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "755f44e3491fdd4c6986eba6493715bc"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-52798] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): 2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
            "text": "[CVE-2024-52798] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar "
          },
          "properties": {
            "fixedVersion": "[0.1.12]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-52798_path-to-regexp_0.1.7",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "18c901c3e42eb868c0cb812bcb45c45b"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-45296] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar \nImage: docker/scout-demo-service:main\nLayer (sha256): 2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979",
            "text": "[CVE-2024-45296] sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar "
          },
          "properties": {
            "fixedVersion": "[0.1.10], [1.9.0], [3.3.0], [6.3.0], [8.0.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-45296_path-to-regexp_0.1.7",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        }
      ],
      "runAggregates": [],
      "taxonomies": [],
      "threadFlowLocations": [],
      "tool": {
        "driver": {
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "isComprehensive": false,
          "language": "en-US",
          "locations": [],
          "name": "JFrog Xray Scanner",
          "notifications": [],
          "rules": [
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "The openssl (aka node-openssl) NPM package through 2.0.0 was characterized as \"a nonsense wrapper with no real purpose\" by its author, and accepts an opts argument that contains a verb field (used for command execution). NOTE: This vulnerability only affects products that are no longer supported by the maintainer."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "The openssl (aka node-openssl) NPM package through 2.0.0 was characterized as \"a nonsense wrapper with no real purpose\" by its author, and accepts an opts argument that contains a verb field (used for command execution). NOTE: This vulnerability only affects products that are no longer supported by the maintainer."
              },
              "id": "CVE-2023-49210_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-49210-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-49210] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.7-r0]   |",
                "text": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.7-r0]   |",
                "text": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6)."
              },
              "id": "CVE-2022-3602_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2022-3602-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-3602] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r3]   |",
                "text": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r3]   |",
                "text": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue."
              },
              "id": "CVE-2023-6129_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-6129-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-6129] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection."
              },
              "id": "CVE-2022-4304_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2022-4304-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-4304] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function"
              },
              "id": "CVE-2021-42383_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42383-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42383] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function"
              },
              "id": "CVE-2021-42383_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42383-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42383] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r2]   |",
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r2]   |",
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution."
              },
              "id": "CVE-2022-48174_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2022-48174-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "c-ares is an asynchronous resolver library. c-ares is vulnerable to denial of service. If a target resolver sends a query, the attacker forges a malformed UDP packet with a length of 0 and returns them to the target resolver. The target resolver erroneously interprets the 0 length as a graceful shutdown of the connection. This issue has been patched in version 1.19.1."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "c-ares is an asynchronous resolver library. c-ares is vulnerable to denial of service. If a target resolver sends a query, the attacker forges a malformed UDP packet with a length of 0 and returns them to the target resolver. The target resolver erroneously interprets the 0 length as a graceful shutdown of the connection. This issue has been patched in version 1.19.1."
              },
              "id": "CVE-2023-32067_3.14:c-ares_1.17.2-r0",
              "name": "CVE-2023-32067-3.14:c-ares-1.17.2-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:c-ares",
                      "version": "1.17.2-r0",
                      "location": {
                        "file": "3.14:c-ares:1.17.2-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-32067] 3.14:c-ares 1.17.2-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "GCC v12.0 was discovered to contain an uncontrolled recursion via the component libiberty/rust-demangle.c. This vulnerability allows attackers to cause a Denial of Service (DoS) by consuming excessive CPU and memory resources."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "GCC v12.0 was discovered to contain an uncontrolled recursion via the component libiberty/rust-demangle.c. This vulnerability allows attackers to cause a Denial of Service (DoS) by consuming excessive CPU and memory resources."
              },
              "id": "CVE-2021-46195_3.14:libstdc++_10.3.1_git20210424-r2",
              "name": "CVE-2021-46195-3.14:libstdc++-10.3.1-git20210424-r2",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:libstdc++",
                      "version": "10.3.1_git20210424-r2",
                      "location": {
                        "file": "3.14:libstdc++:10.3.1_git20210424-r2"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-46195] 3.14:libstdc++ 10.3.1_git20210424-r2"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r3]   |",
                "text": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r3]   |",
                "text": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications."
              },
              "id": "CVE-2023-0466_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-0466-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0466] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r30]   |",
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r30]   |",
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function."
              },
              "id": "CVE-2023-42364_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2023-42364-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.2      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [20.12.1-r0]   |",
                "text": "An attacker can make the Node.js HTTP/2 server completely unavailable by sending a small amount of HTTP/2 frames packets with a few HTTP/2 frames inside. It is possible to leave some data in nghttp2 memory after reset when headers with HTTP/2 CONTINUATION frame are sent to the server and then a TCP connection is abruptly closed by the client triggering the Http2Session destructor while header frames are still being processed (and stored in memory) causing a race condition."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.2      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [20.12.1-r0]   |",
                "text": "An attacker can make the Node.js HTTP/2 server completely unavailable by sending a small amount of HTTP/2 frames packets with a few HTTP/2 frames inside. It is possible to leave some data in nghttp2 memory after reset when headers with HTTP/2 CONTINUATION frame are sent to the server and then a TCP connection is abruptly closed by the client triggering the Http2Session destructor while header frames are still being processed (and stored in memory) causing a race condition."
              },
              "id": "CVE-2024-27983_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2024-27983-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "8.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-27983] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.18.2-r0]   |",
                "text": "When the Node.js policy feature checks the integrity of a resource against a trusted manifest, the application can intercept the operation and return a forged checksum to the node's policy implementation, thus effectively disabling the integrity check.\nImpacts:\nThis vulnerability affects all users using the experimental policy mechanism in all active release lines: 18.x and, 20.x.\nPlease note that at the time this CVE was issued, the policy mechanism is an experimental feature of Node.js."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.18.2-r0]   |",
                "text": "When the Node.js policy feature checks the integrity of a resource against a trusted manifest, the application can intercept the operation and return a forged checksum to the node's policy implementation, thus effectively disabling the integrity check.\nImpacts:\nThis vulnerability affects all users using the experimental policy mechanism in all active release lines: 18.x and, 20.x.\nPlease note that at the time this CVE was issued, the policy mechanism is an experimental feature of Node.js."
              },
              "id": "CVE-2023-38552_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2023-38552-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-38552] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.8      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [22.13.1-r0]   |",
                "text": "Undici is an HTTP/1.1 client. Starting in version 4.5.0 and prior to versions 5.28.5, 6.21.1, and 7.2.3, undici uses `Math.random()` to choose the boundary for a multipart/form-data request. It is known that the output of `Math.random()` can be predicted if several of its generated values are known. If there is a mechanism in an app that sends multipart requests to an attacker-controlled website, they can use this to leak the necessary values. Therefore, an attacker can tamper with the requests going to the backend APIs if certain conditions are met. This is fixed in versions 5.28.5, 6.21.1, and 7.2.3. As a workaround, do not issue multipart requests to attacker controlled servers."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.8      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [22.13.1-r0]   |",
                "text": "Undici is an HTTP/1.1 client. Starting in version 4.5.0 and prior to versions 5.28.5, 6.21.1, and 7.2.3, undici uses `Math.random()` to choose the boundary for a multipart/form-data request. It is known that the output of `Math.random()` can be predicted if several of its generated values are known. If there is a mechanism in an app that sends multipart requests to an attacker-controlled website, they can use this to leak the necessary values. Therefore, an attacker can tamper with the requests going to the backend APIs if certain conditions are met. This is fixed in versions 5.28.5, 6.21.1, and 7.2.3. As a workaround, do not issue multipart requests to attacker controlled servers."
              },
              "id": "CVE-2025-22150_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2025-22150-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-22150] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.7      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [22.15.1-r0]   |",
                "text": "In Node.js, the `ReadFileUtf8` internal binding leaks memory due to a corrupted pointer in `uv_fs_s.file`: a UTF-16 path buffer is allocated but subsequently overwritten when the file descriptor is set. This results in an unrecoverable memory leak on every call. Repeated use can cause unbounded memory growth, leading to a denial of service.\n\nImpact:\n* This vulnerability affects APIs relying on `ReadFileUtf8` on Node.js release lines: v20 and v22."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.7      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [22.15.1-r0]   |",
                "text": "In Node.js, the `ReadFileUtf8` internal binding leaks memory due to a corrupted pointer in `uv_fs_s.file`: a UTF-16 path buffer is allocated but subsequently overwritten when the file descriptor is set. This results in an unrecoverable memory leak on every call. Repeated use can cause unbounded memory growth, leading to a denial of service.\n\nImpact:\n* This vulnerability affects APIs relying on `ReadFileUtf8` on Node.js release lines: v20 and v22."
              },
              "id": "CVE-2025-23165_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2025-23165-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "3.7"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-23165] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "The openssl gem for Ruby uses the same initialization vector (IV) in GCM Mode (aes-*-gcm) when the IV is set before the key, which makes it easier for context-dependent attackers to bypass the encryption protection mechanism."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "The openssl gem for Ruby uses the same initialization vector (IV) in GCM Mode (aes-*-gcm) when the IV is set before the key, which makes it easier for context-dependent attackers to bypass the encryption protection mechanism."
              },
              "id": "CVE-2016-7798_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2016-7798-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2016-7798] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.7-r2]   |",
                "text": "If an X.509 certificate contains a malformed policy constraint and\npolicy processing is enabled, then a write lock will be taken twice\nrecursively.  On some operating systems (most widely: Windows) this\nresults in a denial of service when the affected process hangs.  Policy\nprocessing being enabled on a publicly facing server is not considered\nto be a common setup.\n\nPolicy processing is enabled by passing the `-policy'\nargument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.\n\nUpdate (31 March 2023): The description of the policy processing enablement\nwas corrected based on CVE-2023-0466."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.7-r2]   |",
                "text": "If an X.509 certificate contains a malformed policy constraint and\npolicy processing is enabled, then a write lock will be taken twice\nrecursively.  On some operating systems (most widely: Windows) this\nresults in a denial of service when the affected process hangs.  Policy\nprocessing being enabled on a publicly facing server is not considered\nto be a common setup.\n\nPolicy processing is enabled by passing the `-policy'\nargument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.\n\nUpdate (31 March 2023): The description of the policy processing enablement\nwas corrected based on CVE-2023-0466."
              },
              "id": "CVE-2022-3996_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2022-3996-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-3996] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.4      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.4      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network."
              },
              "id": "CVE-2023-0286_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-0286-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.4"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0286] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.8      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.17.1-r0]   |",
                "text": "The use of `module.constructor.createRequire()` can bypass the policy mechanism and require modules outside of the policy.json definition for a given module.\n\nThis vulnerability affects all users using the experimental policy mechanism in all active release lines: 16.x, 18.x, and, 20.x.\n\nPlease note that at the time this CVE was issued, the policy is an experimental feature of Node.js."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.8      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.17.1-r0]   |",
                "text": "The use of `module.constructor.createRequire()` can bypass the policy mechanism and require modules outside of the policy.json definition for a given module.\n\nThis vulnerability affects all users using the experimental policy mechanism in all active release lines: 16.x, 18.x, and, 20.x.\n\nPlease note that at the time this CVE was issued, the policy is an experimental feature of Node.js."
              },
              "id": "CVE-2023-32006_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2023-32006-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "8.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-32006] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.2.12-r2]   |",
                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.2.12-r2]   |",
                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
              },
              "id": "CVE-2022-37434_3.14:zlib_1.2.11-r3",
              "name": "CVE-2022-37434-3.14:zlib-1.2.11-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:zlib",
                      "version": "1.2.11-r3",
                      "location": {
                        "file": "3.14:zlib:1.2.11-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-37434] 3.14:zlib 1.2.11-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "An invalid pointer dereference on read can be triggered when an\napplication tries to load malformed PKCS7 data with the\nd2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.\n\nThe result of the dereference is an application crash which could\nlead to a denial of service attack. The TLS implementation in OpenSSL\ndoes not call this function however third party applications might\ncall these functions on untrusted data."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "An invalid pointer dereference on read can be triggered when an\napplication tries to load malformed PKCS7 data with the\nd2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.\n\nThe result of the dereference is an application crash which could\nlead to a denial of service attack. The TLS implementation in OpenSSL\ndoes not call this function however third party applications might\ncall these functions on untrusted data."
              },
              "id": "CVE-2023-0216_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-0216-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0216] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r3]   |",
                "text": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r3]   |",
                "text": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications."
              },
              "id": "CVE-2023-0466_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-0466-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0466] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.2.1-r2]   |",
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.2.1-r2]   |",
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue."
              },
              "id": "CVE-2024-2511_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2024-2511-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-2511] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r25]   |",
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r25]   |",
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159."
              },
              "id": "CVE-2023-42366_3.14:busybox_1.33.1-r3",
              "name": "CVE-2023-42366-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function"
              },
              "id": "CVE-2021-42381_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42381-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42381] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r30]   |",
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r30]   |",
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function."
              },
              "id": "CVE-2023-42364_3.14:busybox_1.33.1-r3",
              "name": "CVE-2023-42364-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new."
              },
              "id": "CVE-2022-27943_3.14:libgcc_10.3.1_git20210424-r2",
              "name": "CVE-2022-27943-3.14:libgcc-10.3.1-git20210424-r2",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:libgcc",
                      "version": "10.3.1_git20210424-r2",
                      "location": {
                        "file": "3.14:libgcc:10.3.1_git20210424-r2"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-27943] 3.14:libgcc 10.3.1_git20210424-r2"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function"
              },
              "id": "CVE-2021-42384_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42384-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42384] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r4]   |",
                "text": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r4]   |",
                "text": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that"
              },
              "id": "CVE-2021-42374_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42374-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42374] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r30]   |",
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r30]   |",
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function."
              },
              "id": "CVE-2023-42365_3.14:busybox_1.33.1-r3",
              "name": "CVE-2023-42365-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.2.11-r4]   |",
                "text": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.2.11-r4]   |",
                "text": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches."
              },
              "id": "CVE-2018-25032_3.14:zlib_1.2.11-r3",
              "name": "CVE-2018-25032-3.14:zlib-1.2.11-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:zlib",
                      "version": "1.2.11-r3",
                      "location": {
                        "file": "3.14:zlib:1.2.11-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2018-25032] 3.14:zlib 1.2.11-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.7-r2]   |",
                "text": "If an X.509 certificate contains a malformed policy constraint and\npolicy processing is enabled, then a write lock will be taken twice\nrecursively.  On some operating systems (most widely: Windows) this\nresults in a denial of service when the affected process hangs.  Policy\nprocessing being enabled on a publicly facing server is not considered\nto be a common setup.\n\nPolicy processing is enabled by passing the `-policy'\nargument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.\n\nUpdate (31 March 2023): The description of the policy processing enablement\nwas corrected based on CVE-2023-0466."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.7-r2]   |",
                "text": "If an X.509 certificate contains a malformed policy constraint and\npolicy processing is enabled, then a write lock will be taken twice\nrecursively.  On some operating systems (most widely: Windows) this\nresults in a denial of service when the affected process hangs.  Policy\nprocessing being enabled on a publicly facing server is not considered\nto be a common setup.\n\nPolicy processing is enabled by passing the `-policy'\nargument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.\n\nUpdate (31 March 2023): The description of the policy processing enablement\nwas corrected based on CVE-2023-0466."
              },
              "id": "CVE-2022-3996_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2022-3996-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-3996] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [20.12.1-r0]   |",
                "text": "The team has identified a critical vulnerability in the http server of the most recent version of Node, where malformed headers can lead to HTTP request smuggling. Specifically, if a space is placed before a content-length header, it is not interpreted correctly, enabling attackers to smuggle in a second request within the body of the first."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [20.12.1-r0]   |",
                "text": "The team has identified a critical vulnerability in the http server of the most recent version of Node, where malformed headers can lead to HTTP request smuggling. Specifically, if a space is placed before a content-length header, it is not interpreted correctly, enabling attackers to smuggle in a second request within the body of the first."
              },
              "id": "CVE-2024-27982_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2024-27982-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-27982] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.0-r2]   |",
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.0-r2]   |",
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue."
              },
              "id": "CVE-2024-4603_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2024-4603-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-4603] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [1.51.0-r1]   |",
                "text": "Envoy is a cloud-native high-performance edge/middle/service proxy. Envoy’s HTTP/2 codec may leak a header map and bookkeeping structures upon receiving `RST_STREAM` immediately followed by the `GOAWAY` frames from an upstream server. In nghttp2, cleanup of pending requests due to receipt of the `GOAWAY` frame skips de-allocation of the bookkeeping structure and pending compressed header. The error return [code path] is taken if connection is already marked for not sending more requests due to `GOAWAY` frame. The clean-up code is right after the return statement, causing memory leak. Denial of service through memory exhaustion. This vulnerability was patched in versions(s) 1.26.3, 1.25.8, 1.24.9, 1.23.11."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [1.51.0-r1]   |",
                "text": "Envoy is a cloud-native high-performance edge/middle/service proxy. Envoy’s HTTP/2 codec may leak a header map and bookkeeping structures upon receiving `RST_STREAM` immediately followed by the `GOAWAY` frames from an upstream server. In nghttp2, cleanup of pending requests due to receipt of the `GOAWAY` frame skips de-allocation of the bookkeeping structure and pending compressed header. The error return [code path] is taken if connection is already marked for not sending more requests due to `GOAWAY` frame. The clean-up code is right after the return statement, causing memory leak. Denial of service through memory exhaustion. This vulnerability was patched in versions(s) 1.26.3, 1.25.8, 1.24.9, 1.23.11."
              },
              "id": "CVE-2023-35945_3.14:nghttp2-libs_1.43.0-r0",
              "name": "CVE-2023-35945-3.14:nghttp2-libs-1.43.0-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nghttp2-libs",
                      "version": "1.43.0-r0",
                      "location": {
                        "file": "3.14:nghttp2-libs:1.43.0-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-35945] 3.14:nghttp2-libs 1.43.0-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [1.20.3]   |",
                "text": "body-parser is Node.js body parsing middleware. body-parser <1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service. This issue is patched in 1.20.3."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [1.20.3]   |",
                "text": "body-parser is Node.js body parsing middleware. body-parser <1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service. This issue is patched in 1.20.3."
              },
              "id": "CVE-2024-45590_body-parser_1.19.0",
              "name": "CVE-2024-45590-body-parser-1.19.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                      }
                    },
                    {
                      "name": "body-parser",
                      "version": "1.19.0",
                      "location": {
                        "file": "node_modules/body-parser/package.json"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-45590] body-parser 1.19.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.7      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [22.13.1-r0]   |",
                "text": "With the aid of the diagnostics_channel utility, an event can be hooked into whenever a worker thread is created. This is not limited only to workers but also exposes internal workers, where an instance of them can be fetched, and its constructor can be grabbed and reinstated for malicious usage. \n\nThis vulnerability affects Permission Model users (--permission) on Node.js v20, v22, and v23."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.7      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [22.13.1-r0]   |",
                "text": "With the aid of the diagnostics_channel utility, an event can be hooked into whenever a worker thread is created. This is not limited only to workers but also exposes internal workers, where an instance of them can be fetched, and its constructor can be grabbed and reinstated for malicious usage. \n\nThis vulnerability affects Permission Model users (--permission) on Node.js v20, v22, and v23."
              },
              "id": "CVE-2025-23083_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2025-23083-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.7"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-23083] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.1      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [16.17.1-r0]   |",
                "text": "A weak randomness in WebCrypto keygen vulnerability exists in Node.js 18 due to a change with EntropySource() in SecretKeyGenTraits::DoKeyGen() in src/crypto/crypto_keygen.cc. There are two problems with this: 1) It does not check the return value, it assumes EntropySource() always succeeds, but it can (and sometimes will) fail. 2) The random data returned byEntropySource() may not be cryptographically strong and therefore not suitable as keying material."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.1      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [16.17.1-r0]   |",
                "text": "A weak randomness in WebCrypto keygen vulnerability exists in Node.js 18 due to a change with EntropySource() in SecretKeyGenTraits::DoKeyGen() in src/crypto/crypto_keygen.cc. There are two problems with this: 1) It does not check the return value, it assumes EntropySource() always succeeds, but it can (and sometimes will) fail. 2) The random data returned byEntropySource() may not be cryptographically strong and therefore not suitable as keying material."
              },
              "id": "CVE-2022-35255_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2022-35255-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "9.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-35255] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.5.1-r0]   |",
                "text": "Issue summary: Use of -addreject option with the openssl x509 application adds\na trusted use instead of a rejected use for a certificate.\n\nImpact summary: If a user intends to make a trusted certificate rejected for\na particular use it will be instead marked as trusted for that use.\n\nA copy & paste error during minor refactoring of the code introduced this\nissue in the OpenSSL 3.5 version. If, for example, a trusted CA certificate\nshould be trusted only for the purpose of authenticating TLS servers but not\nfor CMS signature verification and the CMS signature verification is intended\nto be marked as rejected with the -addreject option, the resulting CA\ncertificate will be trusted for CMS signature verification purpose instead.\n\nOnly users which use the trusted certificate format who use the openssl x509\ncommand line application to add rejected uses are affected by this issue.\nThe issues affecting only the command line application are considered to\nbe Low severity.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue.\n\nOpenSSL 3.4, 3.3, 3.2, 3.1, 3.0, 1.1.1 and 1.0.2 are also not affected by this\nissue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.5.1-r0]   |",
                "text": "Issue summary: Use of -addreject option with the openssl x509 application adds\na trusted use instead of a rejected use for a certificate.\n\nImpact summary: If a user intends to make a trusted certificate rejected for\na particular use it will be instead marked as trusted for that use.\n\nA copy & paste error during minor refactoring of the code introduced this\nissue in the OpenSSL 3.5 version. If, for example, a trusted CA certificate\nshould be trusted only for the purpose of authenticating TLS servers but not\nfor CMS signature verification and the CMS signature verification is intended\nto be marked as rejected with the -addreject option, the resulting CA\ncertificate will be trusted for CMS signature verification purpose instead.\n\nOnly users which use the trusted certificate format who use the openssl x509\ncommand line application to add rejected uses are affected by this issue.\nThe issues affecting only the command line application are considered to\nbe Low severity.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue.\n\nOpenSSL 3.4, 3.3, 3.2, 3.1, 3.0, 1.1.1 and 1.0.2 are also not affected by this\nissue."
              },
              "id": "CVE-2025-4575_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2025-4575-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-4575] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "An invalid pointer dereference on read can be triggered when an\napplication tries to check a malformed DSA public key by the\nEVP_PKEY_public_check() function. This will most likely lead\nto an application crash. This function can be called on public\nkeys supplied from untrusted sources which could allow an attacker\nto cause a denial of service attack.\n\nThe TLS implementation in OpenSSL does not call this function\nbut applications might call the function if there are additional\nsecurity requirements imposed by standards such as FIPS 140-3."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "An invalid pointer dereference on read can be triggered when an\napplication tries to check a malformed DSA public key by the\nEVP_PKEY_public_check() function. This will most likely lead\nto an application crash. This function can be called on public\nkeys supplied from untrusted sources which could allow an attacker\nto cause a denial of service attack.\n\nThe TLS implementation in OpenSSL does not call this function\nbut applications might call the function if there are additional\nsecurity requirements imposed by standards such as FIPS 140-3."
              },
              "id": "CVE-2023-0217_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-0217-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0217] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "A NULL pointer can be dereferenced when signatures are being\nverified on PKCS7 signed or signedAndEnveloped data. In case the hash\nalgorithm used for the signature is known to the OpenSSL library but\nthe implementation of the hash algorithm is not available the digest\ninitialization will fail. There is a missing check for the return\nvalue from the initialization function which later leads to invalid\nusage of the digest API most likely leading to a crash.\n\nThe unavailability of an algorithm can be caused by using FIPS\nenabled configuration of providers or more commonly by not loading\nthe legacy provider.\n\nPKCS7 data is processed by the SMIME library calls and also by the\ntime stamp (TS) library calls. The TLS implementation in OpenSSL does\nnot call these functions however third party applications would be\naffected if they call these functions to verify signatures on untrusted\ndata."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "A NULL pointer can be dereferenced when signatures are being\nverified on PKCS7 signed or signedAndEnveloped data. In case the hash\nalgorithm used for the signature is known to the OpenSSL library but\nthe implementation of the hash algorithm is not available the digest\ninitialization will fail. There is a missing check for the return\nvalue from the initialization function which later leads to invalid\nusage of the digest API most likely leading to a crash.\n\nThe unavailability of an algorithm can be caused by using FIPS\nenabled configuration of providers or more commonly by not loading\nthe legacy provider.\n\nPKCS7 data is processed by the SMIME library calls and also by the\ntime stamp (TS) library calls. The TLS implementation in OpenSSL does\nnot call these functions however third party applications would be\naffected if they call these functions to verify signatures on untrusted\ndata."
              },
              "id": "CVE-2023-0401_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-0401-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0401] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1o-r0]   |",
                "text": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1o-r0]   |",
                "text": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd)."
              },
              "id": "CVE-2022-1292_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2022-1292-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-1292] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r1]   |",
                "text": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r1]   |",
                "text": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "id": "CVE-2023-5678_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-5678-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-5678] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input."
              },
              "id": "CVE-2021-42376_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42376-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42376] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function"
              },
              "id": "CVE-2021-42382_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42382-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42382] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r4]   |",
                "text": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r4]   |",
                "text": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that"
              },
              "id": "CVE-2021-42374_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42374-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42374] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.1      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.1-r1]   |",
                "text": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of ..."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.1      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.1-r1]   |",
                "text": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of ..."
              },
              "id": "CVE-2024-5535_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2024-5535-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "9.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-5535] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.2-r3]   |",
                "text": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.2-r3]   |",
                "text": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "id": "CVE-2024-9143_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2024-9143-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "4.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-9143] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1p-r0]   |",
                "text": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1p-r0]   |",
                "text": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze)."
              },
              "id": "CVE-2022-2068_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2022-2068-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-2068] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.6      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "A flaw was found in the c-ares package. The ares_set_sortlist is missing checks about the validity of the input string, which allows a possible arbitrary length stack overflow. This issue may cause a denial of service or a limited impact on confidentiality and integrity."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.6      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "A flaw was found in the c-ares package. The ares_set_sortlist is missing checks about the validity of the input string, which allows a possible arbitrary length stack overflow. This issue may cause a denial of service or a limited impact on confidentiality and integrity."
              },
              "id": "CVE-2022-4904_3.14:c-ares_1.17.2-r0",
              "name": "CVE-2022-4904-3.14:c-ares-1.17.2-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:c-ares",
                      "version": "1.17.2-r0",
                      "location": {
                        "file": "3.14:c-ares:1.17.2-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "8.6"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-4904] 3.14:c-ares 1.17.2-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.3      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [20.15.1-r0]   |",
                "text": "A vulnerability has been identified in Node.js, affecting users of the experimental permission model when the --allow-fs-write flag is used.\n\nNode.js Permission Model do not operate on file descriptors, however, operations such as fs.fchown or fs.fchmod can use a \"read-only\" file descriptor to change the owner and permissions of a file."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.3      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [20.15.1-r0]   |",
                "text": "A vulnerability has been identified in Node.js, affecting users of the experimental permission model when the --allow-fs-write flag is used.\n\nNode.js Permission Model do not operate on file descriptors, however, operations such as fs.fchown or fs.fchmod can use a \"read-only\" file descriptor to change the owner and permissions of a file."
              },
              "id": "CVE-2024-36137_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2024-36137-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "3.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-36137] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "GCC v12.0 was discovered to contain an uncontrolled recursion via the component libiberty/rust-demangle.c. This vulnerability allows attackers to cause a Denial of Service (DoS) by consuming excessive CPU and memory resources."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "GCC v12.0 was discovered to contain an uncontrolled recursion via the component libiberty/rust-demangle.c. This vulnerability allows attackers to cause a Denial of Service (DoS) by consuming excessive CPU and memory resources."
              },
              "id": "CVE-2021-46195_3.14:libgcc_10.3.1_git20210424-r2",
              "name": "CVE-2021-46195-3.14:libgcc-10.3.1-git20210424-r2",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:libgcc",
                      "version": "10.3.1_git20210424-r2",
                      "location": {
                        "file": "3.14:libgcc:10.3.1_git20210424-r2"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-46195] 3.14:libgcc 10.3.1_git20210424-r2"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r0]   |",
                "text": "Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are..."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r0]   |",
                "text": "Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are..."
              },
              "id": "CVE-2023-5363_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-5363-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-5363] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1q-r0]   |",
                "text": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1q-r0]   |",
                "text": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
              },
              "id": "CVE-2022-2097_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2022-2097-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-2097] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.7-r0]   |",
                "text": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the `.' character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service). In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.7-r0]   |",
                "text": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the `.' character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service). In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects."
              },
              "id": "CVE-2022-3786_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2022-3786-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-3786] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.0-r2]   |",
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.0-r2]   |",
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue."
              },
              "id": "CVE-2024-4603_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2024-4603-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-4603] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r2]   |",
                "text": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r2]   |",
                "text": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
              },
              "id": "CVE-2023-0465_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-0465-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0465] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.1-r0]   |",
                "text": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL..."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.1-r0]   |",
                "text": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL..."
              },
              "id": "CVE-2023-2650_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-2650-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-2650] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r2]   |",
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r2]   |",
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution."
              },
              "id": "CVE-2022-48174_3.14:busybox_1.33.1-r3",
              "name": "CVE-2022-48174-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.7      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [1.16.0], [2.1.0]   |",
                "text": "serve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.7      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [1.16.0], [2.1.0]   |",
                "text": "serve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0."
              },
              "id": "CVE-2024-43800_serve-static_1.14.1",
              "name": "CVE-2024-43800-serve-static-1.14.1",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                      }
                    },
                    {
                      "name": "serve-static",
                      "version": "1.14.1",
                      "location": {
                        "file": "node_modules/serve-static/package.json"
                      }
                    }
                  ]
                ],
                "security-severity": "4.7"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-43800] serve-static 1.14.1"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the \"return nil, nil, fail(...)\" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the \"return nil, nil, fail(...)\" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them."
              },
              "id": "CVE-2024-1394_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2024-1394-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-1394] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.2-r0]   |",
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.2-r0]   |",
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "id": "CVE-2023-3817_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-3817-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-3817] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.2-r0]   |",
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.2-r0]   |",
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "id": "CVE-2023-3817_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-3817-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-3817] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue."
              },
              "id": "CVE-2022-4450_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2022-4450-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-4450] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection."
              },
              "id": "CVE-2022-4304_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2022-4304-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-4304] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function"
              },
              "id": "CVE-2021-42386_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42386-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42386] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input."
              },
              "id": "CVE-2021-42376_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42376-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42376] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function"
              },
              "id": "CVE-2021-42379_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42379-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42379] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.17.1-r0]   |",
                "text": "A privilege escalation vulnerability exists in the experimental policy mechanism in all active release lines: 16.x, 18.x and, 20.x. The use of the deprecated API `process.binding()` can bypass the policy mechanism by requiring internal modules and eventually take advantage of `process.binding('spawn_sync')` run arbitrary code, outside of the limits defined in a `policy.json` file. Please note that at the time this CVE was issued, the policy is an experimental feature of Node.js."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.17.1-r0]   |",
                "text": "A privilege escalation vulnerability exists in the experimental policy mechanism in all active release lines: 16.x, 18.x and, 20.x. The use of the deprecated API `process.binding()` can bypass the policy mechanism by requiring internal modules and eventually take advantage of `process.binding('spawn_sync')` run arbitrary code, outside of the limits defined in a `policy.json` file. Please note that at the time this CVE was issued, the policy is an experimental feature of Node.js."
              },
              "id": "CVE-2023-32559_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2023-32559-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-32559] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.9      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [0.7.0]   |",
                "text": "cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.9      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [0.7.0]   |",
                "text": "cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain."
              },
              "id": "CVE-2024-47764_cookie_0.4.0",
              "name": "CVE-2024-47764-cookie-0.4.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                      }
                    },
                    {
                      "name": "cookie",
                      "version": "0.4.0",
                      "location": {
                        "file": "node_modules/cookie/package.json"
                      }
                    }
                  ]
                ],
                "security-severity": "3.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-47764] cookie 0.4.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1n-r0]   |",
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1n-r0]   |",
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc)."
              },
              "id": "CVE-2022-0778_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2022-0778-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1n-r0]   |",
                "text": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1n-r0]   |",
                "text": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb)."
              },
              "id": "CVE-2021-4160_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2021-4160-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-4160] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "A read buffer overrun can be triggered in X.509 certificate verification,\nspecifically in name constraint checking. Note that this occurs\nafter certificate chain signature verification and requires either a\nCA to have signed the malicious certificate or for the application to\ncontinue certificate verification despite failure to construct a path\nto a trusted issuer.\n\nThe read buffer overrun might result in a crash which could lead to\na denial of service attack. In theory it could also result in the disclosure\nof private memory contents (such as private keys, or sensitive plaintext)\nalthough we are not aware of any working exploit leading to memory\ncontents disclosure as of the time of release of this advisory.\n\nIn a TLS client, this can be triggered by connecting to a malicious\nserver. In a TLS server, this can be triggered if the server requests\nclient authentication and a malicious client connects."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "A read buffer overrun can be triggered in X.509 certificate verification,\nspecifically in name constraint checking. Note that this occurs\nafter certificate chain signature verification and requires either a\nCA to have signed the malicious certificate or for the application to\ncontinue certificate verification despite failure to construct a path\nto a trusted issuer.\n\nThe read buffer overrun might result in a crash which could lead to\na denial of service attack. In theory it could also result in the disclosure\nof private memory contents (such as private keys, or sensitive plaintext)\nalthough we are not aware of any working exploit leading to memory\ncontents disclosure as of the time of release of this advisory.\n\nIn a TLS client, this can be triggered by connecting to a malicious\nserver. In a TLS server, this can be triggered if the server requests\nclient authentication and a malicious client connects."
              },
              "id": "CVE-2022-4203_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2022-4203-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "4.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-4203] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r3]   |",
                "text": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r3]   |",
                "text": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue."
              },
              "id": "CVE-2023-6129_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-6129-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-6129] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r7]   |",
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r7]   |",
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors."
              },
              "id": "CVE-2022-28391_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2022-28391-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "8.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-28391] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.18.2-r0]   |",
                "text": "Undici is an HTTP/1.1 client written from scratch for Node.js. Prior to version 5.26.2, Undici already cleared Authorization headers on cross-origin redirects, but did not clear `Cookie` headers. By design, `cookie` headers are forbidden request headers, disallowing them to be set in RequestInit.headers in browser environments. Since undici handles headers more liberally than the spec, there was a disconnect from the assumptions the spec made, and undici's implementation of fetch. As such this may lead to accidental leakage of cookie to a third-party site or a malicious attacker who can control the redirection target (ie. an open redirector) to leak the cookie to the third party site. This was patched in version 5.26.2. There are no known workarounds."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.18.2-r0]   |",
                "text": "Undici is an HTTP/1.1 client written from scratch for Node.js. Prior to version 5.26.2, Undici already cleared Authorization headers on cross-origin redirects, but did not clear `Cookie` headers. By design, `cookie` headers are forbidden request headers, disallowing them to be set in RequestInit.headers in browser environments. Since undici handles headers more liberally than the spec, there was a disconnect from the assumptions the spec made, and undici's implementation of fetch. As such this may lead to accidental leakage of cookie to a third-party site or a malicious attacker who can control the redirection target (ie. an open redirector) to leak the cookie to the third party site. This was patched in version 5.26.2. There are no known workarounds."
              },
              "id": "CVE-2023-45143_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2023-45143-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "3.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-45143] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.4      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.14.1-r0]   |",
                "text": "Undici is an HTTP/1.1 client for Node.js. Starting with version 2.0.0 and prior to version 5.19.1, the undici library does not protect `host` HTTP header from CRLF injection vulnerabilities. This issue is patched in Undici v5.19.1. As a workaround, sanitize the `headers.host` string before passing to undici."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.4      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.14.1-r0]   |",
                "text": "Undici is an HTTP/1.1 client for Node.js. Starting with version 2.0.0 and prior to version 5.19.1, the undici library does not protect `host` HTTP header from CRLF injection vulnerabilities. This issue is patched in Undici v5.19.1. As a workaround, sanitize the `headers.host` string before passing to undici."
              },
              "id": "CVE-2023-23936_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2023-23936-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.4"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-23936] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.8      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [13.2.1_git20231014-r0]   |",
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.8      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [13.2.1_git20231014-r0]   |",
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself."
              },
              "id": "CVE-2023-4039_3.14:libgcc_10.3.1_git20210424-r2",
              "name": "CVE-2023-4039-3.14:libgcc-10.3.1-git20210424-r2",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:libgcc",
                      "version": "10.3.1_git20210424-r2",
                      "location": {
                        "file": "3.14:libgcc:10.3.1_git20210424-r2"
                      }
                    }
                  ]
                ],
                "security-severity": "4.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-4039] 3.14:libgcc 10.3.1_git20210424-r2"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.1      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.2-r5]   |",
                "text": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.1      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.2-r5]   |",
                "text": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue."
              },
              "id": "CVE-2024-13176_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2024-13176-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "4.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-13176] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.0-r4]   |",
                "text": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.0-r4]   |",
                "text": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one."
              },
              "id": "CVE-2023-1255_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-1255-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-1255] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1p-r0]   |",
                "text": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1p-r0]   |",
                "text": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze)."
              },
              "id": "CVE-2022-2068_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2022-2068-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-2068] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "An attacker-controlled pointer free in Busybox's hush applet leads to denial of service and possible code execution when processing a crafted shell command, due to the shell mishandling the &&& string. This may be used for remote code execution under rare conditions of filtered command input."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "An attacker-controlled pointer free in Busybox's hush applet leads to denial of service and possible code execution when processing a crafted shell command, due to the shell mishandling the &&& string. This may be used for remote code execution under rare conditions of filtered command input."
              },
              "id": "CVE-2021-42377_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42377-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42377] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [0.1.10], [1.9.0], [3.3.0], [6.3.0], [8.0.0]   |",
                "text": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [0.1.10], [1.9.0], [3.3.0], [6.3.0], [8.0.0]   |",
                "text": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0."
              },
              "id": "CVE-2024-45296_path-to-regexp_0.1.7",
              "name": "CVE-2024-45296-path-to-regexp-0.1.7",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                      }
                    },
                    {
                      "name": "path-to-regexp",
                      "version": "0.1.7",
                      "location": {
                        "file": "node_modules/path-to-regexp/package.json"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-45296] path-to-regexp 0.1.7"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1o-r0]   |",
                "text": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1o-r0]   |",
                "text": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd)."
              },
              "id": "CVE-2022-1292_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2022-1292-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-1292] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.7-r0]   |",
                "text": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.7-r0]   |",
                "text": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6)."
              },
              "id": "CVE-2022-3602_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2022-3602-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-3602] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r4]   |",
                "text": "Issue summary: Checking excessively long invalid RSA public keys may take\na long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check()\nto check RSA public keys may experience long delays. Where the key that\nis being checked has been obtained from an untrusted source this may lead\nto a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys,\na computation is done to confirm that the RSA modulus, n, is composite.\nFor valid RSA keys, n is a product of two or more large primes and this\ncomputation completes quickly. However, if n is an overly large prime,\nthen this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key\nobtained from an untrusted source could be vulnerable to a Denial of Service\nattack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL\nfunctions however it is called from the OpenSSL pkey command line\napplication. For that reason that application is also vulnerable if used\nwith the '-pubin' and '-check' options on untrusted data.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r4]   |",
                "text": "Issue summary: Checking excessively long invalid RSA public keys may take\na long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check()\nto check RSA public keys may experience long delays. Where the key that\nis being checked has been obtained from an untrusted source this may lead\nto a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys,\na computation is done to confirm that the RSA modulus, n, is composite.\nFor valid RSA keys, n is a product of two or more large primes and this\ncomputation completes quickly. However, if n is an overly large prime,\nthen this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key\nobtained from an untrusted source could be vulnerable to a Denial of Service\nattack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL\nfunctions however it is called from the OpenSSL pkey command line\napplication. For that reason that application is also vulnerable if used\nwith the '-pubin' and '-check' options on untrusted data.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue."
              },
              "id": "CVE-2023-6237_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-6237-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-6237] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue."
              },
              "id": "CVE-2022-4450_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2022-4450-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-4450] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r25]   |",
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r25]   |",
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159."
              },
              "id": "CVE-2023-42366_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2023-42366-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [1.27.0-r0]   |",
                "text": "c-ares is a C library for asynchronous DNS requests. `ares__read_line()` is used to parse local configuration files such as `/etc/resolv.conf`, `/etc/nsswitch.conf`, the `HOSTALIASES` file, and if using a c-ares version prior to 1.27.0, the `/etc/hosts` file. If any of these configuration files has an embedded `NULL` character as the first character in a new line, it can lead to attempting to read memory prior to the start of the given buffer which may result in a crash. This issue is fixed in c-ares 1.27.0. No known workarounds exist."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [1.27.0-r0]   |",
                "text": "c-ares is a C library for asynchronous DNS requests. `ares__read_line()` is used to parse local configuration files such as `/etc/resolv.conf`, `/etc/nsswitch.conf`, the `HOSTALIASES` file, and if using a c-ares version prior to 1.27.0, the `/etc/hosts` file. If any of these configuration files has an embedded `NULL` character as the first character in a new line, it can lead to attempting to read memory prior to the start of the given buffer which may result in a crash. This issue is fixed in c-ares 1.27.0. No known workarounds exist."
              },
              "id": "CVE-2024-25629_3.14:c-ares_1.17.2-r0",
              "name": "CVE-2024-25629-3.14:c-ares-1.17.2-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:c-ares",
                      "version": "1.17.2-r0",
                      "location": {
                        "file": "3.14:c-ares:1.17.2-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-25629] 3.14:c-ares 1.17.2-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.2.1-r2]   |",
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.2.1-r2]   |",
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue."
              },
              "id": "CVE-2024-2511_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2024-2511-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-2511] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.1-r3]   |",
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.1-r3]   |",
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "id": "CVE-2023-3446_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-3446-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-3446] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.2-r3]   |",
                "text": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.2-r3]   |",
                "text": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "id": "CVE-2024-9143_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2024-9143-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "4.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-9143] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.4      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "c-ares is an asynchronous resolver library. ares_inet_net_pton() is vulnerable to a buffer underflow for certain ipv6 addresses, in particular \"0::00:00:00/2\" was found to cause an issue.  C-ares only uses this function internally for configuration purposes which would require an administrator to configure such an address via ares_set_sortlist(). However, users may externally use ares_inet_net_pton() for other purposes and thus be vulnerable to more severe issues. This issue has been fixed in 1.19.1."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.4      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "c-ares is an asynchronous resolver library. ares_inet_net_pton() is vulnerable to a buffer underflow for certain ipv6 addresses, in particular \"0::00:00:00/2\" was found to cause an issue.  C-ares only uses this function internally for configuration purposes which would require an administrator to configure such an address via ares_set_sortlist(). However, users may externally use ares_inet_net_pton() for other purposes and thus be vulnerable to more severe issues. This issue has been fixed in 1.19.1."
              },
              "id": "CVE-2023-31130_3.14:c-ares_1.17.2-r0",
              "name": "CVE-2023-31130-3.14:c-ares-1.17.2-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:c-ares",
                      "version": "1.17.2-r0",
                      "location": {
                        "file": "3.14:c-ares:1.17.2-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.4"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-31130] 3.14:c-ares 1.17.2-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.1      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.1-r1]   |",
                "text": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of ..."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.1      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.1-r1]   |",
                "text": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of ..."
              },
              "id": "CVE-2024-5535_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2024-5535-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "9.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-5535] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.2-r0]   |",
                "text": "Issue summary: Applications performing certificate name checks (e.g., TLS\nclients checking server certificates) may attempt to read an invalid memory\naddress resulting in abnormal termination of the application process.\n\nImpact summary: Abnormal termination of an application can a cause a denial of\nservice.\n\nApplications performing certificate name checks (e.g., TLS clients checking\nserver certificates) may attempt to read an invalid memory address when\ncomparing the expected name with an `otherName` subject alternative name of an\nX.509 certificate. This may result in an exception that terminates the\napplication program.\n\nNote that basic certificate chain validation (signatures, dates, ...) is not\naffected, the denial of service can occur only when the application also\nspecifies an expected DNS name, Email address or IP address.\n\nTLS servers rarely solicit client certificates, and even when they do, they\ngenerally don't perform a name check against a reference identifier (expected\nidentity), but rather extract the presented identity after checking the\ncertificate chain.  So TLS servers are generally not affected and the severity\nof the issue is Moderate.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.2-r0]   |",
                "text": "Issue summary: Applications performing certificate name checks (e.g., TLS\nclients checking server certificates) may attempt to read an invalid memory\naddress resulting in abnormal termination of the application process.\n\nImpact summary: Abnormal termination of an application can a cause a denial of\nservice.\n\nApplications performing certificate name checks (e.g., TLS clients checking\nserver certificates) may attempt to read an invalid memory address when\ncomparing the expected name with an `otherName` subject alternative name of an\nX.509 certificate. This may result in an exception that terminates the\napplication program.\n\nNote that basic certificate chain validation (signatures, dates, ...) is not\naffected, the denial of service can occur only when the application also\nspecifies an expected DNS name, Email address or IP address.\n\nTLS servers rarely solicit client certificates, and even when they do, they\ngenerally don't perform a name check against a reference identifier (expected\nidentity), but rather extract the presented identity after checking the\ncertificate chain.  So TLS servers are generally not affected and the severity\nof the issue is Moderate.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "id": "CVE-2024-6119_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2024-6119-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-6119] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r5]   |",
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r5]   |",
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "id": "CVE-2024-0727_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2024-0727-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-0727] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.0-r3]   |",
                "text": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.0-r3]   |",
                "text": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "id": "CVE-2024-4741_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2024-4741-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-4741] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r27]   |",
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r27]   |",
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1."
              },
              "id": "CVE-2023-42363_3.14:busybox_1.33.1-r3",
              "name": "CVE-2023-42363-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.14.1-r0]   |",
                "text": "Undici is an HTTP/1.1 client for Node.js. Prior to version 5.19.1, the `Headers.set()` and `Headers.append()` methods are vulnerable to Regular Expression Denial of Service (ReDoS) attacks when untrusted values are passed into the functions. This is due to the inefficient regular expression used to normalize the values in the `headerValueNormalize()` utility function. This vulnerability was patched in v5.19.1. No known workarounds are available."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.14.1-r0]   |",
                "text": "Undici is an HTTP/1.1 client for Node.js. Prior to version 5.19.1, the `Headers.set()` and `Headers.append()` methods are vulnerable to Regular Expression Denial of Service (ReDoS) attacks when untrusted values are passed into the functions. This is due to the inefficient regular expression used to normalize the values in the `headerValueNormalize()` utility function. This vulnerability was patched in v5.19.1. No known workarounds are available."
              },
              "id": "CVE-2023-24807_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2023-24807-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-24807] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A vulnerability was found in Golang FIPS OpenSSL. This flaw allows a malicious user to randomly cause an uninitialized buffer length variable with a zeroed buffer to be returned in FIPS mode. It may also be possible to force a false positive match between non-equal hashes when comparing a trusted computed hmac sum to an untrusted input sum if an attacker can send a zeroed buffer in place of a pre-computed sum.  It is also possible to force a derived key to be all zeros instead of an unpredictable value.  This may have follow-on implications for the Go TLS stack."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A vulnerability was found in Golang FIPS OpenSSL. This flaw allows a malicious user to randomly cause an uninitialized buffer length variable with a zeroed buffer to be returned in FIPS mode. It may also be possible to force a false positive match between non-equal hashes when comparing a trusted computed hmac sum to an untrusted input sum if an attacker can send a zeroed buffer in place of a pre-computed sum.  It is also possible to force a derived key to be all zeros instead of an unpredictable value.  This may have follow-on implications for the Go TLS stack."
              },
              "id": "CVE-2024-9355_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2024-9355-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-9355] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.9      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [1.34.5-r0]   |",
                "text": "c-ares is an asynchronous resolver library. From 1.32.3 through 1.34.4, there is a use-after-free in read_answers() when process_answer() may re-enqueue a query either due to a DNS Cookie Failure or when the upstream server does not properly support EDNS, or possibly on TCP queries if the remote closed the connection immediately after a response. If there was an issue trying to put that new transaction on the wire, it would close the connection handle, but read_answers() was still expecting the connection handle to be available to possibly dequeue other responses. In theory a remote attacker might be able to trigger this by flooding the target with ICMP UNREACHABLE packets if they also control the upstream nameserver and can return a result with one of those conditions, this has been untested. Otherwise only a local attacker might be able to change system behavior to make send()/write() return a failure condition. This vulnerability is fixed in 1.34.5."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.9      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [1.34.5-r0]   |",
                "text": "c-ares is an asynchronous resolver library. From 1.32.3 through 1.34.4, there is a use-after-free in read_answers() when process_answer() may re-enqueue a query either due to a DNS Cookie Failure or when the upstream server does not properly support EDNS, or possibly on TCP queries if the remote closed the connection immediately after a response. If there was an issue trying to put that new transaction on the wire, it would close the connection handle, but read_answers() was still expecting the connection handle to be available to possibly dequeue other responses. In theory a remote attacker might be able to trigger this by flooding the target with ICMP UNREACHABLE packets if they also control the upstream nameserver and can return a result with one of those conditions, this has been untested. Otherwise only a local attacker might be able to change system behavior to make send()/write() return a failure condition. This vulnerability is fixed in 1.34.5."
              },
              "id": "CVE-2025-31498_3.14:c-ares_1.17.2-r0",
              "name": "CVE-2025-31498-3.14:c-ares-1.17.2-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:c-ares",
                      "version": "1.17.2-r0",
                      "location": {
                        "file": "3.14:c-ares:1.17.2-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "8.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-31498] 3.14:c-ares 1.17.2-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [22.13.1-r0]   |",
                "text": "A memory leak could occur when a remote peer abruptly closes the socket without sending a GOAWAY notification. Additionally, if an invalid header was detected by nghttp2, causing the connection to be terminated by the peer, the same leak was triggered. This flaw could lead to increased memory consumption and potential denial of service under certain conditions.\n\nThis vulnerability affects HTTP/2 Server users on Node.js v18.x, v20.x, v22.x and v23.x."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [22.13.1-r0]   |",
                "text": "A memory leak could occur when a remote peer abruptly closes the socket without sending a GOAWAY notification. Additionally, if an invalid header was detected by nghttp2, causing the connection to be terminated by the peer, the same leak was triggered. This flaw could lead to increased memory consumption and potential denial of service under certain conditions.\n\nThis vulnerability affects HTTP/2 Server users on Node.js v18.x, v20.x, v22.x and v23.x."
              },
              "id": "CVE-2025-23085_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2025-23085-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-23085] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new."
              },
              "id": "CVE-2022-27943_3.14:libstdc++_10.3.1_git20210424-r2",
              "name": "CVE-2022-27943-3.14:libstdc++-10.3.1-git20210424-r2",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:libstdc++",
                      "version": "10.3.1_git20210424-r2",
                      "location": {
                        "file": "3.14:libstdc++:10.3.1_git20210424-r2"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-27943] 3.14:libstdc++ 10.3.1_git20210424-r2"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.3-r0]   |",
                "text": "Issue summary: Clients using RFC7250 Raw Public Keys (RPKs) to authenticate a\nserver may fail to notice that the server was not authenticated, because\nhandshakes don't abort as expected when the SSL_VERIFY_PEER verification mode\nis set.\n\nImpact summary: TLS and DTLS connections using raw public keys may be\nvulnerable to man-in-middle attacks when server authentication failure is not\ndetected by clients.\n\nRPKs are disabled by default in both TLS clients and TLS servers.  The issue\nonly arises when TLS clients explicitly enable RPK use by the server, and the\nserver, likewise, enables sending of an RPK instead of an X.509 certificate\nchain.  The affected clients are those that then rely on the handshake to\nfail when the server's RPK fails to match one of the expected public keys,\nby setting the verification mode to SSL_VERIFY_PEER.\n\nClients that enable server-side raw public keys can still find out that raw\npublic key verification failed by calling SSL_get_verify_result(), and those\nthat do, and take appropriate action, are not affected.  This issue was\nintroduced in the initial implementation of RPK support in OpenSSL 3.2.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.3-r0]   |",
                "text": "Issue summary: Clients using RFC7250 Raw Public Keys (RPKs) to authenticate a\nserver may fail to notice that the server was not authenticated, because\nhandshakes don't abort as expected when the SSL_VERIFY_PEER verification mode\nis set.\n\nImpact summary: TLS and DTLS connections using raw public keys may be\nvulnerable to man-in-middle attacks when server authentication failure is not\ndetected by clients.\n\nRPKs are disabled by default in both TLS clients and TLS servers.  The issue\nonly arises when TLS clients explicitly enable RPK use by the server, and the\nserver, likewise, enables sending of an RPK instead of an X.509 certificate\nchain.  The affected clients are those that then rely on the handshake to\nfail when the server's RPK fails to match one of the expected public keys,\nby setting the verification mode to SSL_VERIFY_PEER.\n\nClients that enable server-side raw public keys can still find out that raw\npublic key verification failed by calling SSL_get_verify_result(), and those\nthat do, and take appropriate action, are not affected.  This issue was\nintroduced in the initial implementation of RPK support in OpenSSL 3.2.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "id": "CVE-2024-12797_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2024-12797-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-12797] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r5]   |",
                "text": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r5]   |",
                "text": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input."
              },
              "id": "CVE-2021-42375_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42375-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42375] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function"
              },
              "id": "CVE-2021-42384_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42384-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42384] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.8      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [13.2.1_git20231014-r0]   |",
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.8      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [13.2.1_git20231014-r0]   |",
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself."
              },
              "id": "CVE-2023-4039_3.14:libstdc++_10.3.1_git20210424-r2",
              "name": "CVE-2023-4039-3.14:libstdc++-10.3.1-git20210424-r2",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:libstdc++",
                      "version": "10.3.1_git20210424-r2",
                      "location": {
                        "file": "3.14:libstdc++:10.3.1_git20210424-r2"
                      }
                    }
                  ]
                ],
                "security-severity": "4.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-4039] 3.14:libstdc++ 10.3.1_git20210424-r2"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.7      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [0.19.0]   |",
                "text": "Send is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.7      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [0.19.0]   |",
                "text": "Send is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0."
              },
              "id": "CVE-2024-43799_send_0.17.1",
              "name": "CVE-2024-43799-send-0.17.1",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                      }
                    },
                    {
                      "name": "send",
                      "version": "0.17.1",
                      "location": {
                        "file": "node_modules/send/package.json"
                      }
                    }
                  ]
                ],
                "security-severity": "4.7"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-43799] send 0.17.1"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.1-r0]   |",
                "text": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL..."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.1-r0]   |",
                "text": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL..."
              },
              "id": "CVE-2023-2650_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-2650-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-2650] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "An invalid pointer dereference on read can be triggered when an\napplication tries to load malformed PKCS7 data with the\nd2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.\n\nThe result of the dereference is an application crash which could\nlead to a denial of service attack. The TLS implementation in OpenSSL\ndoes not call this function however third party applications might\ncall these functions on untrusted data."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "An invalid pointer dereference on read can be triggered when an\napplication tries to load malformed PKCS7 data with the\nd2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.\n\nThe result of the dereference is an application crash which could\nlead to a denial of service attack. The TLS implementation in OpenSSL\ndoes not call this function however third party applications might\ncall these functions on untrusted data."
              },
              "id": "CVE-2023-0216_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-0216-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0216] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.5.1-r0]   |",
                "text": "Issue summary: Use of -addreject option with the openssl x509 application adds\na trusted use instead of a rejected use for a certificate.\n\nImpact summary: If a user intends to make a trusted certificate rejected for\na particular use it will be instead marked as trusted for that use.\n\nA copy & paste error during minor refactoring of the code introduced this\nissue in the OpenSSL 3.5 version. If, for example, a trusted CA certificate\nshould be trusted only for the purpose of authenticating TLS servers but not\nfor CMS signature verification and the CMS signature verification is intended\nto be marked as rejected with the -addreject option, the resulting CA\ncertificate will be trusted for CMS signature verification purpose instead.\n\nOnly users which use the trusted certificate format who use the openssl x509\ncommand line application to add rejected uses are affected by this issue.\nThe issues affecting only the command line application are considered to\nbe Low severity.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue.\n\nOpenSSL 3.4, 3.3, 3.2, 3.1, 3.0, 1.1.1 and 1.0.2 are also not affected by this\nissue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.5.1-r0]   |",
                "text": "Issue summary: Use of -addreject option with the openssl x509 application adds\na trusted use instead of a rejected use for a certificate.\n\nImpact summary: If a user intends to make a trusted certificate rejected for\na particular use it will be instead marked as trusted for that use.\n\nA copy & paste error during minor refactoring of the code introduced this\nissue in the OpenSSL 3.5 version. If, for example, a trusted CA certificate\nshould be trusted only for the purpose of authenticating TLS servers but not\nfor CMS signature verification and the CMS signature verification is intended\nto be marked as rejected with the -addreject option, the resulting CA\ncertificate will be trusted for CMS signature verification purpose instead.\n\nOnly users which use the trusted certificate format who use the openssl x509\ncommand line application to add rejected uses are affected by this issue.\nThe issues affecting only the command line application are considered to\nbe Low severity.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue.\n\nOpenSSL 3.4, 3.3, 3.2, 3.1, 3.0, 1.1.1 and 1.0.2 are also not affected by this\nissue."
              },
              "id": "CVE-2025-4575_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2025-4575-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-4575] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.1-r3]   |",
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.1-r3]   |",
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "id": "CVE-2023-3446_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-3446-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-3446] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1l-r0]   |",
                "text": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1l-r0]   |",
                "text": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k)."
              },
              "id": "CVE-2021-3711_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2021-3711-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-3711] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "The openssl (aka node-openssl) NPM package through 2.0.0 was characterized as \"a nonsense wrapper with no real purpose\" by its author, and accepts an opts argument that contains a verb field (used for command execution). NOTE: This vulnerability only affects products that are no longer supported by the maintainer."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "The openssl (aka node-openssl) NPM package through 2.0.0 was characterized as \"a nonsense wrapper with no real purpose\" by its author, and accepts an opts argument that contains a verb field (used for command execution). NOTE: This vulnerability only affects products that are no longer supported by the maintainer."
              },
              "id": "CVE-2023-49210_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-49210-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-49210] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r27]   |",
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r27]   |",
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1."
              },
              "id": "CVE-2023-42363_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2023-42363-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r30]   |",
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.36.1-r30]   |",
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function."
              },
              "id": "CVE-2023-42365_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2023-42365-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.18.2-r0]   |",
                "text": "Maliciously crafted export names in an imported WebAssembly module can inject JavaScript code. The injected code may be able to access data and functions that the WebAssembly module itself does not have access to, similar to as if the WebAssembly module was a JavaScript module.\n\nThis vulnerability affects users of any active release line of Node.js. The vulnerable feature is only available if Node.js is started with the `--experimental-wasm-modules` command line option."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.18.2-r0]   |",
                "text": "Maliciously crafted export names in an imported WebAssembly module can inject JavaScript code. The injected code may be able to access data and functions that the WebAssembly module itself does not have access to, similar to as if the WebAssembly module was a JavaScript module.\n\nThis vulnerability affects users of any active release line of Node.js. The vulnerable feature is only available if Node.js is started with the `--experimental-wasm-modules` command line option."
              },
              "id": "CVE-2023-39333_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2023-39333-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-39333] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "crypto/rsa/rsa_gen.c in OpenSSL before 0.9.6 mishandles C bitwise-shift operations that exceed the size of an expression, which makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging improper RSA key generation on 64-bit HP-UX platforms."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "crypto/rsa/rsa_gen.c in OpenSSL before 0.9.6 mishandles C bitwise-shift operations that exceed the size of an expression, which makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging improper RSA key generation on 64-bit HP-UX platforms."
              },
              "id": "CVE-2000-1254_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2000-1254-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2000-1254] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.1-r2]   |",
                "text": "Issue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be misled by removing,\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.1-r2]   |",
                "text": "Issue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be misled by removing,\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue."
              },
              "id": "CVE-2023-2975_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-2975-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-2975] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.4      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1l-r0]   |",
                "text": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory content..."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.4      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1l-r0]   |",
                "text": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory content..."
              },
              "id": "CVE-2021-3712_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2021-3712-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.4"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-3712] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the \"return nil, nil, fail(...)\" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the \"return nil, nil, fail(...)\" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them."
              },
              "id": "CVE-2024-1394_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2024-1394-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-1394] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1n-r0]   |",
                "text": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1n-r0]   |",
                "text": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb)."
              },
              "id": "CVE-2021-4160_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2021-4160-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-4160] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function"
              },
              "id": "CVE-2021-42378_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42378-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42378] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function"
              },
              "id": "CVE-2021-42378_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42378-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42378] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.1      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.2.5-r10]   |",
                "text": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.1      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.2.5-r10]   |",
                "text": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8."
              },
              "id": "CVE-2025-26519_3.14:musl_1.2.2-r3",
              "name": "CVE-2025-26519-3.14:musl-1.2.2-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:musl",
                      "version": "1.2.2-r3",
                      "location": {
                        "file": "3.14:musl:1.2.2-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "8.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-26519] 3.14:musl 1.2.2-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r7]   |",
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r7]   |",
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors."
              },
              "id": "CVE-2022-28391_3.14:busybox_1.33.1-r3",
              "name": "CVE-2022-28391-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "8.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-28391] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "c-ares is an asynchronous resolver library. When /dev/urandom or RtlGenRandom() are unavailable, c-ares uses rand() to generate random numbers used for DNS query ids. This is not a CSPRNG, and it is also not seeded by srand() so will generate predictable output. Input from the random number generator is fed into a non-compilant RC4 implementation and may not be as strong as the original RC4 implementation. No attempt is made to look for modern OS-provided CSPRNGs like arc4random() that is widely available. This issue has been fixed in version 1.19.1."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "c-ares is an asynchronous resolver library. When /dev/urandom or RtlGenRandom() are unavailable, c-ares uses rand() to generate random numbers used for DNS query ids. This is not a CSPRNG, and it is also not seeded by srand() so will generate predictable output. Input from the random number generator is fed into a non-compilant RC4 implementation and may not be as strong as the original RC4 implementation. No attempt is made to look for modern OS-provided CSPRNGs like arc4random() that is widely available. This issue has been fixed in version 1.19.1."
              },
              "id": "CVE-2023-31147_3.14:c-ares_1.17.2-r0",
              "name": "CVE-2023-31147-3.14:c-ares-1.17.2-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:c-ares",
                      "version": "1.17.2-r0",
                      "location": {
                        "file": "3.14:c-ares:1.17.2-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-31147] 3.14:c-ares 1.17.2-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.7      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [4.20.0], [5.0.0]   |",
                "text": "Express.js minimalist web framework for node. In express < 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.7      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [4.20.0], [5.0.0]   |",
                "text": "Express.js minimalist web framework for node. In express < 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0."
              },
              "id": "CVE-2024-43796_express_4.17.1",
              "name": "CVE-2024-43796-express-4.17.1",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                      }
                    },
                    {
                      "name": "express",
                      "version": "4.17.1",
                      "location": {
                        "file": "node_modules/express/package.json"
                      }
                    }
                  ]
                ],
                "security-severity": "4.7"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-43796] express 4.17.1"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.1      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.2-r5]   |",
                "text": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.1      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.2-r5]   |",
                "text": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue."
              },
              "id": "CVE-2024-13176_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2024-13176-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "4.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-13176] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r1]   |",
                "text": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r1]   |",
                "text": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "id": "CVE-2023-5678_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-5678-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-5678] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r5]   |",
                "text": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r5]   |",
                "text": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input."
              },
              "id": "CVE-2021-42375_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42375-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42375] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function"
              },
              "id": "CVE-2021-42381_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42381-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42381] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function"
              },
              "id": "CVE-2021-42385_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42385-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42385] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A NULL pointer dereference in Busybox's man applet leads to denial of service when a section name is supplied but no page argument is given"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A NULL pointer dereference in Busybox's man applet leads to denial of service when a section name is supplied but no page argument is given"
              },
              "id": "CVE-2021-42373_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42373-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42373] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.17.1-r0]   |",
                "text": "The use of `Module._load()` can bypass the policy mechanism and require modules outside of the policy.json definition for a given module.\n\nThis vulnerability affects all users using the experimental policy mechanism in all active release lines: 16.x, 18.x and, 20.x.\n\nPlease note that at the time this CVE was issued, the policy is an experimental feature of Node.js."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.17.1-r0]   |",
                "text": "The use of `Module._load()` can bypass the policy mechanism and require modules outside of the policy.json definition for a given module.\n\nThis vulnerability affects all users using the experimental policy mechanism in all active release lines: 16.x, 18.x and, 20.x.\n\nPlease note that at the time this CVE was issued, the policy is an experimental feature of Node.js."
              },
              "id": "CVE-2023-32002_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2023-32002-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-32002] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.1      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.2.5-r10]   |",
                "text": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.1      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.2.5-r10]   |",
                "text": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8."
              },
              "id": "CVE-2025-26519_3.14:musl-utils_1.2.2-r3",
              "name": "CVE-2025-26519-3.14:musl-utils-1.2.2-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:musl-utils",
                      "version": "1.2.2-r3",
                      "location": {
                        "file": "3.14:musl-utils:1.2.2-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "8.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-26519] 3.14:musl-utils 1.2.2-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1l-r0]   |",
                "text": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1l-r0]   |",
                "text": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k)."
              },
              "id": "CVE-2021-3711_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2021-3711-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-3711] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "An attacker-controlled pointer free in Busybox's hush applet leads to denial of service and possible code execution when processing a crafted shell command, due to the shell mishandling the &&& string. This may be used for remote code execution under rare conditions of filtered command input."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "An attacker-controlled pointer free in Busybox's hush applet leads to denial of service and possible code execution when processing a crafted shell command, due to the shell mishandling the &&& string. This may be used for remote code execution under rare conditions of filtered command input."
              },
              "id": "CVE-2021-42377_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42377-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42377] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [4.19.2], [5.0.0-beta.3]   |",
                "text": "Express.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [4.19.2], [5.0.0-beta.3]   |",
                "text": "Express.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3."
              },
              "id": "CVE-2024-29041_express_4.17.1",
              "name": "CVE-2024-29041-express-4.17.1",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                      }
                    },
                    {
                      "name": "express",
                      "version": "4.17.1",
                      "location": {
                        "file": "node_modules/express/package.json"
                      }
                    }
                  ]
                ],
                "security-severity": "6.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-29041] express 4.17.1"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [20.15.1-r0]   |",
                "text": "A security flaw in Node.js  allows a bypass of network import restrictions.\nBy embedding non-network imports in data URLs, an attacker can execute arbitrary code, compromising system security.\nVerified on various platforms, the vulnerability is mitigated by forbidding data URLs in network imports.\nExploiting this flaw can violate network import security, posing a risk to developers and servers."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [20.15.1-r0]   |",
                "text": "A security flaw in Node.js  allows a bypass of network import restrictions.\nBy embedding non-network imports in data URLs, an attacker can execute arbitrary code, compromising system security.\nVerified on various platforms, the vulnerability is mitigated by forbidding data URLs in network imports.\nExploiting this flaw can violate network import security, posing a risk to developers and servers."
              },
              "id": "CVE-2024-22020_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2024-22020-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-22020] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [22.15.1-r0]   |",
                "text": "The C++ method SignTraits::DeriveBits() may incorrectly call ThrowException() based on user-supplied inputs when executing in a background thread, crashing the Node.js process. Such cryptographic operations are commonly applied to untrusted inputs. Thus, this mechanism potentially allows an adversary to remotely crash a Node.js runtime."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [22.15.1-r0]   |",
                "text": "The C++ method SignTraits::DeriveBits() may incorrectly call ThrowException() based on user-supplied inputs when executing in a background thread, crashing the Node.js process. Such cryptographic operations are commonly applied to untrusted inputs. Thus, this mechanism potentially allows an adversary to remotely crash a Node.js runtime."
              },
              "id": "CVE-2025-23166_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2025-23166-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-23166] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol."
              },
              "id": "CVE-2021-3826_3.14:libstdc++_10.3.1_git20210424-r2",
              "name": "CVE-2021-3826-3.14:libstdc++-10.3.1-git20210424-r2",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:libstdc++",
                      "version": "10.3.1_git20210424-r2",
                      "location": {
                        "file": "3.14:libstdc++:10.3.1_git20210424-r2"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-3826] 3.14:libstdc++ 10.3.1_git20210424-r2"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r0]   |",
                "text": "Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are..."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r0]   |",
                "text": "Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are..."
              },
              "id": "CVE-2023-5363_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-5363-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-5363] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1n-r0]   |",
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1n-r0]   |",
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc)."
              },
              "id": "CVE-2022-0778_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2022-0778-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "A NULL pointer can be dereferenced when signatures are being\nverified on PKCS7 signed or signedAndEnveloped data. In case the hash\nalgorithm used for the signature is known to the OpenSSL library but\nthe implementation of the hash algorithm is not available the digest\ninitialization will fail. There is a missing check for the return\nvalue from the initialization function which later leads to invalid\nusage of the digest API most likely leading to a crash.\n\nThe unavailability of an algorithm can be caused by using FIPS\nenabled configuration of providers or more commonly by not loading\nthe legacy provider.\n\nPKCS7 data is processed by the SMIME library calls and also by the\ntime stamp (TS) library calls. The TLS implementation in OpenSSL does\nnot call these functions however third party applications would be\naffected if they call these functions to verify signatures on untrusted\ndata."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "A NULL pointer can be dereferenced when signatures are being\nverified on PKCS7 signed or signedAndEnveloped data. In case the hash\nalgorithm used for the signature is known to the OpenSSL library but\nthe implementation of the hash algorithm is not available the digest\ninitialization will fail. There is a missing check for the return\nvalue from the initialization function which later leads to invalid\nusage of the digest API most likely leading to a crash.\n\nThe unavailability of an algorithm can be caused by using FIPS\nenabled configuration of providers or more commonly by not loading\nthe legacy provider.\n\nPKCS7 data is processed by the SMIME library calls and also by the\ntime stamp (TS) library calls. The TLS implementation in OpenSSL does\nnot call these functions however third party applications would be\naffected if they call these functions to verify signatures on untrusted\ndata."
              },
              "id": "CVE-2023-0401_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-0401-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0401] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.0-r4]   |",
                "text": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.0-r4]   |",
                "text": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one."
              },
              "id": "CVE-2023-1255_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-1255-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-1255] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 2.9      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [20.15.1-r0]   |",
                "text": "A vulnerability has been identified in Node.js, affecting users of the experimental permission model when the --allow-fs-read flag is used.\nThis flaw arises from an inadequate permission model that fails to restrict file stats through the fs.lstat API. As a result, malicious actors can retrieve stats from files that they do not have explicit read access to.\nThis vulnerability affects all users using the experimental permission model in Node.js 20 and Node.js 21.\nPlease note that at the time this CVE was issued, the permission model is an experimental feature of Node.js."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 2.9      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [20.15.1-r0]   |",
                "text": "A vulnerability has been identified in Node.js, affecting users of the experimental permission model when the --allow-fs-read flag is used.\nThis flaw arises from an inadequate permission model that fails to restrict file stats through the fs.lstat API. As a result, malicious actors can retrieve stats from files that they do not have explicit read access to.\nThis vulnerability affects all users using the experimental permission model in Node.js 20 and Node.js 21.\nPlease note that at the time this CVE was issued, the permission model is an experimental feature of Node.js."
              },
              "id": "CVE-2024-22018_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2024-22018-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "2.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-22018] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r5]   |",
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r5]   |",
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "id": "CVE-2024-0727_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2024-0727-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-0727] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function"
              },
              "id": "CVE-2021-42385_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42385-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42385] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function"
              },
              "id": "CVE-2021-42380_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42380-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42380] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [22.13.1-r0]   |",
                "text": "A vulnerability has been identified in Node.js, specifically affecting the handling of drive names in the Windows environment. Certain Node.js functions do not treat drive names as special on Windows. As a result, although Node.js assumes a relative path, it actually refers to the root directory.\n\nOn Windows, a path that does not start with the file separator is treated as relative to the current directory. \n\nThis vulnerability affects Windows users of `path.join` API."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [22.13.1-r0]   |",
                "text": "A vulnerability has been identified in Node.js, specifically affecting the handling of drive names in the Windows environment. Certain Node.js functions do not treat drive names as special on Windows. As a result, although Node.js assumes a relative path, it actually refers to the root directory.\n\nOn Windows, a path that does not start with the file separator is treated as relative to the current directory. \n\nThis vulnerability affects Windows users of `path.join` API."
              },
              "id": "CVE-2025-23084_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2025-23084-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-23084] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [0.1.12]   |",
                "text": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of path-to-regexp. Upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [0.1.12]   |",
                "text": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of path-to-regexp. Upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296."
              },
              "id": "CVE-2024-52798_path-to-regexp_0.1.7",
              "name": "CVE-2024-52798-path-to-regexp-0.1.7",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                      }
                    },
                    {
                      "name": "path-to-regexp",
                      "version": "0.1.7",
                      "location": {
                        "file": "node_modules/path-to-regexp/package.json"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-52798] path-to-regexp 0.1.7"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.7-r0]   |",
                "text": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the `.' character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service). In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.7-r0]   |",
                "text": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the `.' character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service). In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects."
              },
              "id": "CVE-2022-3786_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2022-3786-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-3786] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.4      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1l-r0]   |",
                "text": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory content..."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.4      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1l-r0]   |",
                "text": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory content..."
              },
              "id": "CVE-2021-3712_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2021-3712-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.4"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-3712] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r1]   |",
                "text": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r1]   |",
                "text": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
              },
              "id": "CVE-2023-0464_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-0464-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0464] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r2]   |",
                "text": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r2]   |",
                "text": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
              },
              "id": "CVE-2023-0465_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-0465-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0465] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected."
              },
              "id": "CVE-2023-0215_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-0215-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0215] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function"
              },
              "id": "CVE-2021-42379_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42379-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42379] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function"
              },
              "id": "CVE-2021-42380_3.14:busybox_1.33.1-r3",
              "name": "CVE-2021-42380-3.14:busybox-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:busybox",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:busybox:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42380] 3.14:busybox 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A NULL pointer dereference in Busybox's man applet leads to denial of service when a section name is supplied but no page argument is given"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A NULL pointer dereference in Busybox's man applet leads to denial of service when a section name is supplied but no page argument is given"
              },
              "id": "CVE-2021-42373_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42373-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42373] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "The openssl gem for Ruby uses the same initialization vector (IV) in GCM Mode (aes-*-gcm) when the IV is set before the key, which makes it easier for context-dependent attackers to bypass the encryption protection mechanism."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "The openssl gem for Ruby uses the same initialization vector (IV) in GCM Mode (aes-*-gcm) when the IV is set before the key, which makes it easier for context-dependent attackers to bypass the encryption protection mechanism."
              },
              "id": "CVE-2016-7798_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2016-7798-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2016-7798] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "An invalid pointer dereference on read can be triggered when an\napplication tries to check a malformed DSA public key by the\nEVP_PKEY_public_check() function. This will most likely lead\nto an application crash. This function can be called on public\nkeys supplied from untrusted sources which could allow an attacker\nto cause a denial of service attack.\n\nThe TLS implementation in OpenSSL does not call this function\nbut applications might call the function if there are additional\nsecurity requirements imposed by standards such as FIPS 140-3."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "An invalid pointer dereference on read can be triggered when an\napplication tries to check a malformed DSA public key by the\nEVP_PKEY_public_check() function. This will most likely lead\nto an application crash. This function can be called on public\nkeys supplied from untrusted sources which could allow an attacker\nto cause a denial of service attack.\n\nThe TLS implementation in OpenSSL does not call this function\nbut applications might call the function if there are additional\nsecurity requirements imposed by standards such as FIPS 140-3."
              },
              "id": "CVE-2023-0217_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-0217-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0217] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.4      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.4      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network."
              },
              "id": "CVE-2023-0286_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-0286-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.4"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0286] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "A read buffer overrun can be triggered in X.509 certificate verification,\nspecifically in name constraint checking. Note that this occurs\nafter certificate chain signature verification and requires either a\nCA to have signed the malicious certificate or for the application to\ncontinue certificate verification despite failure to construct a path\nto a trusted issuer.\n\nThe read buffer overrun might result in a crash which could lead to\na denial of service attack. In theory it could also result in the disclosure\nof private memory contents (such as private keys, or sensitive plaintext)\nalthough we are not aware of any working exploit leading to memory\ncontents disclosure as of the time of release of this advisory.\n\nIn a TLS client, this can be triggered by connecting to a malicious\nserver. In a TLS server, this can be triggered if the server requests\nclient authentication and a malicious client connects."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.0.8-r0]   |",
                "text": "A read buffer overrun can be triggered in X.509 certificate verification,\nspecifically in name constraint checking. Note that this occurs\nafter certificate chain signature verification and requires either a\nCA to have signed the malicious certificate or for the application to\ncontinue certificate verification despite failure to construct a path\nto a trusted issuer.\n\nThe read buffer overrun might result in a crash which could lead to\na denial of service attack. In theory it could also result in the disclosure\nof private memory contents (such as private keys, or sensitive plaintext)\nalthough we are not aware of any working exploit leading to memory\ncontents disclosure as of the time of release of this advisory.\n\nIn a TLS client, this can be triggered by connecting to a malicious\nserver. In a TLS server, this can be triggered if the server requests\nclient authentication and a malicious client connects."
              },
              "id": "CVE-2022-4203_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2022-4203-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "4.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-4203] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r4]   |",
                "text": "Issue summary: Checking excessively long invalid RSA public keys may take\na long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check()\nto check RSA public keys may experience long delays. Where the key that\nis being checked has been obtained from an untrusted source this may lead\nto a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys,\na computation is done to confirm that the RSA modulus, n, is composite.\nFor valid RSA keys, n is a product of two or more large primes and this\ncomputation completes quickly. However, if n is an overly large prime,\nthen this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key\nobtained from an untrusted source could be vulnerable to a Denial of Service\nattack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL\nfunctions however it is called from the OpenSSL pkey command line\napplication. For that reason that application is also vulnerable if used\nwith the '-pubin' and '-check' options on untrusted data.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.4-r4]   |",
                "text": "Issue summary: Checking excessively long invalid RSA public keys may take\na long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check()\nto check RSA public keys may experience long delays. Where the key that\nis being checked has been obtained from an untrusted source this may lead\nto a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys,\na computation is done to confirm that the RSA modulus, n, is composite.\nFor valid RSA keys, n is a product of two or more large primes and this\ncomputation completes quickly. However, if n is an overly large prime,\nthen this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key\nobtained from an untrusted source could be vulnerable to a Denial of Service\nattack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL\nfunctions however it is called from the OpenSSL pkey command line\napplication. For that reason that application is also vulnerable if used\nwith the '-pubin' and '-check' options on untrusted data.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue."
              },
              "id": "CVE-2023-6237_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2023-6237-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-6237] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r0]   |",
                "text": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected."
              },
              "id": "CVE-2023-0215_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-0215-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0215] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.14.1-r0]   |",
                "text": "A cryptographic vulnerability exists in Node.js <19.2.0, <18.14.1, <16.19.1, <14.21.3 that in some cases did does not clear the OpenSSL error stack after operations that may set it. This may lead to false positive errors during subsequent cryptographic operations that happen to be on the same thread. This in turn could be used to cause a denial of service."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.14.1-r0]   |",
                "text": "A cryptographic vulnerability exists in Node.js <19.2.0, <18.14.1, <16.19.1, <14.21.3 that in some cases did does not clear the OpenSSL error stack after operations that may set it. This may lead to false positive errors during subsequent cryptographic operations that happen to be on the same thread. This in turn could be used to cause a denial of service."
              },
              "id": "CVE-2023-23919_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2023-23919-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-23919] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function"
              },
              "id": "CVE-2021-42386_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42386-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42386] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "Next.js is a React framework. In versions of Next.js prior to 12.0.5 or 11.1.3, invalid or malformed URLs could lead to a server crash. In order to be affected by this issue, the deployment must use Next.js versions above 11.1.0 and below 12.0.5, Node.js above 15.0.0, and next start or a custom server. Deployments on Vercel are not affected, along with similar environments where invalid requests are filtered before reaching Next.js. Versions 12.0.5 and 11.1.3 contain patches for this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "Next.js is a React framework. In versions of Next.js prior to 12.0.5 or 11.1.3, invalid or malformed URLs could lead to a server crash. In order to be affected by this issue, the deployment must use Next.js versions above 11.1.0 and below 12.0.5, Node.js above 15.0.0, and next start or a custom server. Deployments on Vercel are not affected, along with similar environments where invalid requests are filtered before reaching Next.js. Versions 12.0.5 and 11.1.3 contain patches for this issue."
              },
              "id": "CVE-2021-43803_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2021-43803-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-43803] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.1      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.12.1-r0]   |",
                "text": "A OS Command Injection vulnerability exists in Node.js versions <14.21.1, <16.18.1, <18.12.1, <19.0.1 due to an insufficient IsAllowedHost check that can easily be bypassed because IsIPAddress does not properly check if an IP address is invalid before making DBS requests allowing rebinding attacks.The fix for this issue in https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32212 was incomplete and this new CVE is to complete the fix."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.1      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | [18.12.1-r0]   |",
                "text": "A OS Command Injection vulnerability exists in Node.js versions <14.21.1, <16.18.1, <18.12.1, <19.0.1 due to an insufficient IsAllowedHost check that can easily be bypassed because IsIPAddress does not properly check if an IP address is invalid before making DBS requests allowing rebinding attacks.The fix for this issue in https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32212 was incomplete and this new CVE is to complete the fix."
              },
              "id": "CVE-2022-43548_3.14:nodejs_14.21.3-r0",
              "name": "CVE-2022-43548-3.14:nodejs-14.21.3-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:nodejs",
                      "version": "14.21.3-r0",
                      "location": {
                        "file": "3.14:nodejs:14.21.3-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "8.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-43548] 3.14:nodejs 14.21.3-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A vulnerability was found in Golang FIPS OpenSSL. This flaw allows a malicious user to randomly cause an uninitialized buffer length variable with a zeroed buffer to be returned in FIPS mode. It may also be possible to force a false positive match between non-equal hashes when comparing a trusted computed hmac sum to an untrusted input sum if an attacker can send a zeroed buffer in place of a pre-computed sum.  It is also possible to force a derived key to be all zeros instead of an unpredictable value.  This may have follow-on implications for the Go TLS stack."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "A vulnerability was found in Golang FIPS OpenSSL. This flaw allows a malicious user to randomly cause an uninitialized buffer length variable with a zeroed buffer to be returned in FIPS mode. It may also be possible to force a false positive match between non-equal hashes when comparing a trusted computed hmac sum to an untrusted input sum if an attacker can send a zeroed buffer in place of a pre-computed sum.  It is also possible to force a derived key to be all zeros instead of an unpredictable value.  This may have follow-on implications for the Go TLS stack."
              },
              "id": "CVE-2024-9355_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2024-9355-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-9355] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1q-r0]   |",
                "text": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1q-r0]   |",
                "text": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
              },
              "id": "CVE-2022-2097_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2022-2097-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-2097] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "crypto/rsa/rsa_gen.c in OpenSSL before 0.9.6 mishandles C bitwise-shift operations that exceed the size of an expression, which makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging improper RSA key generation on 64-bit HP-UX platforms."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | No fix available   |",
                "text": "crypto/rsa/rsa_gen.c in OpenSSL before 0.9.6 mishandles C bitwise-shift operations that exceed the size of an expression, which makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging improper RSA key generation on 64-bit HP-UX platforms."
              },
              "id": "CVE-2000-1254_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2000-1254-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2000-1254] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.1-r2]   |",
                "text": "Issue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be misled by removing,\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.1.1-r2]   |",
                "text": "Issue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be misled by removing,\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue."
              },
              "id": "CVE-2023-2975_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-2975-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-2975] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.2-r0]   |",
                "text": "Issue summary: Applications performing certificate name checks (e.g., TLS\nclients checking server certificates) may attempt to read an invalid memory\naddress resulting in abnormal termination of the application process.\n\nImpact summary: Abnormal termination of an application can a cause a denial of\nservice.\n\nApplications performing certificate name checks (e.g., TLS clients checking\nserver certificates) may attempt to read an invalid memory address when\ncomparing the expected name with an `otherName` subject alternative name of an\nX.509 certificate. This may result in an exception that terminates the\napplication program.\n\nNote that basic certificate chain validation (signatures, dates, ...) is not\naffected, the denial of service can occur only when the application also\nspecifies an expected DNS name, Email address or IP address.\n\nTLS servers rarely solicit client certificates, and even when they do, they\ngenerally don't perform a name check against a reference identifier (expected\nidentity), but rather extract the presented identity after checking the\ncertificate chain.  So TLS servers are generally not affected and the severity\nof the issue is Moderate.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.2-r0]   |",
                "text": "Issue summary: Applications performing certificate name checks (e.g., TLS\nclients checking server certificates) may attempt to read an invalid memory\naddress resulting in abnormal termination of the application process.\n\nImpact summary: Abnormal termination of an application can a cause a denial of\nservice.\n\nApplications performing certificate name checks (e.g., TLS clients checking\nserver certificates) may attempt to read an invalid memory address when\ncomparing the expected name with an `otherName` subject alternative name of an\nX.509 certificate. This may result in an exception that terminates the\napplication program.\n\nNote that basic certificate chain validation (signatures, dates, ...) is not\naffected, the denial of service can occur only when the application also\nspecifies an expected DNS name, Email address or IP address.\n\nTLS servers rarely solicit client certificates, and even when they do, they\ngenerally don't perform a name check against a reference identifier (expected\nidentity), but rather extract the presented identity after checking the\ncertificate chain.  So TLS servers are generally not affected and the severity\nof the issue is Moderate.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "id": "CVE-2024-6119_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2024-6119-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-6119] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.0-r3]   |",
                "text": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.0-r3]   |",
                "text": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "id": "CVE-2024-4741_3.14:libssl1.1_1.1.1k-r0",
              "name": "CVE-2024-4741-3.14:libssl1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libssl1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libssl1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-4741] 3.14:libssl1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.33.1-r6]   |",
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function"
              },
              "id": "CVE-2021-42382_3.14:ssl_client_1.33.1-r3",
              "name": "CVE-2021-42382-3.14:ssl-client-1.33.1-r3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:ssl_client",
                      "version": "1.33.1-r3",
                      "location": {
                        "file": "3.14:ssl_client:1.33.1-r3"
                      }
                    }
                  ]
                ],
                "security-severity": "7.2"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-42382] 3.14:ssl_client 1.33.1-r3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol."
              },
              "id": "CVE-2021-3826_3.14:libgcc_10.3.1_git20210424-r2",
              "name": "CVE-2021-3826-3.14:libgcc-10.3.1-git20210424-r2",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:libgcc",
                      "version": "10.3.1_git20210424-r2",
                      "location": {
                        "file": "3.14:libgcc:10.3.1_git20210424-r2"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2021-3826] 3.14:libgcc 10.3.1_git20210424-r2"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [6.10.3], [6.2.4], [6.3.3], [6.4.1], [6.5.3], [6.6.1], [6.7.3], [6.8.3], [6.9.7]   |",
                "text": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar `       | [6.10.3], [6.2.4], [6.3.3], [6.4.1], [6.5.3], [6.6.1], [6.7.3], [6.8.3], [6.9.7]   |",
                "text": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable)."
              },
              "id": "CVE-2022-24999_qs_6.7.0",
              "name": "CVE-2022-24999-qs-6.7.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__2846b51baf2441bb3de69228c73c8fb32998003df3b26a0258d9cce99526a979.tar"
                      }
                    },
                    {
                      "name": "qs",
                      "version": "6.7.0",
                      "location": {
                        "file": "node_modules/qs/package.json"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2022-24999] qs 6.7.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r1]   |",
                "text": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [1.1.1t-r1]   |",
                "text": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
              },
              "id": "CVE-2023-0464_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2023-0464-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-0464] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.3-r0]   |",
                "text": "Issue summary: Clients using RFC7250 Raw Public Keys (RPKs) to authenticate a\nserver may fail to notice that the server was not authenticated, because\nhandshakes don't abort as expected when the SSL_VERIFY_PEER verification mode\nis set.\n\nImpact summary: TLS and DTLS connections using raw public keys may be\nvulnerable to man-in-middle attacks when server authentication failure is not\ndetected by clients.\n\nRPKs are disabled by default in both TLS clients and TLS servers.  The issue\nonly arises when TLS clients explicitly enable RPK use by the server, and the\nserver, likewise, enables sending of an RPK instead of an X.509 certificate\nchain.  The affected clients are those that then rely on the handshake to\nfail when the server's RPK fails to match one of the expected public keys,\nby setting the verification mode to SSL_VERIFY_PEER.\n\nClients that enable server-side raw public keys can still find out that raw\npublic key verification failed by calling SSL_get_verify_result(), and those\nthat do, and take appropriate action, are not affected.  This issue was\nintroduced in the initial implementation of RPK support in OpenSSL 3.2.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.3      | `sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar `       | [3.3.3-r0]   |",
                "text": "Issue summary: Clients using RFC7250 Raw Public Keys (RPKs) to authenticate a\nserver may fail to notice that the server was not authenticated, because\nhandshakes don't abort as expected when the SSL_VERIFY_PEER verification mode\nis set.\n\nImpact summary: TLS and DTLS connections using raw public keys may be\nvulnerable to man-in-middle attacks when server authentication failure is not\ndetected by clients.\n\nRPKs are disabled by default in both TLS clients and TLS servers.  The issue\nonly arises when TLS clients explicitly enable RPK use by the server, and the\nserver, likewise, enables sending of an RPK instead of an X.509 certificate\nchain.  The affected clients are those that then rely on the handshake to\nfail when the server's RPK fails to match one of the expected public keys,\nby setting the verification mode to SSL_VERIFY_PEER.\n\nClients that enable server-side raw public keys can still find out that raw\npublic key verification failed by calling SSL_get_verify_result(), and those\nthat do, and take appropriate action, are not affected.  This issue was\nintroduced in the initial implementation of RPK support in OpenSSL 3.2.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "id": "CVE-2024-12797_3.14:libcrypto1.1_1.1.1k-r0",
              "name": "CVE-2024-12797-3.14:libcrypto1.1-1.1.1k-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__bc276c40b172b1c5467277d36db5308a203a48262d5f278766cf083947d05466.tar"
                      }
                    },
                    {
                      "name": "3.14:libcrypto1.1",
                      "version": "1.1.1k-r0",
                      "location": {
                        "file": "3.14:libcrypto1.1:1.1.1k-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "6.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-12797] 3.14:libcrypto1.1 1.1.1k-r0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.7      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "c-ares is an asynchronous resolver library. When cross-compiling c-ares and using the autotools build system, CARES_RANDOM_FILE will not be set, as seen when cross compiling aarch64 android.  This will downgrade to using rand() as a fallback which could allow an attacker to take advantage of the lack of entropy by not using a CSPRNG. This issue was patched in version 1.19.1."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.7      | `sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar `       | No fix available   |",
                "text": "c-ares is an asynchronous resolver library. When cross-compiling c-ares and using the autotools build system, CARES_RANDOM_FILE will not be set, as seen when cross compiling aarch64 android.  This will downgrade to using rand() as a fallback which could allow an attacker to take advantage of the lack of entropy by not using a CSPRNG. This issue was patched in version 1.19.1."
              },
              "id": "CVE-2023-31124_3.14:c-ares_1.17.2-r0",
              "name": "CVE-2023-31124-3.14:c-ares-1.17.2-r0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "docker/scout-demo-service",
                      "version": "main"
                    },
                    {
                      "name": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__e923046ed56d6b2905e43cb543b2c718f6c78274005fa4542b12b06a6332931f.tar"
                      }
                    },
                    {
                      "name": "3.14:c-ares",
                      "version": "1.17.2-r0",
                      "location": {
                        "file": "3.14:c-ares:1.17.2-r0"
                      }
                    }
                  ]
                ],
                "security-severity": "3.7"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-31124] 3.14:c-ares 1.17.2-r0"
              }
            }
          ],
          "supportedTaxonomies": [],
          "taxa": [],
          "version": "3.127.6"
        },
        "extensions": []
      },
      "translations": [],
      "versionControlProvenance": [],
      "webRequests": [],
      "webResponses": []
    }
  ],
  "properties": {}
}

