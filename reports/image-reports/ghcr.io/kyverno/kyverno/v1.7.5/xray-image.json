[
  {
    "scan_id": "e0247e0e-7cc3-415b-9e6e-27e7377698d4",
    "vulnerabilities": [
      {
        "cves": [
          {
            "cve": "CVE-2023-44487",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "NVD-CWE-noinfo",
              "CWE-400"
            ]
          }
        ],
        "summary": "Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound causes denial of service (High)",
        "severity": "High",
        "components": {
          "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591": {
            "fixed_versions": [
              "[0.17.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591",
                  "full_path": "golang.org/x/net"
                }
              ]
            ]
          },
          "go://google.golang.org/grpc:1.49.0": {
            "fixed_versions": [
              "[1.56.3]",
              "[1.57.1]",
              "[1.58.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://google.golang.org/grpc:1.49.0",
                  "full_path": "google.golang.org/grpc"
                }
              ]
            ]
          },
          "go://k8s.io/apimachinery:0.23.5": {
            "fixed_versions": [
              "[0.29.0-alpha.3]",
              "[1.29.0-alpha.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://k8s.io/apimachinery:0.23.5",
                  "full_path": "k8s.io/apimachinery"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-533304",
        "references": [
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VSRDIV77HNKUSM7SJC5BKE5JSHLHU2NK/",
          "https://security.netapp.com/advisory/ntap-20231016-0001",
          "https://github.com/akka/akka-http/issues/4323",
          "https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JIZSEFC3YKCGABA2BZW6ZJRMDZJMB7PJ/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WE2I52RHNNU42PX6NZ2RBUHSFFJ2LVZX",
          "https://lists.w3.org/Archives/Public/ietf-http-wg/2023OctDec/0025.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/E72T67UPDRXHIDLO3OROR25YAMN4GGW5/",
          "https://www.haproxy.com/blog/haproxy-is-not-affected-by-the-http-2-rapid-reset-attack-cve-2023-44487",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00020.html",
          "https://github.com/apache/trafficserver/pull/10564",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HT7T2R4MQKLIF4ODV4BDLPARWFPCJ5CZ/",
          "https://github.com/etcd-io/etcd/issues/16740",
          "https://blog.litespeedtech.com/2023/10/11/rapid-reset-http-2-vulnerablilty/",
          "http://www.openwall.com/lists/oss-security/2023/10/10/6",
          "https://github.com/caddyserver/caddy/releases/tag/v2.7.5",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-44487",
          "https://www.vicarius.io/vsociety/posts/rapid-reset-cve-2023-44487-dos-in-http2-understanding-the-root-cause",
          "https://github.com/grpc/grpc-go/security/advisories/GHSA-m425-mq94-257g",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2MBEPPC36UBVOZZNAXFHKLFGSLCMN5LI/",
          "https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZLU6U2R2IC2K64NDPNMV55AUAO65MAF4",
          "http://www.openwall.com/lists/oss-security/2023/10/10/7",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JMEXY22BFG5Q64HQCM5CK2Q7KDKVV4TY",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VSRDIV77HNKUSM7SJC5BKE5JSHLHU2NK/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZKQSIKIAT5TJ3WSLU3RDBQ35YX4GY4V3/",
          "https://github.com/linkerd/website/pull/1695/commits/4b9c6836471bc8270ab48aae6fd2181bc73fd632",
          "https://github.com/kumahq/kuma/pull/8034",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZKQSIKIAT5TJ3WSLU3RDBQ35YX4GY4V3",
          "https://github.com/alibaba/tengine/issues/1872",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00047.html",
          "https://github.com/apache/httpd/blob/afcdbeebbff4b0c50ea26cdd16e178c0d1f24152/modules/http2/h2_mplx.c#L1101-L1113",
          "http://www.openwall.com/lists/oss-security/2023/10/20/8",
          "https://chaos.social/@icing/111210915918780532",
          "https://nodejs.org/en/blog/vulnerability/october-2023-security-releases/",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00024.html",
          "https://www.debian.org/security/2023/dsa-5522",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZB43REMKRQR62NJEI7I5NQ4FSXNLBKRT/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/E72T67UPDRXHIDLO3OROR25YAMN4GGW5",
          "https://security.netapp.com/advisory/ntap-20240621-0007/",
          "https://github.com/advisories/GHSA-xpw8-rcwv-8f8p",
          "https://community.traefik.io/t/is-traefik-vulnerable-to-cve-2023-44487/20125",
          "https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/",
          "https://news.ycombinator.com/item?id=37837043",
          "https://news.ycombinator.com/item?id=37831062",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2",
          "https://github.com/junkurihara/rust-rpxy/issues/97",
          "https://github.com/nghttp2/nghttp2/pull/1961",
          "https://github.com/line/armeria/pull/5232",
          "https://github.com/apache/apisix/issues/10320",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZLU6U2R2IC2K64NDPNMV55AUAO65MAF4/",
          "https://github.com/grpc/grpc-go/pull/6703",
          "https://aws.amazon.com/security/security-bulletins/AWS-2023-011",
          "https://github.com/dotnet/announcements/issues/277",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BFQD3KUEMFBHPAPBGLWQC34L4OWL5HAZ",
          "https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.14",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FNA62Q767CFAFHBCDKYNPBMZWB7TWYVU/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WLPRQ5TWUQQXYWBJM7ECYDAIL2YVKIUH",
          "https://github.com/grpc/grpc/releases/tag/v1.59.2",
          "https://github.com/tempesta-tech/tempesta/issues/1986",
          "https://bugzilla.redhat.com/show_bug.cgi?id=2242803",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2MBEPPC36UBVOZZNAXFHKLFGSLCMN5LI",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/X6QXN4ORIVF6XBW4WWFE7VNPVC74S45Y",
          "https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/",
          "https://github.com/kumahq/kuma/pull/8001",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/E72T67UPDRXHIDLO3OROR25YAMN4GGW5/",
          "https://arstechnica.com/security/2023/10/how-ddosers-used-the-http-2-protocol-to-deliver-attacks-of-unprecedented-size/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HT7T2R4MQKLIF4ODV4BDLPARWFPCJ5CZ/",
          "https://arstechnica.com/security/2023/10/how-ddosers-used-the-http-2-protocol-to-deliver-attacks-of-unprecedented-size",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LKYHSZQFDNR7RSA7LHVLLIAQMVYCUGBG/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2/",
          "https://www.theregister.com/2023/10/10/http2_rapid_reset_zeroday/",
          "https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/?sf269548684=1",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LNMZJCDHGLJJLXO4OXWJMTVQRNWOC7UL/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE/",
          "https://www.darkreading.com/cloud/internet-wide-zero-day-bug-fuels-largest-ever-ddos-event",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JMEXY22BFG5Q64HQCM5CK2Q7KDKVV4TY/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WLPRQ5TWUQQXYWBJM7ECYDAIL2YVKIUH/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LNMZJCDHGLJJLXO4OXWJMTVQRNWOC7UL/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/X6QXN4ORIVF6XBW4WWFE7VNPVC74S45Y/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/X6QXN4ORIVF6XBW4WWFE7VNPVC74S45Y/",
          "https://github.com/arkrwn/PoC/tree/main/CVE-2023-44487",
          "https://github.com/Azure/AKS/issues/3947",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LNMZJCDHGLJJLXO4OXWJMTVQRNWOC7UL",
          "https://github.com/netty/netty",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JMEXY22BFG5Q64HQCM5CK2Q7KDKVV4TY",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JMEXY22BFG5Q64HQCM5CK2Q7KDKVV4TY/",
          "https://github.com/dotnet/core/blob/e4613450ea0da7fd2fc6b61dfb2c1c1dec1ce9ec/release-notes/6.0/6.0.23/6.0.23.md?plain=1#L73",
          "https://security.netapp.com/advisory/ntap-20231016-0001/",
          "https://lists.debian.org/debian-lts-announce/2023/11/msg00001.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2/",
          "https://www.bleepingcomputer.com/news/security/new-http-2-rapid-reset-zero-day-attack-breaks-ddos-records/",
          "https://github.com/nghttp2/nghttp2/security/advisories/GHSA-vx74-f528-fxqg",
          "https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61",
          "https://blog.vespa.ai/cve-2023-44487/",
          "https://github.com/caddyserver/caddy/issues/5877",
          "https://ubuntu.com/security/CVE-2023-44487",
          "https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products",
          "https://news.ycombinator.com/item?id=37830998",
          "https://bugzilla.proxmox.com/show_bug.cgi?id=4988",
          "http://www.openwall.com/lists/oss-security/2023/10/18/4",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BFQD3KUEMFBHPAPBGLWQC34L4OWL5HAZ/",
          "https://www.cisa.gov/news-events/alerts/2023/10/10/http2-rapid-reset-vulnerability-cve-2023-44487",
          "https://news.ycombinator.com/item?id=37830987",
          "https://github.com/varnishcache/varnish-cache/issues/3996",
          "https://www.debian.org/security/2023/dsa-5521",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/2MBEPPC36UBVOZZNAXFHKLFGSLCMN5LI",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WE2I52RHNNU42PX6NZ2RBUHSFFJ2LVZX/",
          "https://forums.swift.org/t/swift-nio-http2-security-update-cve-2023-44487-http-2-dos/67764",
          "https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0",
          "https://istio.io/latest/news/security/istio-security-2023-004/",
          "https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ",
          "https://github.com/grpc/grpc-go/releases",
          "https://github.com/projectcontour/contour/pull/5826",
          "https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832",
          "https://security.netapp.com/advisory/ntap-20240621-0006",
          "https://github.com/nodejs/node/pull/50121",
          "https://security.netapp.com/advisory/ntap-20240621-0007",
          "https://linkerd.io/2023/10/12/linkerd-cve-2023-44487",
          "https://blog.litespeedtech.com/2023/10/11/rapid-reset-http-2-vulnerablilty",
          "https://www.openwall.com/lists/oss-security/2023/10/10/6",
          "https://www.debian.org/security/2023/dsa-5549",
          "https://bugzilla.suse.com/show_bug.cgi?id=1216123",
          "https://github.com/ninenines/cowboy/issues/1615",
          "https://www.debian.org/security/2023/dsa-5558",
          "http://www.openwall.com/lists/oss-security/2023/10/19/6",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/E72T67UPDRXHIDLO3OROR25YAMN4GGW5",
          "https://www.theregister.com/2023/10/10/http2_rapid_reset_zeroday",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WLPRQ5TWUQQXYWBJM7ECYDAIL2YVKIUH/",
          "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-http2-reset-d8Kf32vZ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3N4NJ7FR4X4FPZUGNTQAPSTVB2HB2Y4A",
          "https://github.com/micrictor/http2-rst-stream",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VHUHTSXLXGXS7JYKBXTA3VINUPHTNGVU",
          "https://www.netlify.com/blog/netlify-successfully-mitigates-cve-2023-44487/",
          "https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.0-M12",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZKQSIKIAT5TJ3WSLU3RDBQ35YX4GY4V3/",
          "https://msrc.microsoft.com/blog/2023/10/microsoft-response-to-distributed-denial-of-service-ddos-attacks-against-http/2/",
          "https://github.com/h2o/h2o/pull/3291",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VHUHTSXLXGXS7JYKBXTA3VINUPHTNGVU/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3N4NJ7FR4X4FPZUGNTQAPSTVB2HB2Y4A/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2",
          "https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge",
          "https://go.dev/cl/534235",
          "https://github.com/haproxy/haproxy/issues/2312",
          "https://my.f5.com/manage/s/article/K000137106",
          "https://github.com/nghttp2/nghttp2",
          "https://github.com/facebook/proxygen/pull/466",
          "https://blog.cloudflare.com/zero-day-rapid-reset-http2-record-breaking-ddos-attack/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LKYHSZQFDNR7RSA7LHVLLIAQMVYCUGBG",
          "https://github.com/apache/tomcat/tree/main/java/org/apache/coyote/http2",
          "http://www.openwall.com/lists/oss-security/2023/10/13/9",
          "https://linkerd.io/2023/10/12/linkerd-cve-2023-44487/",
          "https://github.com/eclipse/jetty.project/issues/10679",
          "https://github.com/akka/akka-http/pull/4325",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JIZSEFC3YKCGABA2BZW6ZJRMDZJMB7PJ/",
          "https://akka.io/security/akka-http-cve-2023-44487.html",
          "https://github.com/advisories/GHSA-m425-mq94-257g",
          "https://github.com/oqtane/oqtane.framework/discussions/3367",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LKYHSZQFDNR7RSA7LHVLLIAQMVYCUGBG",
          "https://www.bleepingcomputer.com/news/security/new-http-2-rapid-reset-zero-day-attack-breaks-ddos-records",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HT7T2R4MQKLIF4ODV4BDLPARWFPCJ5CZ",
          "https://github.com/golang/go/issues/63417",
          "https://github.com/envoyproxy/envoy/security/advisories/GHSA-jhv4-f7mr-xx76",
          "https://github.com/bcdannyboy/CVE-2023-44487",
          "https://github.com/envoyproxy/envoy/pull/30055",
          "https://github.com/kumahq/kuma",
          "https://access.redhat.com/security/cve/cve-2023-44487",
          "https://github.com/akka/akka-http/pull/4324",
          "https://github.com/kumahq/kuma/security/advisories/GHSA-9wmc-rg4h-28wv",
          "https://go.dev/cl/534215",
          "https://github.com/advisories/GHSA-qppj-fm5r-hxr3",
          "https://msrc.microsoft.com/blog/2023/10/microsoft-response-to-distributed-denial-of-service-ddos-attacks-against-http/2",
          "http://www.openwall.com/lists/oss-security/2023/10/13/4",
          "https://github.com/advisories/GHSA-vx74-f528-fxqg",
          "https://security.netapp.com/advisory/ntap-20240426-0007/",
          "https://security.netapp.com/advisory/ntap-20240426-0007",
          "https://github.com/kazu-yamamoto/http2/issues/93",
          "https://mailman.nginx.org/pipermail/nginx-devel/2023-October/S36Q5HBXR7CAIMPLLPRSSSYR4PCMWILK.html",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00023.html",
          "https://github.com/apple/swift-nio-http2/security/advisories/GHSA-qppj-fm5r-hxr3",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BFQD3KUEMFBHPAPBGLWQC34L4OWL5HAZ",
          "https://lists.debian.org/debian-lts-announce/2023/11/msg00012.html",
          "https://github.com/grpc/grpc-go/commit/f2180b4d5403d2210b30b93098eb7da31c05c721",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JIZSEFC3YKCGABA2BZW6ZJRMDZJMB7PJ",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BFQD3KUEMFBHPAPBGLWQC34L4OWL5HAZ/",
          "https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps",
          "https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FNA62Q767CFAFHBCDKYNPBMZWB7TWYVU",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3N4NJ7FR4X4FPZUGNTQAPSTVB2HB2Y4A/",
          "https://github.com/h2o/h2o/security/advisories/GHSA-2m7v-gc89-fjqf",
          "https://blog.cloudflare.com/zero-day-rapid-reset-http2-record-breaking-ddos-attack",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WLPRQ5TWUQQXYWBJM7ECYDAIL2YVKIUH",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZLU6U2R2IC2K64NDPNMV55AUAO65MAF4/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HT7T2R4MQKLIF4ODV4BDLPARWFPCJ5CZ",
          "https://blog.qualys.com/vulnerabilities-threat-research/2023/10/10/cve-2023-44487-http-2-rapid-reset-attack",
          "https://lists.debian.org/debian-lts-announce/2023/10/msg00045.html",
          "https://www.netlify.com/blog/netlify-successfully-mitigates-cve-2023-44487",
          "https://github.com/opensearch-project/data-prepper/issues/3474",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZB43REMKRQR62NJEI7I5NQ4FSXNLBKRT",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZKQSIKIAT5TJ3WSLU3RDBQ35YX4GY4V3",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZB43REMKRQR62NJEI7I5NQ4FSXNLBKRT/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LKYHSZQFDNR7RSA7LHVLLIAQMVYCUGBG/",
          "https://www.phoronix.com/news/HTTP2-Rapid-Reset-Attack",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WE2I52RHNNU42PX6NZ2RBUHSFFJ2LVZX",
          "https://discuss.hashicorp.com/t/hcsec-2023-32-vault-consul-and-boundary-affected-by-http-2-rapid-reset-denial-of-service-vulnerability-cve-2023-44487/59715",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZLU6U2R2IC2K64NDPNMV55AUAO65MAF4",
          "https://security.netapp.com/advisory/ntap-20240621-0006/",
          "https://edg.io/lp/blog/resets-leaks-ddos-and-the-tale-of-a-hidden-cve",
          "https://blog.vespa.ai/cve-2023-44487",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/X6QXN4ORIVF6XBW4WWFE7VNPVC74S45Y",
          "https://github.com/kumahq/kuma/pull/8023",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZB43REMKRQR62NJEI7I5NQ4FSXNLBKRT",
          "https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JIZSEFC3YKCGABA2BZW6ZJRMDZJMB7PJ",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FNA62Q767CFAFHBCDKYNPBMZWB7TWYVU",
          "https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.81",
          "http://www.openwall.com/lists/oss-security/2023/10/18/8",
          "https://www.debian.org/security/2023/dsa-5570",
          "https://openssf.org/blog/2023/10/10/http-2-rapid-reset-vulnerability-highlights-need-for-rapid-response",
          "https://lists.apache.org/thread/5py8h42mxfsn8l1wy6o41xwhsjlsd87q",
          "https://openssf.org/blog/2023/10/10/http-2-rapid-reset-vulnerability-highlights-need-for-rapid-response/",
          "https://istio.io/latest/news/security/istio-security-2023-004",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3N4NJ7FR4X4FPZUGNTQAPSTVB2HB2Y4A",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VSRDIV77HNKUSM7SJC5BKE5JSHLHU2NK",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/2MBEPPC36UBVOZZNAXFHKLFGSLCMN5LI/",
          "https://gist.github.com/adulau/7c2bfb8e9cdbe4b35a5e131c66a0c088",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FNA62Q767CFAFHBCDKYNPBMZWB7TWYVU/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LNMZJCDHGLJJLXO4OXWJMTVQRNWOC7UL",
          "https://github.com/kazu-yamamoto/http2/commit/f61d41a502bd0f60eb24e1ce14edc7b6df6722a1",
          "https://www.eclipse.org/lists/jetty-announce/msg00181.html",
          "https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack",
          "https://netty.io/news/2023/10/10/4-1-100-Final.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VSRDIV77HNKUSM7SJC5BKE5JSHLHU2NK",
          "https://github.com/Kong/kong/discussions/11741",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VHUHTSXLXGXS7JYKBXTA3VINUPHTNGVU",
          "https://github.com/kubernetes/kubernetes/pull/121120",
          "https://github.com/apache/httpd-site/pull/10",
          "https://aws.amazon.com/security/security-bulletins/AWS-2023-011/",
          "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-44487",
          "https://www.cve.org/CVERecord?id=CVE-2023-44487",
          "https://www.debian.org/security/2023/dsa-5540",
          "https://tomcat.apache.org/security-8.html#Fixed_in_Apache_Tomcat_8.5.94",
          "https://github.com/openresty/openresty/issues/930",
          "https://martinthomson.github.io/h2-stream-limits/draft-thomson-httpbis-h2-stream-limits.html",
          "https://github.com/netty/netty/security/advisories/GHSA-xpw8-rcwv-8f8p",
          "https://github.com/icing/mod_h2/blob/0a864782af0a942aa2ad4ed960a6b32cd35bcf0a/mod_http2/README.md?plain=1#L239-L244",
          "https://security.gentoo.org/glsa/202311-09",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VHUHTSXLXGXS7JYKBXTA3VINUPHTNGVU/",
          "https://security.paloaltonetworks.com/CVE-2023-44487",
          "https://seanmonstar.com/post/730794151136935936/hyper-http2-rapid-reset-unaffected",
          "https://github.com/hyperium/hyper/issues/3337",
          "https://github.com/microsoft/CBL-Mariner/pull/6381",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WE2I52RHNNU42PX6NZ2RBUHSFFJ2LVZX/",
          "https://go.dev/issue/63417",
          "https://cgit.freebsd.org/ports/commit/?id=c64c329c2c1752f46b73e3e6ce9f4329be6629f9"
        ],
        "extended_information": {
          "short_description": "A design problem in the implementation of the HTTP/2 protocol may lead to DoS and ease the possibility of DDoS in web server applications by abusing request cancellation.",
          "full_description": "[The HTTP (Hypertext Transfer Protocol)](https://developer.mozilla.org/en-US/docs/Web/HTTP) is a fundamental protocol of the World Wide Web, enabling the exchange of data between a client (typically a web browser) and a server. It defines the rules for requesting and transmitting web pages and other resources over the internet. Request and response messages are exchanged as a stream of ASCII characters, sent over a reliable transport layer like TCP.\n\n[HTTP/2](https://http2.github.io/) is a modern network protocol designed to improve the performance and efficiency of web communication. It replaces the older HTTP/1.1 protocol and introduces features like header compression and enhanced request cancellation mechanisms, which collectively enhance the speed and responsiveness of websites.\n\nThis request cancellation mechanism allows clients to terminate unnecessary or redundant requests without waiting for a server's response, reducing network congestion and further improving the overall responsiveness of web applications.\n\nHTTP/2 resolves numerous concerns found in HTTP/1.1 by organizing each HTTP message into a series of HTTP/2 frames. These frames include type, length, flags, stream identifier (ID), and payload. The stream ID is essential in clearly associating specific bytes on the network with their corresponding messages, facilitating secure multiplexing and concurrent processing. These streams are bidirectional, enabling clients to transmit frames, and servers to respond with frames using the same ID.\n\nAs detailed in [this technical analysis](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/), there's a vulnerability in the way request cancellation is implemented. The flaw lies in the process of sending an excessive number of requests (specifically, `HEADERS` frames), each immediately followed by a request cancellation frame utilizing the `RST_STREAM` frame. This sequence rapidly leads to a substantial consumption of server-side resources. Consequently, this vulnerability amplifies the risk of Distributed Denial of Service (DDoS) attacks, making it easier to overwhelm and exhaust the server's available resources.\n\nA lot of server applications are vulnerable to the Http/2 Rapid Reset attack.\nHowever, note that HTTP/2 must be enabled, which is not the default configuration on most applications (excluding nghttp2 for example).\nA non-exhaustive list of these vulnerable web applications:\n```\n- Tomcat\n- Jetty\n- NGINX on certain conditions\n- nghttp2\n- Netty\n```",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "The issue has an exploit published",
              "description": "A [PoC exists](https://github.com/imabee101/CVE-2023-44487) for this issue"
            },
            {
              "name": "The issue has been reported to be actively exploited in public networks",
              "description": "Cloudflare identified this vulnerability being exploited in a DDoS attack of unprecedented scale on August 25, 2023, which surpassed their previous largest recorded attack by almost threefold."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker should attack a web server application with HTTP/2 protocol enabled and no (or a high) keepalive-requests options.",
              "is_positive": true
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "This issue can lead to DoS on popular server applications using HTTP/2 protocol and ease the possibility of DDoS attack."
            },
            {
              "name": "The issue has multiple mentions in general media",
              "description": "The vulnerability received extensive media coverage from Google, Cloudflare, and more."
            }
          ],
          "remediation": "##### Deployment mitigations\n\nA possible mitigation is to limit the maximum number of requests that can be made over a single keep-alive connection.\n\n##### Deployment mitigations\n\nFor NGINX:\n\nDisabling HTTP/2 in NGINX is not necessary. Simply ensure you have configured:\n\n- `keepalive_requests` should be kept at the default setting of 1000 requests\n- `http2_max_concurrent_streams` should be kept at the default setting of 128 streams\n- `limit_conn` and `limit_req` should be set \"with a reasonable setting balancing application performance and security\"\n\n##### Development mitigations\n\nFor Nghttp2:\nImplement `nghttp2_on_frame_recv_callback` callback function, and check and count `RST_STREAM` frames. If an excessive number of `RST_STREAM` frames are received, then take action, such as dropping the connection silently, or calling `nghttp2_submit_goaway` and gracefully terminate the connection.\n```c\n#include \u003cnghttp2/nghttp2.h\u003e\n\n// Callback function for handling frame reception\nint on_frame_recv_callback(nghttp2_session* session,\n                           const nghttp2_frame* frame, void* user_data) {\n    // Check if the received frame is an RST_STREAM frame\n    if (frame-\u003ehd.type == NGHTTP2_RST_STREAM) {\n        // Increment a counter for RST_STREAM frames\n        int* rst_stream_counter = (int*)user_data;\n        (*rst_stream_counter)++;\n        \n        // Define a threshold for excessive RST_STREAM frames\n        int rst_stream_threshold = 10;  // Adjust this value as needed\n        \n        // If the threshold is exceeded, take action (e.g., close the connection)\n        if (*rst_stream_counter \u003e rst_stream_threshold) {\n            // Here, you can choose to close the connection gracefully or drop it\n            // For demonstration purposes, we'll just print a message\n            printf(\"Excessive RST_STREAM frames received. Closing the connection.\\n\");\n            // You can call nghttp2_submit_goaway() to send a GOAWAY frame if needed.\n            // nghttp2_submit_goaway(session, NGHTTP2_FLAG_NONE, error_code, opaque_data);\n            // Then, close the connection.\n        }\n    }\n    \n    // Continue processing other frames if needed\n    return 0;\n}\n\nint main() {\n    // Initialize nghttp2_session and set up the on_frame_recv_callback\n    nghttp2_session* session;\n    int rst_stream_counter = 0;\n    \n    // Initialize nghttp2_session, set up callbacks, etc.\n    // ...\n\n    // Set the user data to be passed to the callback\n    nghttp2_session_user_data(session, \u0026rst_stream_counter);\n    \n    // Register the on_frame_recv_callback\n    nghttp2_session_callbacks* callbacks;\n    nghttp2_session_callbacks_new(\u0026callbacks);\n    nghttp2_session_callbacks_set_on_frame_recv_callback(callbacks, on_frame_recv_callback);\n    // Other callback registrations here...\n    \n    // Attach the callbacks to the session\n    nghttp2_session_server_new(\u0026session, callbacks, \u0026rst_stream_counter);\n    \n    // Start processing HTTP/2 frames\n    // ...\n\n    // Cleanup and finish the program\n    // ...\n\n    return 0;\n}\n```\n\n##### Development mitigations\n\nFor Golang:\n\nThe default stream concurrency limit in `golang` is `250 streams (requests) per HTTP/2 connection`. This value may be adjusted in the `golang.org/x/net/http2` package using the `Server.MaxConcurrentStreams` setting and the `ConfigureServer` function which are available in `golang.org/x/net/http2`.\n\n```go\nimport (\n\t\"fmt\"\n\t\"golang.org/x/net/http2\"\n\t\"net/http\"\n)\n\nfunc main() {\n\t// Create an HTTP/2 server instance\n\thttp2Server := \u0026http2.Server{}\n\n\t// Set the desired stream concurrency limit\n\tmaxConcurrentStreams := 500 // Change this to your desired limit\n\thttp2Server.MaxConcurrentStreams = uint32(maxConcurrentStreams)\n\n\t// Configure an HTTP server to use HTTP/2 with the adjusted settings\n\tserver := \u0026http.Server{\n\t\tAddr:    \":8080\",\n\t\tHandler: http.HandlerFunc(handleRequest),\n\t}\n\thttp2.ConfigureServer(server, http2Server)\n\n\t// Start the HTTP server\n\terr := server.ListenAndServeTLS(\"cert.pem\", \"key.pem\")\n\tif err != nil {\n\t\tfmt.Println(\"Error:\", err)\n\t}\n}\n```\n\n##### Development mitigations\n\nFor netty:\n```java\nimport io.netty.handler.codec.http2.Http2FrameListener;\nimport io.netty.handler.codec.http2.Http2FrameStream;\nimport io.netty.handler.codec.http2.Http2ResetFrame;\nimport io.netty.handler.codec.http2.Http2HeadersFrame;\n\npublic class CustomHttp2FrameListener implements Http2FrameListener {\n    private int rstFrameCount = 0;\n    private int maxRstFrameCount = 10; // Adjust this to your desired limit\n    private long resetTimeMillis = System.currentTimeMillis();\n    private long resetTimeIntervalMillis = 60000; // 60 seconds\n\n    @Override\n    public int onDataRead(Http2FrameStream stream, byte[] data, int padding, boolean endOfStream) {\n        // Handle data frames if needed\n        return 0;\n    }\n\n    @Override\n    public void onHeadersRead(Http2FrameStream stream, Http2HeadersFrame headersFrame) {\n        // Handle headers frames if needed\n    }\n\n    @Override\n    public void onHeadersRead(Http2FrameStream stream, Http2HeadersFrame headersFrame, boolean endOfStream) {\n        // Handle headers frames if needed\n    }\n\n    @Override\n    public void onRstStreamRead(Http2FrameStream stream, Http2ResetFrame resetFrame) {\n        long currentTimeMillis = System.currentTimeMillis();\n        \n        // Check if the reset time interval has passed, and reset the count if needed\n        if (currentTimeMillis - resetTimeMillis \u003e= resetTimeIntervalMillis) {\n            rstFrameCount = 0;\n            resetTimeMillis = currentTimeMillis;\n        }\n        \n        rstFrameCount++;\n        \n        // Check if the count exceeds the limit\n        if (rstFrameCount \u003e maxRstFrameCount) {\n            // Take action, e.g., close the connection, log, or drop frames\n            // You can use stream or resetFrame to get more context if needed.\n            // To close the connection, you can use stream.connection().close();\n        }\n    }\n}\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22872",
            "cvss_v3_score": "6.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:L",
            "cwe": [
              "CWE-79"
            ]
          }
        ],
        "summary": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. \u003cmath\u003e, \u003csvg\u003e, etc contexts).",
        "severity": "Medium",
        "components": {
          "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591": {
            "fixed_versions": [
              "[0.38.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591",
                  "full_path": "golang.org/x/net"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-693274",
        "references": [
          "https://go.dev/cl/662715",
          "https://pkg.go.dev/vuln/GO-2025-3595",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22872",
          "https://security.netapp.com/advisory/ntap-20250516-0007",
          "https://go.dev/issue/73070",
          "https://security.netapp.com/advisory/ntap-20250516-0007/",
          "https://groups.google.com/g/golang-announce/c/ezSKR9vqbqA",
          "https://github.com/advisories/GHSA-vvgc-356p-c3xw"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45288",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-400"
            ]
          }
        ],
        "summary": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.21.9]",
              "[1.22.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          },
          "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591": {
            "fixed_versions": [
              "[0.23.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591",
                  "full_path": "golang.org/x/net"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-597401",
        "references": [
          "https://github.com/advisories/GHSA-4v7x-pqxf-cx7m",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45288",
          "https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M",
          "http://www.openwall.com/lists/oss-security/2024/04/03/16",
          "https://go.dev/cl/576155",
          "https://security.netapp.com/advisory/ntap-20240419-0009",
          "https://security.netapp.com/advisory/ntap-20240419-0009/",
          "https://github.com/advisories/GHSA-qc6v-5g5m-8cw2",
          "https://github.com/zitadel/zitadel-go/security/advisories/GHSA-qc6v-5g5m-8cw2",
          "https://pkg.go.dev/vuln/GO-2024-2631",
          "https://www.cve.org/CVERecord?id=CVE-2023-45288",
          "https://pkg.go.dev/vuln/GO-2024-2611",
          "https://github.com/zitadel/zitadel-go/releases/tag/v3.0.0-next.3",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QRYFHIQ6XRKRYBI2F5UESH67BJBQXUPT",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QRYFHIQ6XRKRYBI2F5UESH67BJBQXUPT/",
          "https://pkg.go.dev/vuln/GO-2024-2687",
          "http://www.openwall.com/lists/oss-security/2024/04/05/4",
          "https://nowotarski.info/http2-continuation-flood-technical-details",
          "https://go.dev/issue/65051"
        ],
        "extended_information": {
          "short_description": "A design problem in the implementation of the HTTP/2 protocol in Golang may lead to denial of service by abusing frame flags.",
          "full_description": "The `net/http` package in Go is used for handling HTTP requests and responses.\n`HTTP/2` is a binary protocol where the client and server exchange binary frames instead of text lines as in `HTTP/1.x`. `HTTP/2` resolves numerous concerns found in HTTP/1.1 by organizing each HTTP message into a series of HTTP/2 frames. These frames include frame type, length, flags, stream identifier (ID), and payload.\n\nThe `HEADERS` frame type allows sending HTTP headers of, both, request and response. The `HEADERS` frame contains many flags.\nThe `CONTINUATION` frame type is similar to the `HEADER` frame, but it has just one flag: `END_HEADERS`. When it is not set, the peer knows that more headers are coming in the following `CONTINUATION` frames.\n\nThis mechanism allows an attacker to send an `HTTP/2` stream with `CONTINUATION` frames, without setting the `END_HEADERS` flag in any of the frames. This can cause denial-of-service when sending an excessive number of these crafted frames due to caching all frames in memory.\n\nThough the `net/http` package uses HTTP/2 by default, a Golang web server must have HTTPS configured to be vulnerable to exploitation.\nThe `x/net/http2` package is vulnerable by default.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "Though the `net/http` package uses HTTP/2 by default, a Golang web server must have HTTPS configured to be vulnerable to exploitation.\nThe `x/net/http2` package is vulnerable by default.",
              "is_positive": true
            },
            {
              "name": "The issue has multiple mentions in general media",
              "description": "This issue is related to the well-covered attack \"HTTP/2 CONTINUATION Flood\"."
            },
            {
              "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
              "description": "A very detailed technical write-up has been published regarding the issue."
            },
            {
              "name": "The issue can be exploited by attackers over the network"
            }
          ],
          "remediation": "##### Development mitigations\n\nFrom Golang version 1.6, the `net/http` package is using the `HTTP/2` protocol by default when using HTTPS. You can disable HTTP/2 by setting `Server.TLSNextProto` (for servers) to a non-nil, empty map.\n\nFor example:\n```\npackage main\n\nimport (\n    \"log\"\n    \"net/http\"\n    \"crypto/tls\"\n)\n\nfunc main() {\n    m := http.NewServeMux()\n    srv := \u0026http.Server{\n        Handler:      m,\n        Addr:         \"127.0.0.1:8080\",\n        TLSNextProto: make(map[string]func(*http.Server, *tls.Conn, http.Handler)),\n    }\n    log.Fatal(srv.ListenAndServe())\n}\n```\n\nAlternatively, the following GODEBUG settings are also supported, which disables the HTTP/2 server support:\n```\nGODEBUG=http2server=0\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-41723",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "NVD-CWE-Other",
              "CWE-400"
            ]
          }
        ],
        "summary": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
        "severity": "High",
        "components": {
          "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591": {
            "fixed_versions": [
              "[0.7.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591",
                  "full_path": "golang.org/x/net"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-426749",
        "references": [
          "https://security.netapp.com/advisory/ntap-20230331-0010/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T7N5GV4CHH6WAGX3GFMDD3COEOVCZ4RI/",
          "https://go.dev/cl/468295",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BUK2ZIAGCULOOYDNH25JPU6JBES5NF2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/REMHVVIBDNKSRKNOTV7EQSB7CYQWOUOU",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4MA5XS5DAOJ5PKKNG5TUXKPQOFHT5VBC",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RGW7GE2Z32ZT47UFAQFDRQE33B7Q7LMT",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-41723",
          "https://github.com/advisories/GHSA-vvpx-j8f3-3w6h",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XX3IMUTZKRQ73PBZM4E2JP4BKYH4C6XE/",
          "https://groups.google.com/g/golang-announce/c/V0aBFqaFs_E",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/REMHVVIBDNKSRKNOTV7EQSB7CYQWOUOU/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T7N5GV4CHH6WAGX3GFMDD3COEOVCZ4RI",
          "https://pkg.go.dev/vuln/GO-2023-1571",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BUK2ZIAGCULOOYDNH25JPU6JBES5NF2/",
          "https://security.gentoo.org/glsa/202311-09",
          "https://www.couchbase.com/alerts",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XX3IMUTZKRQ73PBZM4E2JP4BKYH4C6XE",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RGW7GE2Z32ZT47UFAQFDRQE33B7Q7LMT/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4MA5XS5DAOJ5PKKNG5TUXKPQOFHT5VBC/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RLBQ3A7ROLEQXQLXFDLNJ7MYPKG5GULE/",
          "https://www.couchbase.com/alerts/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RLBQ3A7ROLEQXQLXFDLNJ7MYPKG5GULE",
          "https://go.dev/issue/57855",
          "https://vuln.go.dev/ID/GO-2023-1571.json",
          "https://go.dev/cl/468135"
        ],
        "extended_information": {
          "short_description": "Unbounded resource consumption in Go's http2/hpack package may lead to denial of service when parsing crafted requests.",
          "full_description": "Go's [hpack](https://pkg.go.dev/golang.org/x/net/http2/hpack) package implements HPACK, a compression format for efficiently representing HTTP header fields in the context of HTTP/2.\n\nHTTP header fields are represented by a `name` and `value` strings pair.\n\nIt was discovered that a very large header field can cause an unbounded CPU consumption in the HPACK decoder which could lead to denial of service.\n\nThe HPACK decoder would try to parse the partial header field while the request is streamed, and each time would repeat the decoding of the field strings.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue has an exploit published",
              "description": "An internal Golang test exists which demonstrates the use of a malicious name-value pair."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "A Go web server must use the HTTP/2 HPACK compression in order to be vulnerable, which is not the default.",
              "is_positive": true
            },
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "A request containing crafted HPACK-compressed data is enough to trigger the issue."
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Denial of service."
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-41721",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-444"
            ]
          }
        ],
        "summary": "A request smuggling attack is possible when using MaxBytesHandler. When using MaxBytesHandler, the body of an HTTP request is not fully consumed. When the server attempts to read HTTP2 frames from the connection, it will instead be reading the body of the HTTP request, which could be attacker-manipulated to represent arbitrary HTTP2 requests.",
        "severity": "High",
        "components": {
          "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591": {
            "fixed_versions": [
              "[0.1.1-0.20221104162952-702349b0e862]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591",
                  "full_path": "golang.org/x/net"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-413550",
        "references": [
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/X5DXTLLWN6HKI5I35EUZRBISTNZJ75GP",
          "https://go.dev/cl/447396",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-41721",
          "https://go.dev/issue/56352",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/X3H3EWQXM2XL5AGBX6UL443JEJ3GQXJN",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/X3H3EWQXM2XL5AGBX6UL443JEJ3GQXJN/",
          "https://github.com/advisories/GHSA-fxg5-wq6x-vr4w",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/X5DXTLLWN6HKI5I35EUZRBISTNZJ75GP/",
          "https://pkg.go.dev/vuln/GO-2023-1495"
        ],
        "extended_information": {
          "short_description": "A design problem in Go's http2/h2c package may lead to request smuggling when processing an HTTP/1 upgrade request.",
          "full_description": "Go's [h2c](https://pkg.go.dev/golang.org/x/net/http2/h2c) package implements the `h2c` protocol non-TLS version of HTTP/2.\n\n`HTTP/2` is a major revision of the HTTP network protocol used by the World Wide Web. It was derived from the earlier experimental `SPDY` protocol, originally developed by Google.\n\nA client starts an `HTTP/1.1` connection and sends an `Upgrade: h2c` header. If the server supports `HTTP/2`, it replies with `HTTP 101 Switching Protocol` status code.\n\nThe `h2c` package handled this request by handing off the request to the `HTTP/2` server.\n\nIt was discovered that when the request body is not fully-read, the partially-read request would be handed-off to the `HTTP/2` server. This could result in a [request smuggling attack](https://portswigger.net/web-security/request-smuggling), where a request can be treated by a server as 2 separate requests, giving an attacker the ability to create arbitrary requests.\n\nNote that the issue only occurs when limiting the size of the initial `HTTP/1.1` request body with a `MaxBytesHandler`.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "The CVSS does not take into account the high attack complexity \u0026 per-target research needed to exploit this issue.",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "A public exploit exists in the original report which demonstrates how to trigger this issue."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "A Go web server must use the HTTP/2 protocol with an `h2c` handler and wrap it in a `MaxBytesHandler` in order to be vulnerable, which is not the default.",
              "is_positive": true
            },
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "A crafted request performing `HTTP/1` upgrade to `HTTP/2` h2c is enough to trigger the issue."
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22870",
            "cvss_v3_score": "4.4",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L",
            "cwe": [
              "CWE-20",
              "CWE-115"
            ]
          }
        ],
        "summary": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied.",
        "severity": "Medium",
        "components": {
          "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591": {
            "fixed_versions": [
              "[0.36.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591",
                  "full_path": "golang.org/x/net"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-676974",
        "references": [
          "http://www.openwall.com/lists/oss-security/2025/03/07/2",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22870",
          "https://go.dev/issue/71984",
          "https://go.dev/cl/654697",
          "https://pkg.go.dev/vuln/GO-2025-3503",
          "https://github.com/advisories/GHSA-qxp5-gwg8-xv66",
          "https://security.netapp.com/advisory/ntap-20250509-0007",
          "https://security.netapp.com/advisory/ntap-20250509-0007/"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-41717",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-770"
            ]
          }
        ],
        "summary": "An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.",
        "severity": "Medium",
        "components": {
          "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591": {
            "fixed_versions": [
              "[0.4.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591",
                  "full_path": "golang.org/x/net"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-263305",
        "references": [
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T7N5GV4CHH6WAGX3GFMDD3COEOVCZ4RI/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZSVEMQV5ROY5YW5QE3I57HT3ITWG5GCV",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Q52IQI754YAE4XPR4QBRWPIVZWYGZ4FS",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ANIOPUXWIHVRA6CEWXCGOMX3YYS6KFHG",
          "https://go.dev/cl/455717",
          "https://go.dev/cl/455635",
          "https://pkg.go.dev/vuln/GO-2022-1144",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4SBIUECMLNC572P23DDOKJNKPJVX26SP/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QBKBAZBIOXZV5QCFHZNSVXULR32XJCYD/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CHHITS4PUOZAKFIUBQAQZC7JWXMOYE4B",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZSVEMQV5ROY5YW5QE3I57HT3ITWG5GCV/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CSVIS6MTMFVBA7JPMRAUNKUOYEVSJYSB/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NQGNAXK3YBPMUP3J4TECIRDHFGW37522/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BUK2ZIAGCULOOYDNH25JPU6JBES5NF2",
          "https://github.com/advisories/GHSA-xrjj-mj9h-534m",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/REMHVVIBDNKSRKNOTV7EQSB7CYQWOUOU/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T7N5GV4CHH6WAGX3GFMDD3COEOVCZ4RI",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5RSKA2II6QTD4YUKUNDVJQSRYSFC4VFR",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QBKBAZBIOXZV5QCFHZNSVXULR32XJCYD",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/56B2FFESRYYP6IY2AZ3UWXLWKZ5IYZN4",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-41717",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NQGNAXK3YBPMUP3J4TECIRDHFGW37522",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BUK2ZIAGCULOOYDNH25JPU6JBES5NF2/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/REMHVVIBDNKSRKNOTV7EQSB7CYQWOUOU",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ANIOPUXWIHVRA6CEWXCGOMX3YYS6KFHG/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5RSKA2II6QTD4YUKUNDVJQSRYSFC4VFR/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Q52IQI754YAE4XPR4QBRWPIVZWYGZ4FS/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PUM4DIVOLJCBK5ZDP4LJOL24GXT3YSIR",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KEOTKBUPZXHE3F352JBYNTSNRXYLWD6P",
          "https://security.gentoo.org/glsa/202311-09",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KEOTKBUPZXHE3F352JBYNTSNRXYLWD6P/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4SBIUECMLNC572P23DDOKJNKPJVX26SP",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WPEIZ7AMEJCZXU3FEJZMVRNHQZXX5P3I",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/56B2FFESRYYP6IY2AZ3UWXLWKZ5IYZN4/",
          "https://go.dev/issue/56350",
          "https://groups.google.com/g/golang-announce/c/L_3rmdT0BMU/m/yZDrXjIiBQAJ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CSVIS6MTMFVBA7JPMRAUNKUOYEVSJYSB",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PW3XC47AUW5J5M2ULJX7WCCL3B2ETLMT",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CHHITS4PUOZAKFIUBQAQZC7JWXMOYE4B/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PUM4DIVOLJCBK5ZDP4LJOL24GXT3YSIR/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WPEIZ7AMEJCZXU3FEJZMVRNHQZXX5P3I/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PW3XC47AUW5J5M2ULJX7WCCL3B2ETLMT/"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-39325",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-770",
              "CWE-400"
            ]
          }
        ],
        "summary": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
        "severity": "High",
        "components": {
          "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591": {
            "fixed_versions": [
              "[0.17.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591",
                  "full_path": "golang.org/x/net"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-533342",
        "references": [
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WCNCBYKZXLDFGAJUB7ZP5VLC3YTHJNVH/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YRKEXKANQ7BKJW2YTAMP625LJUJZLJ4P/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/D2BBIDR2ZMB3X5BC7SR4SLQMHRMVPY6L",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PJCUNGIQDUMZ4Z6HWVYIMR66A35F5S74/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IPWCNYB5PQ5PCVZ4NJT6G56ZYFZ5QBU6/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XTNLSL44Y5FB6JWADSZH6DCV4JJAAEQY",
          "https://github.com/advisories/GHSA-4374-p667-p6c8",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3OVW5V2DM5K5IC3H7O42YDUGNJ74J35O/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MZQYOOKHQDQ57LV2IAG6NRFOVXKHJJ3Z/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FTMJ3NJIDAZFWJQQSP3L22MUFJ3UP2PT",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/R3UETKPUB3V5JS5TLZOF3SMTGT5K5APS/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AVZDNSMVDAQJ64LJC5I5U5LDM5753647",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BUK2ZIAGCULOOYDNH25JPU6JBES5NF2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W2LZSWTV4NV4SNQARNXG5T6LRHP26EW2/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PJCUNGIQDUMZ4Z6HWVYIMR66A35F5S74",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/R3UETKPUB3V5JS5TLZOF3SMTGT5K5APS",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3WJ4QVX2AMUJ2F2S27POOAHRC4K3CHU4/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L5E5JSJBZLYXOTZWXHJKRVCIXIHVWKJ6/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3OVW5V2DM5K5IC3H7O42YDUGNJ74J35O",
          "https://security.netapp.com/advisory/ntap-20231110-0008",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AVZDNSMVDAQJ64LJC5I5U5LDM5753647/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IPWCNYB5PQ5PCVZ4NJT6G56ZYFZ5QBU6",
          "https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ",
          "https://go.dev/issue/63417",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GSY7SXFFTPZFWDM6XELSDSHZLVW3AHK7/",
          "https://go.dev/cl/534215",
          "https://pkg.go.dev/vuln/GO-2023-2102",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2/",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-39325",
          "https://go.dev/cl/534235",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KEOTKBUPZXHE3F352JBYNTSNRXYLWD6P/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ECRC75BQJP6FJN2L7KCKYZW4DSBD7QSD/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GSY7SXFFTPZFWDM6XELSDSHZLVW3AHK7",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UTT7DG3QOF5ZNJLUGHDNLRUIN6OWZARP",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L5E5JSJBZLYXOTZWXHJKRVCIXIHVWKJ6",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NG7IMPL55MVWU3LCI4JQJT3K2U5CHDV7",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W2LZSWTV4NV4SNQARNXG5T6LRHP26EW2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3SZN67IL7HMGMNAVLOTIXLIHUDXZK4LH",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YRKEXKANQ7BKJW2YTAMP625LJUJZLJ4P",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XTNLSL44Y5FB6JWADSZH6DCV4JJAAEQY/",
          "https://github.com/golang/go/issues/63417",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5RSKA2II6QTD4YUKUNDVJQSRYSFC4VFR/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZSVEMQV5ROY5YW5QE3I57HT3ITWG5GCV",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5RSKA2II6QTD4YUKUNDVJQSRYSFC4VFR",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WCNCBYKZXLDFGAJUB7ZP5VLC3YTHJNVH",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YJWHBLVZDM5KQSDFRBFRKU5KSSOLIRQ4",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/REMHVVIBDNKSRKNOTV7EQSB7CYQWOUOU",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KEOTKBUPZXHE3F352JBYNTSNRXYLWD6P",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YJWHBLVZDM5KQSDFRBFRKU5KSSOLIRQ4/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE/",
          "https://security.gentoo.org/glsa/202311-09",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MZQYOOKHQDQ57LV2IAG6NRFOVXKHJJ3Z",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ODBY7RVMGZCBSTWF2OZGIZS57FNFUL67",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T7N5GV4CHH6WAGX3GFMDD3COEOVCZ4RI/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ODBY7RVMGZCBSTWF2OZGIZS57FNFUL67/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QF5QSYAOPDOWLY6DUHID56Q4HQFYB45I/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ULQQONMSCQSH5Z5OWFFQHCGEZ3NL4DRJ/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OXGWPQOJ3JNDW2XIYKIVJ7N7QUIFNM2Q/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NG7IMPL55MVWU3LCI4JQJT3K2U5CHDV7/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZSVEMQV5ROY5YW5QE3I57HT3ITWG5GCV/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3WJ4QVX2AMUJ2F2S27POOAHRC4K3CHU4",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/D2BBIDR2ZMB3X5BC7SR4SLQMHRMVPY6L/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QF5QSYAOPDOWLY6DUHID56Q4HQFYB45I",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T7N5GV4CHH6WAGX3GFMDD3COEOVCZ4RI",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FTMJ3NJIDAZFWJQQSP3L22MUFJ3UP2PT/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4BUK2ZIAGCULOOYDNH25JPU6JBES5NF2/",
          "https://security.netapp.com/advisory/ntap-20231110-0008/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UTT7DG3QOF5ZNJLUGHDNLRUIN6OWZARP/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/REMHVVIBDNKSRKNOTV7EQSB7CYQWOUOU/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QXOU2JZUBEBP7GBKAYIJRPRBZSJCD7ST",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3SZN67IL7HMGMNAVLOTIXLIHUDXZK4LH/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HZQIELEIRSZUYTFFH5KTH2YJ4IIQG2KE/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CHHITS4PUOZAKFIUBQAQZC7JWXMOYE4B/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QXOU2JZUBEBP7GBKAYIJRPRBZSJCD7ST/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HZQIELEIRSZUYTFFH5KTH2YJ4IIQG2KE",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ECRC75BQJP6FJN2L7KCKYZW4DSBD7QSD",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ULQQONMSCQSH5Z5OWFFQHCGEZ3NL4DRJ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OXGWPQOJ3JNDW2XIYKIVJ7N7QUIFNM2Q",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CHHITS4PUOZAKFIUBQAQZC7JWXMOYE4B"
        ],
        "extended_information": {
          "short_description": "Excessive resource consumption in Go's net/http can lead to client connection termination when an attacker client sends and resets many HTTP requests.",
          "full_description": "The `net/http` package in Go is used for handling HTTP requests and responses.\nThe `HTTP/2` protocol is enabled by default when using the net/http Go package.\n\nWhen the `http/2` protocol is enabled, the server application in Go is vulnerable to the [HTTP/2 Rapid Reset DDoS attack](https://gist.github.com/adulau/7c2bfb8e9cdbe4b35a5e131c66a0c088). Specifically in Go's case, the impact of exploiting this vulnerability is very limited as it can only break the client's connection, without causing any denial of service for other clients.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "Exploitable when a Go-based HTTP/2 server is started on the victim machine, using the `ListenAndServeTLS` API call (the API accepts HTTP/2 clients by default)",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC"
            },
            {
              "name": "The issue has multiple mentions in general media",
              "description": "This issue is related to the well-covered attack \"HTTP/2 Rapid Reset\""
            },
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "The issue cannot result in a severe impact (such as remote code execution)",
              "description": "This issue can terminate the specific client's connection attacking the server, without impacting other connections.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-3978",
            "cvss_v3_score": "6.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "cwe": [
              "CWE-79"
            ]
          }
        ],
        "summary": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack.",
        "severity": "Medium",
        "components": {
          "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591": {
            "fixed_versions": [
              "[0.13.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/net:0.0.0-20220909164309-bea034e7d591",
                  "full_path": "golang.org/x/net"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-527265",
        "references": [
          "https://go.dev/issue/61615",
          "https://pkg.go.dev/vuln/GO-2023-1988",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-3978",
          "https://go.dev/cl/514896"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-29526",
            "cvss_v2_score": "5.0",
            "cvss_v2_vector": "CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "cwe": [
              "CWE-269"
            ]
          }
        ],
        "summary": "Go before 1.17.10 and 1.18.x before 1.18.2 has Incorrect Privilege Assignment. When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible.",
        "severity": "Medium",
        "components": {
          "go://golang.org/x/sys:0.0.0-20210630005230-0f9fa26af87c": {
            "fixed_versions": [
              "[0.0.0-20220412211240-33da011f77ad]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/sys:0.0.0-20210630005230-0f9fa26af87c",
                  "full_path": "golang.org/x/sys"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-229670",
        "references": [
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RQXU752ALW53OJAF5MG3WMR5CCZVLWW6/",
          "https://go.dev/issue/52313",
          "https://security.gentoo.org/glsa/202208-02",
          "https://github.com/golang/go/issues/52313",
          "https://groups.google.com/g/golang-announce",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/Q6GE5EQGE4L2KRVGW4T75QVIYAXCLO5X/",
          "https://pkg.go.dev/vuln/GO-2022-0493",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Q6GE5EQGE4L2KRVGW4T75QVIYAXCLO5X",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RQXU752ALW53OJAF5MG3WMR5CCZVLWW6",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-29526",
          "https://security.netapp.com/advisory/ntap-20220729-0001/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/Z55VUVGO7E5PJFXIOVAY373NZRHBNCI5/",
          "https://security.netapp.com/advisory/ntap-20220729-0001",
          "https://groups.google.com/g/golang-announce/c/Y5qrqw_lWdU",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZY2SLWOQR4ZURQ7UBRZ7JIX6H6F5JHJR",
          "https://go.dev/cl/399539",
          "https://go.dev/cl/400074",
          "https://github.com/advisories/GHSA-p782-xgp4-8hr8",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZY2SLWOQR4ZURQ7UBRZ7JIX6H6F5JHJR/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Z55VUVGO7E5PJFXIOVAY373NZRHBNCI5"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22868",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-1286"
            ]
          }
        ],
        "summary": "GHSA-6v2p-p543-phr9:\ngolang.org/x/oauth2 Improper Validation of Syntactic Correctness of Input vulnerability\nGHSA-3wqc-mwfx-672p:\nTraefik affected by Go oauth2/jws Improper Validation of Syntactic Correctness of Input vulnerability",
        "severity": "High",
        "components": {
          "go://golang.org/x/oauth2:0.0.0-20220822191816-0ebed06d0094": {
            "fixed_versions": [
              "[0.27.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/oauth2:0.0.0-20220822191816-0ebed06d0094",
                  "full_path": "golang.org/x/oauth2"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-672307",
        "references": [
          "https://go.dev/cl/652155",
          "https://github.com/advisories/GHSA-6v2p-p543-phr9",
          "https://github.com/advisories/GHSA-3wqc-mwfx-672p",
          "https://github.com/traefik/traefik/releases/tag/v2.11.24",
          "https://github.com/traefik/traefik/security/advisories/GHSA-3wqc-mwfx-672p",
          "https://security.snyk.io/vuln/SNYK-CHAINGUARDLATEST-TRAEFIK33-9403297",
          "https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2",
          "https://go.dev/issue/71490",
          "https://github.com/traefik/traefik/releases/tag/v3.3.6",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22868",
          "https://pkg.go.dev/vuln/GO-2025-3488"
        ],
        "extended_information": {
          "short_description": "Unbounded resource consumption in Go's x/oauth2/jws can lead to denial of service when an attacker client sends a malformed token.",
          "full_description": "A design bug in Go `x/oauth2/jws` module may lead to denial of service when an attacker sends a malformed token to a server.\n\nThe Verify function of Go's JWS module starts with:\n```\nfunc Verify(token string, key *rsa.PublicKey) error {\n\tparts := strings.Split(token, \".\")\n\tif len(parts) != 3 {\n\t\treturn errors.New(\"jws: invalid token received, token must have 3 parts\")\n\t}\n```\nIf an attacker sends a token which has many dots (e.g. 100000) the `strings.Split()` function might crash due to unexpected memory consumption which may lead to DoS.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "May lead to denial of service."
            },
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must find a remote input propagating to the `jws.Verify()` function.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-7246",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "cwe": [
              "NVD-CWE-noinfo",
              "CWE-440"
            ]
          }
        ],
        "summary": "It's possible for a gRPC client communicating with a HTTP/2 proxy to poison the HPACK table between the proxy and the backend such that other clients see failed requests. It's also possible to use this vulnerability to leak other clients HTTP header keys, but not values.\n\nThis occurs because the error status for a misencoded header is not cleared between header reads, resulting in subsequent (incrementally indexed) added headers in the first request being poisoned until cleared from the HPACK table.\n\nPlease update to a fixed version of gRPC as soon as possible. This bug has been fixed in 1.58.3, 1.59.5, 1.60.2, 1.61.3, 1.62.3, 1.63.2, 1.64.3, 1.65.4.",
        "severity": "Medium",
        "components": {
          "go://google.golang.org/grpc:1.49.0": {
            "fixed_versions": [
              "[1.58.3]",
              "[1.59.5]",
              "[1.60.2]",
              "[1.61.3]",
              "[1.62.3]",
              "[1.63.2]",
              "[1.64.3]",
              "[1.65.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://google.golang.org/grpc:1.49.0",
                  "full_path": "google.golang.org/grpc"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-711458",
        "references": [
          "https://github.com/grpc/grpc/issues/36245",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-7246"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-33953",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-770",
              "CWE-789",
              "CWE-834"
            ]
          }
        ],
        "summary": "gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/ Three vectors were found that allow the following DOS attacks:\n\n- Unbounded memory buffering in the HPACK parser\n- Unbounded CPU consumption in the HPACK parser\n\nThe unbounded CPU consumption is down to a copy that occurred per-input-block in the parser, and because that could be unbounded due to the memory copy bug we end up with an O(n^2) parsing loop, with n selected by the client.\n\nThe unbounded memory buffering bugs:\n\n- The header size limit check was behind the string reading code, so we needed to first buffer up to a 4 gigabyte string before rejecting it as longer than 8 or 16kb.\n- HPACK varints have an encoding quirk whereby an infinite number of 0’s can be added at the start of an integer. gRPC’s hpack parser needed to read all of them before concluding a parse.\n- gRPC’s metadata overflow check was performed per frame, so that the following sequence of frames could cause infinite buffering: HEADERS: containing a: 1 CONTINUATION: containing a: 2 CONTINUATION: containing a: 3 etc…",
        "severity": "High",
        "components": {
          "go://google.golang.org/grpc:1.49.0": {
            "fixed_versions": [
              "[1.53.2]",
              "[1.54.3]",
              "[1.55.2]",
              "[1.56.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://google.golang.org/grpc:1.49.0",
                  "full_path": "google.golang.org/grpc"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-691448",
        "references": [
          "https://github.com/rubysec/ruby-advisory-db/blob/master/gems/grpc/CVE-2023-33953.yml",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-33953",
          "https://security.snyk.io/vuln/SNYK-RUBY-GRPC-5834442",
          "https://github.com/advisories/GHSA-496j-2rq6-j6cc",
          "https://cloud.google.com/support/bulletins#gcp-2023-022"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-32732",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-440",
              "NVD-CWE-Other"
            ]
          }
        ],
        "summary": "gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in  https://github.com/grpc/grpc/pull/32309 https://www.google.com/url",
        "severity": "Medium",
        "components": {
          "go://google.golang.org/grpc:1.49.0": {
            "fixed_versions": [
              "[1.53.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://google.golang.org/grpc:1.49.0",
                  "full_path": "google.golang.org/grpc"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-691738",
        "references": [
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/37IDNVY5AWVH7JDMM2SDTL24ZPPZJNSY/",
          "https://github.com/grpc/grpc/releases/tag/v1.53.1",
          "https://github.com/grpc/grpc/commit/65a2a895afaf1d2072447b9baf246374b182a946",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-32732",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VWE44J5FG7THHL7XVEVTNIGEYBNKJBLL",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VWE44J5FG7THHL7XVEVTNIGEYBNKJBLL/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/37IDNVY5AWVH7JDMM2SDTL24ZPPZJNSY",
          "https://github.com/grpc/grpc/commit/29d8beee0ac2555773b2a2dda5601c74a95d6c10",
          "https://github.com/rubysec/ruby-advisory-db/blob/master/gems/grpc/CVE-2023-32732.yml",
          "https://github.com/advisories/GHSA-9hxf-ppjv-w6rq",
          "https://github.com/grpc/grpc/releases/tag/v1.54.2",
          "https://github.com/grpc/grpc/pull/32309"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-33199",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-617"
            ]
          }
        ],
        "summary": "Rekor's goals are to provide an immutable tamper resistant ledger of metadata generated within a software projects supply chain. A malformed proposed entry of the `intoto/v0.0.2` type can cause a panic on a thread within the Rekor process. The thread is recovered so the client receives a 500 error message and service still continues, so the availability impact of this is minimal. This has been fixed in v1.2.0 of Rekor. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "severity": "Medium",
        "components": {
          "go://github.com/sigstore/rekor:0.12.1-0.20220915152154-4bb6f441c1b2": {
            "fixed_versions": [
              "[1.2.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/sigstore/rekor:0.12.1-0.20220915152154-4bb6f441c1b2",
                  "full_path": "github.com/sigstore/rekor"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-520736",
        "references": [
          "https://pkg.go.dev/vuln/GO-2023-1795",
          "https://github.com/sigstore/rekor/commit/140c5add105179e5ffd9e3e114fd1b6b93aebbd4",
          "https://github.com/sigstore/rekor/security/advisories/GHSA-frqx-jfcm-6jjr",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-33199",
          "https://github.com/sigstore/rekor"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-30551",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-770"
            ]
          }
        ],
        "summary": "Rekor is an open source software supply chain transparency log. Rekor prior to version 1.1.1 may crash due to out of memory (OOM) conditions caused by reading archive metadata files into memory without checking their sizes first. Verification of a JAR file submitted to Rekor can cause an out of memory crash if files within the META-INF directory of the JAR are sufficiently large. Parsing of an APK file submitted to Rekor can cause an out of memory crash if the .SIGN or .PKGINFO files within the APK are sufficiently large. The OOM crash has been patched in Rekor version 1.1.1. There are no known workarounds.",
        "severity": "High",
        "components": {
          "go://github.com/sigstore/rekor:0.12.1-0.20220915152154-4bb6f441c1b2": {
            "fixed_versions": [
              "[1.1.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/sigstore/rekor:0.12.1-0.20220915152154-4bb6f441c1b2",
                  "full_path": "github.com/sigstore/rekor"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-519265",
        "references": [
          "https://pkg.go.dev/vuln/GO-2023-1754",
          "https://github.com/sigstore/rekor",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-30551",
          "https://github.com/sigstore/rekor/commit/cf42ace82667025fe128f7a50cf6b4cdff51cc48",
          "https://github.com/sigstore/rekor/releases/tag/v1.1.1",
          "https://github.com/sigstore/rekor/security/advisories/GHSA-2h5h-59f5-c5x9"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-32149",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-772"
            ]
          }
        ],
        "summary": "An attacker may cause a denial of service by crafting an Accept-Language header which ParseAcceptLanguage will take significant time to parse.",
        "severity": "High",
        "components": {
          "go://golang.org/x/text:0.3.8-0.20211004125949-5bd84dd9b33b": {
            "fixed_versions": [
              "[0.3.8]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/text:0.3.8-0.20211004125949-5bd84dd9b33b",
                  "full_path": "golang.org/x/text"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-257749",
        "references": [
          "https://security.netapp.com/advisory/ntap-20230203-0006/",
          "https://security.netapp.com/advisory/ntap-20230203-0006",
          "https://go.dev/cl/442235",
          "https://github.com/golang/go/issues/56152",
          "https://go.dev/issue/56152",
          "https://github.com/golang/text/commit/434eadcdbc3b0256971992e8c70027278364c72c",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-32149",
          "https://pkg.go.dev/vuln/GO-2022-1059",
          "https://github.com/advisories/GHSA-69ch-w2m2-3vjp",
          "https://groups.google.com/g/golang-announce/c/-hjNw559_tE/m/KlGTfid5CAAJ"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2021-41190",
            "cvss_v2_score": "4.0",
            "cvss_v2_vector": "CVSS:2.0/AV:N/AC:L/Au:S/C:N/I:P/A:N",
            "cvss_v3_score": "5.0",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:L/A:N",
            "cwe": [
              "CWE-843"
            ]
          }
        ],
        "summary": "The OCI Distribution Spec project defines an API protocol to facilitate and standardize the distribution of content. In the OCI Distribution Specification version 1.0.0 and prior, the Content-Type header alone was used to determine the type of document during push and pull operations. Documents that contain both “manifests” and “layers” fields could be interpreted as either a manifest or an index in the absence of an accompanying Content-Type header. If a Content-Type header changed between two pulls of the same digest, a client may interpret the resulting content differently. The OCI Distribution Specification has been updated to require that a mediaType value present in a manifest or index match the Content-Type header used during the push and pull operations. Clients pulling from a registry may distrust the Content-Type header and reject an ambiguous document that contains both “manifests” and “layers” fields or “manifests” and “config” fields if they are unable to update to version 1.0.1 of the spec.",
        "severity": "Medium",
        "components": {
          "go://github.com/distribution/distribution:2.7.1+incompatible": {
            "fixed_versions": [
              "[2.8.0-beta.1]",
              "[2.8.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/distribution/distribution:2.7.1+incompatible",
                  "full_path": "github.com/distribution/distribution"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-190299",
        "references": [
          "https://github.com/advisories/GHSA-xmmx-7jpf-fx42",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4334HT7AZPLWNYHW4ARU6JBUF3VZJPZN",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SQBCYJUIM5GVCMFUPRWKRZNXMMI5EFA4/",
          "https://github.com/distribution/distribution",
          "https://nvd.nist.gov/vuln/detail/CVE-2021-41190",
          "https://github.com/opencontainers/image-spec",
          "https://github.com/moby/moby/security/advisories/GHSA-xmmx-7jpf-fx42",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DX63GRWFEI5RVMYV6XLMCG4OHPWZML27",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RZTO6N55WHKHIZI4IMLY2QFBPMVTAERM",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4334HT7AZPLWNYHW4ARU6JBUF3VZJPZN/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3TUZNDAH2B26VPBK342UC3BHZNLBUXGX/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SQBCYJUIM5GVCMFUPRWKRZNXMMI5EFA4",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3TUZNDAH2B26VPBK342UC3BHZNLBUXGX",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/A2RRFNTMFYKOTRKD37F5ANMCIO3GGJML",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YIGVQWOA5XXCQXEOOKZX4CDAGLBDRPRX",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YIGVQWOA5XXCQXEOOKZX4CDAGLBDRPRX/",
          "https://github.com/opencontainers/image-spec/releases/tag/v1.0.2",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DX63GRWFEI5RVMYV6XLMCG4OHPWZML27/",
          "https://github.com/opencontainers/image-spec/commit/693428a734f5bab1a84bd2f990d92ef1111cd60c",
          "https://pkg.go.dev/vuln/GO-2022-0379",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RZTO6N55WHKHIZI4IMLY2QFBPMVTAERM/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/A2RRFNTMFYKOTRKD37F5ANMCIO3GGJML/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T4OJ764CKKCWCVONHD4YXTGR7HZ7LRUV",
          "https://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/T4OJ764CKKCWCVONHD4YXTGR7HZ7LRUV/",
          "https://github.com/distribution/distribution/security/advisories/GHSA-qq97-vm5h-rrhg",
          "https://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m",
          "https://github.com/opencontainers/distribution-spec/commit/ac28cac0557bcd3084714ab09f9f2356fe504923",
          "http://www.openwall.com/lists/oss-security/2021/11/19/10",
          "https://github.com/opencontainers/image-spec/pull/411",
          "https://github.com/opencontainers/distribution-spec",
          "https://github.com/distribution/distribution/commit/b59a6f827947f9e0e67df0cfb571046de4733586"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-2253",
            "cvss_v3_score": "6.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-475",
              "CWE-770"
            ]
          }
        ],
        "summary": "A flaw was found in the `/v2/_catalog` endpoint in distribution/distribution, which accepts a parameter to control the maximum number of records returned (query string: `n`). This vulnerability allows a malicious user to submit an unreasonably large value for `n,` causing the allocation of a massive string array, possibly causing a denial of service through excessive use of memory.",
        "severity": "Medium",
        "components": {
          "go://github.com/docker/distribution:2.8.1+incompatible": {
            "fixed_versions": [
              "[2.8.2-beta.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/docker/distribution:2.8.1+incompatible",
                  "full_path": "github.com/docker/distribution"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-521410",
        "references": [
          "https://lists.debian.org/debian-lts-announce/2023/06/msg00035.html",
          "https://github.com/distribution/distribution",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-2253",
          "https://bugzilla.redhat.com/show_bug.cgi?id=2189886",
          "https://github.com/advisories/GHSA-hqxw-f8mx-cpmw",
          "https://pkg.go.dev/vuln/GO-2023-1772",
          "https://github.com/distribution/distribution/security/advisories/GHSA-hqxw-f8mx-cpmw",
          "https://github.com/distribution/distribution/commit/f55a6552b006a381d9167e328808565dd2bf77dc"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-30204",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-405"
            ]
          }
        ],
        "summary": "golang-jwt is a Go implementation of JSON Web Tokens. Starting in version 3.2.0 and prior to versions 5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a call to strings.Split) its argument (which is untrusted data) on periods. As a result, in the face of a malicious request whose Authorization header consists of Bearer  followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the function's argument), with a constant factor of about 16. This issue is fixed in 5.2.2 and 4.5.2.",
        "severity": "High",
        "components": {
          "go://github.com/golang-jwt/jwt/v4:4.4.2": {
            "fixed_versions": [
              "[4.5.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang-jwt/jwt/v4:4.4.2",
                  "full_path": "github.com/golang-jwt/jwt/v4"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-678437",
        "references": [
          "https://github.com/golang-jwt/jwt/security/advisories/GHSA-mh63-6h87-95cp",
          "https://github.com/advisories/GHSA-mh63-6h87-95cp",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-30204",
          "https://pkg.go.dev/vuln/GO-2025-3553",
          "https://github.com/golang-jwt/jwt/commit/bf316c48137a1212f8d0af9288cc9ce8e59f1afb",
          "https://security.netapp.com/advisory/ntap-20250404-0002/",
          "https://github.com/golang-jwt/jwt/commit/0951d184286dece21f73c85673fd308786ffe9c3",
          "https://security.netapp.com/advisory/ntap-20250404-0002"
        ],
        "extended_information": {
          "short_description": "Unbounded resource consumption in golang-jwt can lead to denial of service when an attacker client sends a malformed token.",
          "full_description": "A design bug in Go `golang-jwt` module may lead to denial of service when an attacker sends a malformed token to a server.\n\nThe `parse.ParseUnverified()` function starts with:\n```\nfunc (p *Parser) ParseUnverified(tokenString string, claims Claims) (token *Token, parts []string, err error) {\n \tparts = strings.Split(tokenString, \".\")\n \tif len(parts) != 3 {\n \t\treturn nil, parts, newError(\"token contains an invalid number of segments\", ErrTokenMalformed)\n```\nIf an attacker sends a token which has many dots (e.g. 100000) the `strings.Split()` function might crash due to unexpected memory consumption which may lead to DoS.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "May lead to denial of service."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must find a remote input propagating to the `parse.ParseUnverified()` function.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-51744",
            "cvss_v3_score": "3.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N",
            "cwe": [
              "CWE-347",
              "CWE-755"
            ]
          }
        ],
        "summary": "golang-jwt is a Go implementation of JSON Web Tokens. Unclear documentation of the error behavior in `ParseWithClaims` can lead to situation where users are potentially not checking errors in the way they should be. Especially, if a token is both expired and invalid, the errors returned by `ParseWithClaims` return both error codes. If users only check for the `jwt.ErrTokenExpired ` using `error.Is`, they will ignore the embedded `jwt.ErrTokenSignatureInvalid` and thus potentially accept invalid tokens. A fix has been back-ported with the error handling logic from the `v5` branch to the `v4` branch. In this logic, the `ParseWithClaims` function will immediately return in \"dangerous\" situations (e.g., an invalid signature), limiting the combined errors only to situations where the signature is valid, but further validation failed (e.g., if the signature is valid, but is expired AND has the wrong audience). This fix is part of the 4.5.1 release. We are aware that this changes the behaviour of an established function and is not 100 % backwards compatible, so updating to 4.5.1 might break your code. In case you cannot update to 4.5.0, please make sure that you are properly checking for all errors (\"dangerous\" ones first), so that you are not running in the case detailed above.",
        "severity": "Low",
        "components": {
          "go://github.com/golang-jwt/jwt/v4:4.4.2": {
            "fixed_versions": [
              "[4.5.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang-jwt/jwt/v4:4.4.2",
                  "full_path": "github.com/golang-jwt/jwt/v4"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-652208",
        "references": [
          "https://github.com/golang-jwt/jwt/commit/7b1c1c00a171c6c79bbdb40e4ce7d197060c1c2c",
          "https://github.com/golang-jwt/jwt/security/advisories/GHSA-29wx-vh33-7x7r",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-51744",
          "https://github.com/advisories/GHSA-29wx-vh33-7x7r",
          "https://pkg.go.dev/vuln/GO-2024-3250"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22869",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-770"
            ]
          }
        ],
        "summary": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
        "severity": "High",
        "components": {
          "go://golang.org/x/crypto:0.0.0-20220829220503-c86fa9a7ed90": {
            "fixed_versions": [
              "[0.35.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/crypto:0.0.0-20220829220503-c86fa9a7ed90",
                  "full_path": "golang.org/x/crypto"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-672306",
        "references": [
          "https://security.netapp.com/advisory/ntap-20250411-0010/",
          "https://security.netapp.com/advisory/ntap-20250411-0010",
          "https://github.com/golang/crypto/commit/7292932d45d55c7199324ab0027cc86e8198aa22",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22869",
          "https://pkg.go.dev/vuln/GO-2025-3487",
          "https://go.dev/issue/71931",
          "https://go.dev/cl/652135",
          "https://go-review.googlesource.com/c/crypto/+/652135",
          "https://github.com/advisories/GHSA-hcg3-q754-cr77"
        ],
        "extended_information": {
          "short_description": "Unbounded resource consumption in Go's `crypto/ssh` allows unauthenticated network attackers to cause denial of service.",
          "full_description": "The golang package [x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh) implements an SSH client and server.\n\nTo establish trust between two sides connecting over ssh, the ssh handshake implements a key exchange. During this process each side sends the other an `SSH_MSG_KEXINIT` packet which initializes the exchange. \n\nOnce side A has sent the `SSH_MSG_KEXINIT` packet, it is open to receiving normal data packets from side B. These packets will be queued, and processed once the key exchange is complete. However, if side B is slow at sending its own `SSH_MSG_KEXINIT` packet and quick at sending the data packets, or side B is a malicious user that purposefully refrains from sending the `SSH_MSG_KEXINIT` packet, the data packets could drain side A's memory and potentially cause denial of service from resource consumption.",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "Any client that is allowed to attempt a key exchange can exploit this vulnerability."
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Denial of service."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The highest impact of this vulnerability would be crashing SSH servers. The victim must call the `NewServerConn` API in order to create an SSH server, which would be vulnerable to this issue.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-45337",
            "cvss_v3_score": "9.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cwe": [
              "CWE-1395",
              "CWE-1108",
              "CWE-285"
            ]
          }
        ],
        "summary": "Applications and libraries which misuse connection.serverAuthenticate (via callback field ServerConfig.PublicKeyCallback) may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding...",
        "severity": "Critical",
        "components": {
          "go://golang.org/x/crypto:0.0.0-20220829220503-c86fa9a7ed90": {
            "fixed_versions": [
              "[0.31.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/crypto:0.0.0-20220829220503-c86fa9a7ed90",
                  "full_path": "golang.org/x/crypto"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-657442",
        "references": [
          "https://github.com/advisories/GHSA-7prj-hgx4-2xc3",
          "https://go.dev/cl/635315",
          "https://github.com/ryanbekhen/nanoproxy/security/advisories/GHSA-7prj-hgx4-2xc3",
          "https://pkg.go.dev/vuln/GO-2024-3330",
          "https://github.com/advisories/GHSA-v778-237x-gjrc",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
          "http://www.openwall.com/lists/oss-security/2024/12/11/2",
          "https://security.netapp.com/advisory/ntap-20250131-0007",
          "https://go.dev/issue/70779",
          "https://security.netapp.com/advisory/ntap-20250131-0007/",
          "https://pkg.go.dev/vuln/GO-2024-3321",
          "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
          "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909"
        ],
        "extended_information": {
          "short_description": "API misuse in Golang x/crypto/ssh may lead to authorization bypass when using public key authentication.",
          "full_description": "The golang package [x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh) implements an SSH client and server.\n\nApplications can supply the `ServerConfig` structure with a function `PublicKeyCallback`, which is called when a client offers a public key for authentication (without needing to control its private key). A call to this function does not guarantee that the key offered is actually used to authenticate.\n\nHowever, it has been discovered that some applications might misuse this API and assume that the last key passed to this function is actually the key used in the authentication process. This assumption may be wrong, due to the caching behavior of the package. Vulnerable applications might later rely on this wrong assumption and make authorization decisions based on this key. An attacker may utilize this for user confusion, essentially bypassing authorization.\n\nApplications are only vulnerable if they rely on the last key passed to `PublicKeyCallback` and make authentication decisions based on it. For example:\n```\nfunc runServer(conn net.Conn) error {\n\tvar pubkey string\n\n\tconfig := ssh.ServerConfig{\n\t\tPublicKeyCallback: func(conn ssh.ConnMetadata, key ssh.PublicKey) (*ssh.Permissions, error) {\n\t\t\tpubkey = ssh.FingerprintSHA256(key)\n\t\t\treturn \u0026ssh.Permissions{}, nil\n\t\t},\n\t}\n\n\tserverConn, chans, reqs, err := ssh.NewServerConn(conn, config)\n\tif err != nil {\n\t\treturn err\n\t}\n\t// now make decisions based on pubkey\n}\n```\n\nThe patch provided for this issue made it so the assumed property of `PublicKeyCallback` actually holds, and the last key passed to it is the key used to authenticate. However, the client may still not control the last key passed to `PublicKeyCallback` if the connection is then authenticated with a different method, such as `PasswordCallback`, `KeyboardInteractiveCallback`, or `NoClientAuth`.",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "Exploitation of this vulnerability requires that the application misuse the\nPublicKeyCallback API. This means that the application must assume that the key passed in the last call\nbefore connection establishment is the key used for authentication. In addition, the application must later make authorization decisions based on this key.",
              "is_positive": true
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The impact of this vulnerability depends on the permissions given to an authenticated user.",
              "is_positive": true
            }
          ],
          "remediation": "##### Development mitigations\n\nApplications should not rely on `PublicKeyCallback` in order to know which key was used in the authentication attempt. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the `ServerConn.Permissions` field.\n\nFor example, instead of:\n```\nfunc runServer(conn net.Conn) error {\n\tvar pubkey string\n\n\tconfig := ssh.ServerConfig{\n\t\tPublicKeyCallback: func(conn ssh.ConnMetadata, key ssh.PublicKey) (*ssh.Permissions, error) {\n\t\t\tpubkey = ssh.FingerprintSHA256(key)\n\t\t\treturn \u0026ssh.Permissions{}, nil\n\t\t},\n\t}\n\n\tserverConn, chans, reqs, err := ssh.NewServerConn(conn, config)\n\tif err != nil {\n\t\treturn err\n\t}\n\t// now make decisions based on pubkey\n}\n```\n\nDo:\n```\nfunc runServer(conn net.Conn) error {\n\tvar pubkey string\n\n\tconfig := ssh.ServerConfig{\n\t\tPublicKeyCallback: func(conn ssh.ConnMetadata, key ssh.PublicKey) (*ssh.Permissions, error) {\n\t\t\treturn \u0026ssh.Permissions{\n\t\t\t\t\t// Record the public key used for authentication.\n\t\t\t\t\tExtensions: map[string]string{\n\t\t\t\t\t\t\"pubkey-fp\": ssh.FingerprintSHA256(Key),\n\t\t\t\t\t},\n\t\t\t\t}, nil\n\t\t},\n\t}\n\n\tserverConn, chans, reqs, err := ssh.NewServerConn(conn, config)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tpubkey = serverConn.Permissions.Extensions[\"pubkey-fp\"]\n\t// now make decisions based on pubkey\n}\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-48795",
            "cvss_v3_score": "5.9",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "CWE-345",
              "CWE-354"
            ]
          }
        ],
        "summary": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
        "severity": "Medium",
        "components": {
          "go://golang.org/x/crypto:0.0.0-20220829220503-c86fa9a7ed90": {
            "fixed_versions": [
              "[0.17.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://golang.org/x/crypto:0.0.0-20220829220503-c86fa9a7ed90",
                  "full_path": "golang.org/x/crypto"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-540830",
        "references": [
          "https://security-tracker.debian.org/tracker/source-package/trilead-ssh2",
          "https://www.bitvise.com/ssh-client-version-history#933",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KEOTKBUPZXHE3F352JBYNTSNRXYLWD6P",
          "https://matt.ucc.asn.au/dropbear/CHANGES",
          "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2024-0002",
          "https://github.com/ronf/asyncssh/tags",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/33XHJUB6ROFUOH2OQNENFROTVH6MHSHA/",
          "https://github.com/ronf/asyncssh/commit/0bc73254f41acb140187e0c89606311f88de5b7b",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KMZCVGUGJZZVDPCVDA7TEB22VUCNEXDD",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3YQLUQWLIHDB5QCXQEX7HXHAWMOKPP5O/",
          "https://www.lancom-systems.de/service-support/allgemeine-sicherheitshinweise#c243508",
          "https://github.com/paramiko/paramiko/issues/2337",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/L5Y6MNNVAPIJSXJERQ6PKZVCIUXSNJK7",
          "https://jadaptive.com/important-java-ssh-security-update-new-ssh-vulnerability-discovered-cve-2023-48795",
          "https://www.reddit.com/r/sysadmin/comments/18idv52/cve202348795_why_is_this_cve_still_undisclosed/",
          "https://groups.google.com/g/golang-announce/c/qA3XtxvMUyg",
          "https://github.com/warp-tech/russh/security/advisories/GHSA-45x7-px36-x8w8",
          "https://github.com/apache/mina-sshd/issues/445",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CHHITS4PUOZAKFIUBQAQZC7JWXMOYE4B/",
          "https://github.com/jtesta/ssh-audit/commit/8e972c5e94b460379fe0c7d20209c16df81538a5",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/I724O3LSRCPO4WNVIXTZCT4VVRMXMMSG/",
          "https://www.vicarius.io/vsociety/posts/cve-2023-48795-detect-openssh-vulnerabilit",
          "https://www.vandyke.com/products/securecrt/history.txt",
          "https://www.crushftp.com/crush10wiki/Wiki.jsp?page=Update",
          "https://www.netsarang.com/en/xshell-update-history",
          "https://github.com/proftpd/proftpd/blob/d21e7a2e47e9b38f709bec58e3fa711f759ad0e1/RELEASE_NOTES",
          "https://support.apple.com/kb/HT214084",
          "https://www.paramiko.org/changelog.html",
          "https://github.com/ronf/asyncssh/security/advisories/GHSA-hfmc-7525-mj55",
          "https://thorntech.com/cve-2023-48795-and-sftp-gateway/",
          "https://github.com/openssh/openssh-portable/commits/master",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/33XHJUB6ROFUOH2OQNENFROTVH6MHSHA",
          "https://github.com/ronf/asyncssh/blob/develop/docs/changes.rst",
          "https://news.ycombinator.com/item?id=38684904",
          "https://www.netsarang.com/en/xshell-update-history/",
          "https://github.com/erlang/otp/blob/d1b43dc0f1361d2ad67601169e90a7fc50bb0369/lib/ssh/doc/src/notes.xml#L39-L42",
          "https://lists.debian.org/debian-lts-announce/2024/01/msg00013.html",
          "https://news.ycombinator.com/item?id=38685286",
          "https://bugs.gentoo.org/920280",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/APYIXIQOVDCRWLHTGB4VYMAUIAQLKYJ3",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3CAYYW35MUTNO65RVAELICTNZZFMT2XS",
          "https://github.com/libssh2/libssh2/pull/1291",
          "https://jadaptive.com/important-java-ssh-security-update-new-ssh-vulnerability-discovered-cve-2023-48795/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KEOTKBUPZXHE3F352JBYNTSNRXYLWD6P/",
          "https://help.panic.com/releasenotes/transmit5",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QI3EHAHABFQK7OABNCSF5GMYP6TONTI7/",
          "https://github.com/connectbot/sshlib/compare/2.2.21...2.2.22",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/C3AFMZ6MH2UHHOPIWT5YLSFV3D2VB3AC/",
          "https://lists.debian.org/debian-lts-announce/2023/12/msg00017.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CHHITS4PUOZAKFIUBQAQZC7JWXMOYE4B",
          "https://github.com/mwiede/jsch/pull/461",
          "https://git.libssh.org/projects/libssh.git/commit/?h=stable-0.10\u0026id=10e09e273f69e149389b3e0e5d44b8c221c2e7f6",
          "https://gitlab.com/libssh/libssh-mirror/-/tags",
          "https://ubuntu.com/security/CVE-2023-48795",
          "https://github.com/proftpd/proftpd/issues/456",
          "https://github.com/connectbot/sshlib/commit/5c8b534f6e97db7ac0e0e579331213aa25c173ab",
          "https://access.redhat.com/security/cve/cve-2023-48795",
          "https://security.netapp.com/advisory/ntap-20240105-0004",
          "https://roumenpetrov.info/secsh/#news20231220",
          "https://security-tracker.debian.org/tracker/source-package/proftpd-dfsg",
          "https://bugzilla.redhat.com/show_bug.cgi?id=2254210",
          "https://news.ycombinator.com/item?id=38732005",
          "https://github.com/advisories/GHSA-45x7-px36-x8w8",
          "https://www.openssh.com/txt/release-9.6",
          "https://security-tracker.debian.org/tracker/CVE-2023-48795",
          "https://github.com/proftpd/proftpd/blob/0a7ea9b0ba9fcdf368374a226370d08f10397d99/RELEASE_NOTES",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3CAYYW35MUTNO65RVAELICTNZZFMT2XS/",
          "https://github.com/NixOS/nixpkgs/pull/275249",
          "http://www.openwall.com/lists/oss-security/2024/04/17/8",
          "https://security-tracker.debian.org/tracker/source-package/libssh2",
          "https://www.openwall.com/lists/oss-security/2023/12/18/2",
          "http://packetstormsecurity.com/files/176280/Terrapin-SSH-Connection-Weakening.html",
          "https://thorntech.com/cve-2023-48795-and-sftp-gateway",
          "https://arstechnica.com/security/2023/12/hackers-can-break-ssh-channel-integrity-using-novel-data-corruption-attack",
          "https://lists.debian.org/debian-lts-announce/2024/01/msg00014.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/APYIXIQOVDCRWLHTGB4VYMAUIAQLKYJ3/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BL5KTLOSLH2KHRN4HCXJPK3JUVLDGEL6/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3YQLUQWLIHDB5QCXQEX7HXHAWMOKPP5O",
          "https://github.com/janmojzis/tinyssh/issues/81",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LZQVUHWVWRH73YBXUQJOD6CKHDQBU3DM/",
          "https://groups.google.com/g/golang-announce/c/-n5WqVC18LQ",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BL5KTLOSLH2KHRN4HCXJPK3JUVLDGEL6",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LZQVUHWVWRH73YBXUQJOD6CKHDQBU3DM",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MKQRBF3DWMWPH36LBCOBUTSIZRTPEZXB/",
          "https://arstechnica.com/security/2023/12/hackers-can-break-ssh-channel-integrity-using-novel-data-corruption-attack/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/L5Y6MNNVAPIJSXJERQ6PKZVCIUXSNJK7/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3JIMLVBDWOP4FUPXPTB4PGHHIOMGFLQE",
          "https://github.com/TeraTermProject/teraterm/releases/tag/v5.1",
          "https://github.com/drakkan/sftpgo/releases/tag/v2.5.6",
          "http://www.openwall.com/lists/oss-security/2023/12/20/3",
          "https://go.dev/cl/550715",
          "https://www.suse.com/c/suse-addresses-the-ssh-v2-protocol-terrapin-attack-aka-cve-2023-48795/",
          "https://github.com/cyd01/KiTTY/issues/520",
          "https://github.com/mwiede/jsch/issues/457",
          "https://www.vicarius.io/vsociety/posts/cve-2023-48795-mitigate-openssh-vulnerability",
          "https://security.gentoo.org/glsa/202312-16",
          "https://www.openwall.com/lists/oss-security/2023/12/20/3",
          "http://seclists.org/fulldisclosure/2024/Mar/21",
          "https://forum.netgate.com/topic/184941/terrapin-ssh-attack",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F7EYCFQCTSGJXWO3ZZ44MGKFC5HA7G3Y/",
          "http://www.openwall.com/lists/oss-security/2023/12/18/3",
          "https://github.com/mkj/dropbear/blob/17657c36cce6df7716d5ff151ec09a665382d5dd/CHANGES#L25",
          "https://lists.debian.org/debian-lts-announce/2024/04/msg00016.html",
          "https://github.com/mwiede/jsch/compare/jsch-0.2.14...jsch-0.2.15",
          "https://oryx-embedded.com/download/#changelog",
          "https://github.com/warp-tech/russh/commit/1aa340a7df1d5be1c0f4a9e247aade76dfdd2951",
          "https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html",
          "https://github.com/erlang/otp/releases/tag/OTP-26.2.1",
          "https://github.com/golang/crypto/commit/9d2ee975ef9fe627bf0a6f01c1f69e8ef1d4f05d",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6Y74KVCPEPT4MVU3LHDWCNNOXOE5ZLUR/",
          "https://github.com/PowerShell/Win32-OpenSSH/issues/2189",
          "https://nest.pijul.com/pijul/thrussh/changes/D6H7OWTTMHHX6BTB3B6MNBOBX2L66CBL4LGSEUSAI2MCRCJDQFRQC",
          "https://www.debian.org/security/2023/dsa-5588",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HYEDEXIKFKTUJIN43RG4B7T5ZS6MHUSP/",
          "https://winscp.net/eng/docs/history#6.2.2",
          "https://github.com/paramiko/paramiko/issues/2337#issuecomment-1887642773",
          "https://www.reddit.com/r/sysadmin/comments/18idv52/cve202348795_why_is_this_cve_still_undisclosed",
          "https://github.com/warp-tech/russh/releases/tag/v0.40.2",
          "https://go.dev/issue/64784",
          "https://bugzilla.suse.com/show_bug.cgi?id=1217950",
          "https://security.netapp.com/advisory/ntap-20240105-0004/",
          "https://www.bitvise.com/ssh-server-version-history",
          "https://www.debian.org/security/2023/dsa-5586",
          "https://twitter.com/TrueSkrillor/status/1736774389725565005",
          "https://www.theregister.com/2023/12/20/terrapin_attack_ssh",
          "https://github.com/ronf/asyncssh/commit/69f5a41b458b29367a65fe469c2b0255b5db210a",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3JIMLVBDWOP4FUPXPTB4PGHHIOMGFLQE/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F7EYCFQCTSGJXWO3ZZ44MGKFC5HA7G3Y",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-48795",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QI3EHAHABFQK7OABNCSF5GMYP6TONTI7",
          "https://www.terrapin-attack.com",
          "https://github.com/hierynomus/sshj/issues/916",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HYEDEXIKFKTUJIN43RG4B7T5ZS6MHUSP",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6Y74KVCPEPT4MVU3LHDWCNNOXOE5ZLUR",
          "https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v9.5.0.0p1-Beta",
          "https://github.com/mscdex/ssh2/commit/97b223f8891b96d6fc054df5ab1d5a1a545da2a3",
          "https://www.freebsd.org/security/advisories/FreeBSD-SA-23:19.openssh.asc",
          "https://pkg.go.dev/vuln/GO-2023-2402",
          "https://help.panic.com/releasenotes/transmit5/",
          "https://github.com/net-ssh/net-ssh/blob/2e65064a52d73396bfc3806c9196fc8108f33cd8/CHANGES.txt#L14-L16",
          "https://github.com/ronf/asyncssh",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/C3AFMZ6MH2UHHOPIWT5YLSFV3D2VB3AC",
          "https://nova.app/releases/#v11.8",
          "https://www.suse.com/c/suse-addresses-the-ssh-v2-protocol-terrapin-attack-aka-cve-2023-48795",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KMZCVGUGJZZVDPCVDA7TEB22VUCNEXDD/",
          "https://github.com/rapier1/hpn-ssh/releases",
          "http://www.openwall.com/lists/oss-security/2023/12/19/5",
          "https://www.openssh.com/openbsd.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/I724O3LSRCPO4WNVIXTZCT4VVRMXMMSG",
          "https://crates.io/crates/thrussh/versions",
          "https://filezilla-project.org/versions.php",
          "https://security.gentoo.org/glsa/202312-17",
          "https://github.com/proftpd/proftpd/blob/master/RELEASE_NOTES",
          "https://github.com/TeraTermProject/teraterm/commit/7279fbd6ef4d0c8bdd6a90af4ada2899d786eec0",
          "http://www.openwall.com/lists/oss-security/2024/03/06/3",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MKQRBF3DWMWPH36LBCOBUTSIZRTPEZXB",
          "https://github.com/ssh-mitm/ssh-mitm/issues/165"
        ],
        "extended_information": {
          "short_description": "A design problem in the SSH protocol may lead to a connection security downgrade by local network attackers via MitM.",
          "full_description": "SSH (Secure Shell) is a cryptographic network protocol that provides a secure way to access and manage remote systems over an unsecured network. [OpenSSH](https://www.openssh.com/) refers to an open-source implementation of the SSH (Secure Shell) protocol, offering encrypted communication for secure access to remote systems over networks.\n\n[AES](https://en.wikipedia.org/wiki/Advanced_Encryption_Standard) (Advanced Encryption Standard) is a widely-used symmetric encryption algorithm that ensures secure and efficient encryption and decryption of data.\n\nThe Terrapin attack is a novel cryptographic attack in the SSH protocol itself, causing the compromised client to erroneously perceive that the server lacks support for recent signature algorithms used in user authentication, through a man-in-the-middle (MitM) attack. It affects a wide range of implementations, including but not limited to OpenSSH, Paramiko, and others. \n\nThere are two vulnerable SSH configurations:\n1. `ChaCha20-Poly1305`\n2. Any `aes(128|192|256)-cbc` ciphers using the default MACs (or any MAC that uses Encrypt-then-MAC, EtM, for example - `hmac-sha2-256-etm@openssh.com`).\n\nThe default OpenSSH client and server are vulnerable to this attack, as they are configured to allow the vulnerable `ChaCha20-Poly1305` cipher. \n\nNote that updating either the server or client is not enough! Both must be patched. A vulnerable client connecting to a fixed server will still result in a vulnerable connection.\n\nIn OpenSSH 9.5, a new feature involving [keystroke timing obfuscation](https://lwn.net/Articles/298833/) was introduced. This attack enables a MitM attacker to disable this feature, and consequently to perform a keystroke timing attack against OpenSSH.\n\nThe researchers describe the ChaCha20-Poly1305 cipher integration as easier to exploit than the aes-cbc EtM. \n\nIn this scenario, a prefix truncation attack is employed, wherein the attacker manipulates sequence numbers to selectively delete chosen packets from the start of a communication channel, compromising channel integrity without detection. Specifically, the attacker can omit the `EXT_INFO` message, crucial for negotiating various protocol extensions (specific signature algorithms) without detection by the client or server. To evade detection, the attacker introduces an ignored packet during the handshake, ensuring the sequence numbers remain aligned.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue has multiple mentions in general media",
              "description": "The vulnerability is an inherent flaw in the SSH protocol itself, which affects a wide range of implementations, including but not limited to OpenSSH, Paramiko, and others. Also, the vulnerability received a lot of media attention."
            },
            {
              "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
              "description": "The researchers who found this vulnerability published an academic paper regarding it."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must be able to perform a man-in-the-middle attack on an SSH client or server.\nAdditionally, the SSH server must use a specific configuration:\n1. Enable the `ChaCha20-Poly1305` cipher (enabled by default)\nOR\n2. Enable any `aes(128|192|256)-cbc` ciphers using the default MACs (or any MAC that uses Encrypt-then-MAC, EtM, for example - `hmac-sha2-256-etm@openssh.com`).\n\nThe default OpenSSH client and server are vulnerable to this attack, as they are configured to allow the vulnerable `ChaCha20-Poly1305` cipher. \n\nMoreover, both SSH server and client must be patched to avoid vulnerable connections.",
              "is_positive": true
            },
            {
              "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
              "description": "Although an academic paper was published, no specific implementation of an exploit was shared.\nIt requires a deep understanding of the SSH protocol and substantial further research.",
              "is_positive": true
            }
          ],
          "remediation": "##### Deployment mitigations\n\nTo mitigate this, one can disable the vulnerable `ChaCha20-Poly1305` cipher in the OpenSSH server configuration.\nSpecifically, add the following to your `/etc/ssh/ssh(d)_config`: `Ciphers -chacha20-poly1305@openssh.com`.\nNote the `-` at the start of the chacha20 cipher string.\nThen, restart your SSH server for it to take effect.\n\nIn addition, ensure you’re not explicitly enabling any `aes(128|192|256)-cbc` ciphers in your OpenSSH configuration while using the default MACs (these ciphers are disabled by default)"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24786",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-835",
              "CWE-1286"
            ]
          }
        ],
        "summary": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
        "severity": "Medium",
        "components": {
          "go://google.golang.org/protobuf:1.28.1": {
            "fixed_versions": [
              "[1.33.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://google.golang.org/protobuf:1.28.1",
                  "full_path": "google.golang.org/protobuf"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-593650",
        "references": [
          "http://www.openwall.com/lists/oss-security/2024/03/08/4",
          "https://go.dev/cl/569356",
          "https://pkg.go.dev/vuln/GO-2024-2611",
          "https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0",
          "https://security.netapp.com/advisory/ntap-20240517-0002",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JDMBHAVSDU2FBDZ45U3A2VLSM35OJ2HU/",
          "https://security.netapp.com/advisory/ntap-20240517-0002/",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24786",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JDMBHAVSDU2FBDZ45U3A2VLSM35OJ2HU",
          "https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023",
          "https://github.com/advisories/GHSA-8r3f-844c-mc37"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-45339",
            "cvss_v3_score": "7.1",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
            "cwe": [
              "CWE-61",
              "CWE-377"
            ]
          }
        ],
        "summary": "When logs are written to a widely-writable directory (the default), an unprivileged attacker may predict a privileged process's log file path and pre-create a symbolic link to a sensitive file in its place. When that privileged process runs, it will follow the planted symlink and overwrite that sensitive file. To fix that, glog now causes the program to exit (with status code 2) when it finds that the configured log file already exists.",
        "severity": "High",
        "components": {
          "go://github.com/golang/glog:1.0.0": {
            "fixed_versions": [
              "[1.2.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/glog:1.0.0",
                  "full_path": "github.com/golang/glog"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-668449",
        "references": [
          "https://owasp.org/www-community/vulnerabilities/Insecure_Temporary_File",
          "https://github.com/golang/glog/pull/74",
          "https://github.com/golang/glog/pull/74/commits/b8741656e406e66d6992bc2c9575e460ecaa0ec2",
          "https://github.com/advisories/GHSA-6wxm-mpqj-6jpf",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-45339",
          "https://groups.google.com/g/golang-announce/c/H-Q4ouHWyKs",
          "https://lists.debian.org/debian-lts-announce/2025/02/msg00019.html",
          "https://pkg.go.dev/vuln/GO-2025-3372"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-6104",
            "cvss_v3_score": "5.5",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-532"
            ]
          }
        ],
        "summary": "go-retryablehttp prior to 0.7.7 did not sanitize urls when writing them to its log file. This could lead to go-retryablehttp writing sensitive HTTP basic auth credentials to its log file. This vulnerability, CVE-2024-6104, was fixed in go-retryablehttp 0.7.7.",
        "severity": "Medium",
        "components": {
          "go://github.com/hashicorp/go-retryablehttp:0.7.1": {
            "fixed_versions": [
              "[0.7.7]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/hashicorp/go-retryablehttp:0.7.1",
                  "full_path": "github.com/hashicorp/go-retryablehttp"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-607603",
        "references": [
          "https://pkg.go.dev/vuln/GO-2024-2947",
          "https://discuss.hashicorp.com/c/security",
          "https://github.com/advisories/GHSA-v6v8-xj6m-xwqh",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-6104",
          "https://github.com/hashicorp/go-retryablehttp/commit/a99f07beb3c5faaa0a283617e6eb6bcf25f5049a",
          "https://discuss.hashicorp.com/t/hcsec-2024-12-go-retryablehttp-can-leak-basic-auth-credentials-to-log-files/68027"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-54410",
            "cvss_v3_score": "5.2",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N",
            "cwe": [
              "CWE-909"
            ]
          }
        ],
        "summary": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker Engine, Mirantis Container Runtime, and various other downstream projects/products. A firewalld vulnerability affects Moby releases before 28.0.0. When firewalld reloads, Docker fails to re-create iptables rules that isolate bridge networks, allowing any container to access all ports on any other container across different bridge networks on the same host. This breaks network segmentation between containers that should be isolated, creating significant risk in multi-tenant environments. Only containers in --internal networks remain protected.\nWorkarounds include reloading firewalld and either restarting the docker daemon, re-creating bridge networks, or using rootless mode. Maintainers anticipate a fix for this issue in version 25.0.13.",
        "severity": "Medium",
        "components": {
          "go://github.com/docker/docker:20.10.17+incompatible": {
            "fixed_versions": [
              "[28.0.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/docker/docker:20.10.17+incompatible",
                  "full_path": "github.com/docker/docker"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-712288",
        "references": [
          "https://github.com/moby/moby/pull/49443",
          "https://github.com/moby/moby/pull/49728",
          "https://github.com/moby/moby/security/advisories/GHSA-4vq8-7jfc-9cvp",
          "https://firewalld.org/documentation/howto/reload-firewalld.html",
          "https://github.com/advisories/GHSA-4vq8-7jfc-9cvp",
          "https://pkg.go.dev/vuln/GO-2025-3829",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-54410"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-28842",
            "cvss_v3_score": "6.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:H/A:N",
            "cwe": [
              "CWE-420",
              "CWE-636"
            ]
          }
        ],
        "summary": "Moby) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with the VXLAN metadata, including a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nThe `overlay` driver dynamically and lazily defines the kernel config...",
        "severity": "Medium",
        "components": {
          "go://github.com/docker/docker:20.10.17+incompatible": {
            "fixed_versions": [
              "[20.10.24]",
              "[23.0.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/docker/docker:20.10.17+incompatible",
                  "full_path": "github.com/docker/docker"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-513293",
        "references": [
          "https://pkg.go.dev/vuln/GO-2023-1701",
          "https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp",
          "https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/",
          "https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE/",
          "https://github.com/moby/moby",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-28842",
          "https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw",
          "https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24557",
            "cvss_v3_score": "7.8",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-346",
              "CWE-345"
            ]
          }
        ],
        "summary": "Moby is an open-source project created by Docker to enable software containerization. The classic builder cache system is prone to cache poisoning if the image is built FROM scratch. Also, changes to some instructions (most important being HEALTHCHECK and ONBUILD) would not cause a cache miss. An attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps. 23.0+ users are only affected if they explicitly opted out of Buildkit (DOCKER_BUILDKIT=0 environment variable) or are using the /build API endpoint. All users on versions older than 23.0 could be impacted. Image build API endpoint (/build) and ImageBuild function from github.com/docker/docker/client is also affected as it the uses classic builder by default. Patches are included in 24.0.9 and 25.0.2 releases.",
        "severity": "High",
        "components": {
          "go://github.com/docker/docker:20.10.17+incompatible": {
            "fixed_versions": [
              "[24.0.9]",
              "[25.0.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/docker/docker:20.10.17+incompatible",
                  "full_path": "github.com/docker/docker"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-589785",
        "references": [
          "https://pkg.go.dev/vuln/GO-2024-2512",
          "https://github.com/moby/moby/commit/fca702de7f71362c8d103073c7e4a1d0a467fadd",
          "https://github.com/moby/moby/commit/fce6e0ca9bc000888de3daa157af14fa41fcd0ff",
          "https://github.com/moby/moby/commit/3e230cfdcc989dc524882f6579f9e0dac77400ae",
          "https://github.com/advisories/GHSA-xw73-rw38-6vjc",
          "https://github.com/moby/moby/security/advisories/GHSA-xw73-rw38-6vjc",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24557"
        ],
        "extended_information": {
          "short_description": "Insufficient input validation in Moby may cause cache poisoning and potential code execution when not using a base image.",
          "full_description": "[Moby](https://mobyproject.org/) is an open-source framework provided by Docker for building customized, specialized containers and is widely used by developers working with docker containers.\n\nUsually, when using Moby to build docker images, the first line will be `FROM \u003cimage\u003e`, where `image` will serve as the [base image](https://docs.docker.com/build/building/base-images/) for the new docker build. However, there is another option - `FROM scratch`. When using this option, there is no base image at all - which can be helpful for creating minimal images. \n\nWhen building a docker image, to make the build process more efficient, docker [locally caches](https://docs.docker.com/build/cache/) the already used layers in a directory on the host where the docker daemon is running. This way, the next time the build is requested, layers that weren't changed are loaded from the cache instead of built again.\n\nHowever, when utilizing the caching system on builds that use `FROM scratch`, insufficient validation of the cached layers could let an attacker create an image that passes the checks for a cache candidate - injecting a potentially malicious image into the build process. Such an attacker would need prior knowledge of the Dockerfile used and be able to insert malicious images into the cache saved on the host.\n\nNote that users with version 23.0 and above would need to manually opt out of using the default Buildkit image builder or use the /build API endpoint to be vulnerable.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "Depending on the malicious image used by the attacker, the impact could range from code execution to stealing information.",
              "is_positive": true
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "Exploitation depends on how exactly Docker is hosted, if there are different containers hosted on the same system, and the Dockerfile used.",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "An attacker needs access to the Dockerfile and to be able to insert custom images into the cache. In addition, users with version 23.0 and above would need to manually opt out of using the default Buildkit image builder or use the /build API endpoint to be vulnerable.",
              "is_positive": true
            }
          ],
          "remediation": "##### Development mitigations\n\nUse `Version = types.BuilderBuildKit` or `NoCache = true` in `ImageBuildOptions` for the `ImageBuild` call. For example:\n```\n\topts := types.ImageBuildOptions{\n\t\tDockerfile: \"Dockerfile\",\n\t\tTags:       []string{\"dockerhub.com/node-hello\"},\n\t\tNoCache:     true,\n\t}\n\tres, err := dockerClient.ImageBuild(ctx, tar, opts)\n\tif err != nil {\n\t\treturn err\n\t}\n```\n\n##### Deployment mitigations\n\nUse the `--no-cache` flag when building the docker image, for example:\n`docker build --no-cache -t {IMAGE_NAME} .`\n\nOr, use Buildkit if possible (which is the default for versions 23.0+):\n`DOCKER_BUILDKIT=1 docker build -t {IMAGE_NAME} .`"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-36109",
            "cvss_v3_score": "6.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "cwe": [
              "NVD-CWE-Other",
              "CWE-863"
            ]
          }
        ],
        "summary": "Moby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where supplementary groups are not set up properly. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.  This bug is fixed in Moby (Docker Engine) 20.10.18. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade, this problem can be worked around by not using the `\"USER $USERNAME\"` Dockerfile instruction. Instead by calling `ENTRYPOINT [\"su\", \"-\", \"user\"]` the supplementary groups will be set up properly.",
        "severity": "Medium",
        "components": {
          "go://github.com/docker/docker:20.10.17+incompatible": {
            "fixed_versions": [
              "[20.10.18]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/docker/docker:20.10.17+incompatible",
                  "full_path": "github.com/docker/docker"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-253657",
        "references": [
          "https://github.com/advisories/GHSA-rc4r-wh2q-q6c4",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O7JL2QA3RB732MLJ3RMUXB3IB7AA22YU",
          "https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RQQ4E3JBXVR3VK5FIZVJ3QS2TAOOXXTQ",
          "https://pkg.go.dev/vuln/GO-2022-0985",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/O7JL2QA3RB732MLJ3RMUXB3IB7AA22YU",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RQQ4E3JBXVR3VK5FIZVJ3QS2TAOOXXTQ",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/O7JL2QA3RB732MLJ3RMUXB3IB7AA22YU/",
          "https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4",
          "https://github.com/moby/moby/commit/de7af816e76a7fd3fbf06bffa6832959289fba32",
          "https://github.com/moby/moby/releases/tag/v20.10.18",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RQQ4E3JBXVR3VK5FIZVJ3QS2TAOOXXTQ/",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-36109"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-28841",
            "cvss_v3_score": "6.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N",
            "cwe": [
              "CWE-636",
              "CWE-311"
            ]
          }
        ],
        "summary": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with the VXLAN metadata, including a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nAn iptables rule designates outgoing VXLAN datagrams with a VNI that c...",
        "severity": "Medium",
        "components": {
          "go://github.com/docker/docker:20.10.17+incompatible": {
            "fixed_versions": [
              "[20.10.24]",
              "[23.0.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/docker/docker:20.10.17+incompatible",
                  "full_path": "github.com/docker/docker"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-513294",
        "references": [
          "https://pkg.go.dev/vuln/GO-2023-1700",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/",
          "https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE/",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-28841",
          "https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw",
          "https://github.com/moby/libnetwork/blob/d9fae4c73daf76c3b0f77e14b45b8bf612ba764d/drivers/overlay/encryption.go#L205-L207",
          "https://github.com/moby/moby/issues/43382",
          "https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp",
          "https://github.com/moby/moby",
          "https://github.com/moby/moby/pull/45118",
          "https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237",
          "https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-29018",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-669"
            ]
          }
        ],
        "summary": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. Moby's networking implementation allows for many networks, each with their own IP address range and gateway, to be defined. This feature is frequently referred to as custom networks, as each network can have a different driver, set of parameters and thus behaviors. When creating a network, the `--internal` flag is used to designate a network as _internal_. The `internal` attribute in a docker-compose.yml file may also be used to mark a network _internal_, and other API clients may specify the `internal` parameter as well.\n\nWhen containers with networking are created, they are assigned unique network interfaces and IP addresses. The host serves as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT to/from container IPs.\n\nContainers on an internal network may communicate between each other, but are precluded from communicating with any networks the host has access to (LAN or WAN) as no default route is configured, and firewall rules are set up to drop all outgoing traffic. Communication with the gateway IP address (and thus appropriately configured host services) is possible, and the host may communicate with any container IP directly.\n\nIn addition to configuring the Linux kernel's various networking features to enable container networking, `dockerd` directly provides some services to container networks. Principal among these is serving as a resolver, enabling service discovery, and resolution of names from an upstream resolver.\n\nWhen a DNS request for a name that does not correspond to a container is received, the request is forwarded to the configured upstream resolver. This request is made from the container's network namespace: the level of access and routing of traffic is the same as if the request was made by the container itself.\n\nAs a consequence of this design, containers solely attached to an internal network will ...",
        "severity": "High",
        "components": {
          "go://github.com/docker/docker:20.10.17+incompatible": {
            "fixed_versions": [
              "[23.0.11]",
              "[25.0.5]",
              "[26.0.0-rc3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/docker/docker:20.10.17+incompatible",
                  "full_path": "github.com/docker/docker"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-594167",
        "references": [
          "https://pkg.go.dev/vuln/GO-2024-2659",
          "https://github.com/advisories/GHSA-mq39-4gv4-mvpx",
          "https://github.com/moby/moby/pull/46609",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-29018",
          "https://github.com/moby/moby/security/advisories/GHSA-mq39-4gv4-mvpx"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-28840",
            "cvss_v3_score": "8.7",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:H/A:H",
            "cwe": [
              "CWE-636",
              "CWE-420"
            ]
          }
        ],
        "summary": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby, is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in dockerd and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe overlay network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the u32 iptables extension provided by the xt_u32 kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nTwo iptables rules serve to filter incoming VXLAN datagrams with a VNI that corresponds to an encrypted net...",
        "severity": "High",
        "components": {
          "go://github.com/docker/docker:20.10.17+incompatible": {
            "fixed_versions": [
              "[20.10.24]",
              "[23.0.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/docker/docker:20.10.17+incompatible",
                  "full_path": "github.com/docker/docker"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-513295",
        "references": [
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/",
          "https://github.com/moby/moby/pull/45118",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/",
          "https://pkg.go.dev/vuln/GO-2023-1699",
          "https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333",
          "https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237",
          "https://github.com/moby/moby",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-28840",
          "https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw",
          "https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp",
          "https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE/",
          "https://github.com/moby/moby/issues/43382"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-39253",
            "cvss_v3_score": "5.5",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-59",
              "CWE-200"
            ]
          }
        ],
        "summary": "Git is an open source, scalable, distributed revision control system. Versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 are subject to exposure of sensitive information to a malicious actor. When performing a local clone (where the source and target of the clone are on the same volume), Git copies the contents of the source's `$GIT_DIR/objects` directory into the destination by either creating hardlinks to the source contents, or copying them (if hardlinks are disabled via `--no-hardlinks`). A malicious actor could convince a victim to clone a repository with a symbolic link pointing at sensitive information on the victim's machine. This can be done either by having the victim clone a malicious repository on the same machine, or having them clone a malicious repository embedded as a bare repository via a submodule from any source, provided they clone with the `--recurse-submodules` option. Git does not create symbolic links in the `$GIT_DIR/objects` directory. The problem has been patched in the versions published on 2022-10-18, and backported to v2.30.x. Potential workarounds: Avoid cloning untrusted repositories using the `--local` optimization when on a shared machine, either by passing the `--no-local` option to `git clone` or cloning from a URL that uses the `file://` scheme. Alternatively, avoid cloning repositories from untrusted sources with `--recurse-submodules` or run `git config --global protocol.file.allow user`.",
        "severity": "Medium",
        "components": {
          "go://github.com/docker/docker:20.10.17+incompatible": {
            "fixed_versions": [
              "[20.10.20]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/docker/docker:20.10.17+incompatible",
                  "full_path": "github.com/docker/docker"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-536905",
        "references": [
          "https://github.com/advisories/GHSA-vp35-85q5-9f25",
          "https://lore.kernel.org/git/xmqq4jw1uku5.fsf@gitster.g/T/#u",
          "https://github.com/moby/moby/releases/tag/v20.10.20",
          "https://github.com/git/git/security/advisories/GHSA-3wp6-j8xr-qw85",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JMQWGMDLX6KTVWW5JZLVPI7ICAK72TN7/",
          "https://lists.debian.org/debian-lts-announce/2022/12/msg00025.html",
          "https://github.blog/2022-10-17-git-security-vulnerabilities-announced",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-39253",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VFYXCTLOSESYIP72BUYD6ECDIMUM4WMB/",
          "http://www.openwall.com/lists/oss-security/2023/02/14/5",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OHNO2FB55CPX47BAXMBWUBGWHO6N6ZZH/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/C7B6JPKX5CGGLAHXJVQMIZNNEEB72FHD/",
          "https://github.com/moby/moby/security/advisories/GHSA-vp35-85q5-9f25",
          "https://security.gentoo.org/glsa/202312-15",
          "http://seclists.org/fulldisclosure/2022/Nov/1",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UKFHE4KVD7EKS5J3KTDFVBEKU3CLXGVV/",
          "http://www.openwall.com/lists/oss-security/2024/05/14/2",
          "https://support.apple.com/kb/HT213496"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-46737",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-835",
              "CWE-400"
            ]
          }
        ],
        "summary": "Cosign is a sigstore signing tool for OCI containers. Cosign is susceptible to a denial of service by an attacker controlled registry. An attacker who controls a remote registry can return a high number of attestations and/or signatures to Cosign and cause Cosign to enter a long loop resulting in an endless data attack. The root cause is that Cosign loops through all attestations fetched from the remote registry in pkg/cosign.FetchAttestations. The attacker needs to compromise the registry or make a request to a registry they control. When doing so, the attacker must return a high number of attestations in the response to Cosign. The result will be that the attacker can cause Cosign to go into a long or infinite loop that will prevent other users from verifying their data. In Kyvernos case, an attacker whose privileges are limited to making requests to the cluster can make a request with an image reference to their own registry, trigger the infinite loop and deny other users from completing their admission requests. Alternatively, the attacker can obtain control of the registry used by an organization and return a high number of attestations instead the expected number of attestations. The issue can be mitigated rather simply by setting a limit to the limit of attestations that Cosign will loop through. The limit does not need to be high to be within the vast majority of use cases and still prevent the endless data attack. This issue has been patched in version 2.2.1 and users are advised to upgrade.",
        "severity": "Medium",
        "components": {
          "go://github.com/sigstore/cosign:1.12.1": {
            "fixed_versions": [
              "[1.13.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/sigstore/cosign:1.12.1",
                  "full_path": "github.com/sigstore/cosign"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-535662",
        "references": [
          "https://pkg.go.dev/vuln/GO-2023-2181",
          "https://github.com/sigstore/cosign/security/advisories/GHSA-vfp6-jrw2-99g9",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-46737",
          "https://github.com/sigstore/cosign/releases/tag/v2.2.1",
          "https://github.com/sigstore/cosign/releases/tag/v1.13.2",
          "https://github.com/advisories/GHSA-vfp6-jrw2-99g9",
          "https://github.com/sigstore/cosign/pull/3364",
          "https://github.com/sigstore/cosign/commit/8ac891ff0e29ddc67965423bee8f826219c6eb0f"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-29903",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-770"
            ]
          }
        ],
        "summary": "Cosign provides code signing and transparency for containers and binaries. Prior to version 2.2.4, maliciously-crafted software artifacts can cause denial of service of the machine running Cosign thereby impacting all services on the machine. The root cause is that Cosign creates slices based on the number of signatures, manifests or attestations in untrusted artifacts. As such, the untrusted artifact can control the amount of memory that Cosign allocates. The exact issue is Cosign allocates excessive memory on the lines that creates a slice of the same length as the manifests. Version 2.2.4 contains a patch for the vulnerability.",
        "severity": "High",
        "components": {
          "go://github.com/sigstore/cosign:1.12.1": {
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/sigstore/cosign:1.12.1",
                  "full_path": "github.com/sigstore/cosign"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-597869",
        "references": [
          "https://github.com/sigstore/cosign/commit/629f5f8fa672973503edde75f84dcd984637629e",
          "https://github.com/sigstore/cosign/releases/tag/v2.2.4",
          "https://github.com/sigstore/cosign/blob/286a98a4a99c1b2f32f84b0d560e324100312280/pkg/oci/remote/signatures.go#L56-L70",
          "https://github.com/sigstore/cosign/blob/14795db16417579fac0c00c11e166868d7976b61/pkg/cosign/verify.go#L948-L955",
          "https://github.com/advisories/GHSA-95pr-fxf5-86gv",
          "https://github.com/sigstore/cosign/security/advisories/GHSA-95pr-fxf5-86gv",
          "https://pkg.go.dev/vuln/GO-2024-2719",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-29903"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-29902",
            "cvss_v3_score": "5.9",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-770"
            ]
          }
        ],
        "summary": "Cosign provides code signing and transparency for containers and binaries. Prior to version 2.2.4, a remote image with a malicious attachment can cause denial of service of the host machine running Cosign. This can impact other services on the machine that rely on having memory available such as a Redis database which can result in data loss. It can also impact the availability of other services on the machine that will not be available for the duration of the machine denial. The root cause of this issue is that Cosign reads the attachment from a remote image entirely into memory without checking the size of the attachment first. As such, a large attachment can make Cosign read a large attachment into memory; If the attachments size is larger than the machine has memory available, the machine will be denied of service. The Go runtime will make a SigKill after a few seconds of system-wide denial. This issue can allow a supply-chain escalation from a compromised registry to the Cosign user: If an attacher has compromised a registry or the account of an image vendor, they can include a malicious attachment and hurt the image consumer. Version 2.2.4 contains a patch for the vulnerability.",
        "severity": "Medium",
        "components": {
          "go://github.com/sigstore/cosign:1.12.1": {
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/sigstore/cosign:1.12.1",
                  "full_path": "github.com/sigstore/cosign"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-597867",
        "references": [
          "https://pkg.go.dev/vuln/GO-2024-2718",
          "https://github.com/advisories/GHSA-88jx-383q-w4qc",
          "https://github.com/sigstore/cosign/blob/9bc3ee309bf35d2f6e17f5d23f231a3d8bf580bc/pkg/oci/remote/remote.go#L228-L239",
          "https://github.com/google/go-containerregistry/blob/a0658aa1d0cc7a7f1bcc4a3af9155335b6943f40/pkg/v1/remote/layer.go#L36-L40",
          "https://github.com/sigstore/cosign/security/advisories/GHSA-88jx-383q-w4qc",
          "https://github.com/sigstore/cosign/commit/629f5f8fa672973503edde75f84dcd984637629e",
          "https://github.com/sigstore/cosign/releases/tag/v2.2.4",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-29902"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-28180",
            "cvss_v3_score": "4.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-409"
            ]
          }
        ],
        "summary": "Package jose aims to provide an implementation of the Javascript Object Signing and Encryption set of standards. An attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). This vulnerability has been patched in versions 4.0.1, 3.0.3 and 2.6.3.",
        "severity": "Medium",
        "components": {
          "go://gopkg.in/square/go-jose.v2:2.6.0": {
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://gopkg.in/square/go-jose.v2:2.6.0",
                  "full_path": "gopkg.in/square/go-jose.v2"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-593423",
        "references": [
          "https://github.com/go-jose/go-jose/commit/add6a284ea0f844fd6628cba637be5451fe4b28a",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IJ6LAJJ2FTA2JVVOACCV5RZTOIZLXUNJ/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KXKGNCRU7OTM5AHC7YIYBNOWI742PRMY",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XJDO5VSIAOGT2WP63AXAAWNRSVJCNCRH",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MSOMHDKRPU3A2JEMRODT2IREDFBLVPGS/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I6MMWFBOXJA6ZCXNVPDFJ4XMK5PVG5RG",
          "https://github.com/go-jose/go-jose/commit/f4c051a0653d78199a053892f7619ebf96339502",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JNPMXL36YGS3GQEVI3Q5HKHJ7YAAQXL5",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MSOMHDKRPU3A2JEMRODT2IREDFBLVPGS",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UG5FSEYJ3GP27FZXC5YAAMMEC5XWKJHG/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IJ6LAJJ2FTA2JVVOACCV5RZTOIZLXUNJ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JNPMXL36YGS3GQEVI3Q5HKHJ7YAAQXL5/",
          "https://pkg.go.dev/vuln/GO-2024-2631",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-28180",
          "https://github.com/go-jose/go-jose/commit/0dd4dd541c665fb292d664f77604ba694726f298",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GD2GSBQTBLYADASUBHHZV2CZPTSLIPQJ/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJO2U5ACZVACNQXJ5EBRFLFW6DP5BROY",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GD2GSBQTBLYADASUBHHZV2CZPTSLIPQJ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I6MMWFBOXJA6ZCXNVPDFJ4XMK5PVG5RG/",
          "https://github.com/go-jose/go-jose/security/advisories/GHSA-c5q2-7r4c-mv6g",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJO2U5ACZVACNQXJ5EBRFLFW6DP5BROY/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KXKGNCRU7OTM5AHC7YIYBNOWI742PRMY/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UG5FSEYJ3GP27FZXC5YAAMMEC5XWKJHG",
          "https://github.com/advisories/GHSA-c5q2-7r4c-mv6g",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XJDO5VSIAOGT2WP63AXAAWNRSVJCNCRH/"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-48921",
            "cvss_v3_score": "2.7",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:L/A:N",
            "cwe": [
              "CWE-285",
              "CWE-863"
            ]
          }
        ],
        "summary": "Kyverno is a policy engine designed for Kubernetes. A kyverno ClusterPolicy, ie. \"disallow-privileged-containers,\" can be overridden by the creation of a PolicyException in a random namespace. By design, PolicyExceptions are consumed from any namespace. Administrators may not recognize that this allows users with privileges to non-kyverno namespaces to create exceptions. This vulnerability is fixed in 1.13.0.",
        "severity": "Low",
        "components": {
          "go://github.com/kyverno/kyverno:1.7.5": {
            "fixed_versions": [
              "[1.13.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno:1.7.5",
                  "full_path": "github.com/kyverno/kyverno"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-649315",
        "references": [
          "https://github.com/advisories/GHSA-qjvc-p88j-j9rm",
          "https://github.com/kyverno/kyverno/security/advisories/GHSA-qjvc-p88j-j9rm",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-48921",
          "https://pkg.go.dev/vuln/GO-2024-3230"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-47630",
            "cvss_v3_score": "7.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-345",
              "CWE-200"
            ]
          }
        ],
        "summary": "Kyverno is a policy engine designed for Kubernetes. An issue was found in Kyverno that allowed an attacker to control the digest of images used by Kyverno users. The issue would require the attacker to compromise the registry that the Kyverno users fetch their images from. The attacker could then return an vulnerable image to the the user and leverage that to further escalate their position. As such, the attacker would need to know which images the Kyverno user consumes and know of one of multiple exploitable vulnerabilities in previous digests of the images. Alternatively, if the attacker has compromised the registry, they could craft a malicious image with a different digest with intentionally placed vulnerabilities and deliver the image to the user.  Users pulling their images by digests and from trusted registries are not impacted by this vulnerability. There is no evidence of this being exploited in the wild. The issue has been patched in 1.10.5. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "severity": "High",
        "components": {
          "go://github.com/kyverno/kyverno:1.7.5": {
            "fixed_versions": [
              "[1.10.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno:1.7.5",
                  "full_path": "github.com/kyverno/kyverno"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-537145",
        "references": [
          "https://pkg.go.dev/vuln/GO-2023-2340",
          "https://github.com/kyverno/kyverno/security/advisories/GHSA-3hfq-cx9j-923w",
          "https://github.com/kyverno/kyverno/releases/tag/v1.11.0",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-47630",
          "https://github.com/kyverno/kyverno"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-47281",
            "cvss_v3_score": "7.7",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:H",
            "cwe": [
              "CWE-20",
              "CWE-248"
            ]
          }
        ],
        "summary": "Kyverno is a policy engine designed for cloud native platform engineering teams. In versions 1.14.1 and below, a Denial of Service (DoS) vulnerability exists due to improper handling of JMESPath variable substitutions. Attackers with permissions to create or update Kyverno policies can craft expressions using the {{@}} variable combined with a pipe and an invalid JMESPath function (e.g., {{@ | non_existent_function }}). This leads to a nil value being substituted into the policy structure. Subsequent processing by internal functions, specifically getValueAsStringMap, which expect string values, results in a panic due to a type assertion failure (interface {} is nil, not string). This crashes Kyverno worker threads in the admission controller and causes continuous crashes of the reports controller pod. This is fixed in version 1.14.2.",
        "severity": "High",
        "components": {
          "go://github.com/kyverno/kyverno:1.7.5": {
            "fixed_versions": [
              "[1.14.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno:1.7.5",
                  "full_path": "github.com/kyverno/kyverno"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-711412",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2025-47281",
          "https://github.com/advisories/GHSA-r5p3-955p-5ggq",
          "https://pkg.go.dev/vuln/GO-2025-3823",
          "https://github.com/kyverno/kyverno/commit/cbd7d4ca24de1c55396fc3295e9fc3215832be7c",
          "https://github.com/kyverno/kyverno/security/advisories/GHSA-r5p3-955p-5ggq"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cwe": [
              "CWE-918"
            ]
          }
        ],
        "summary": "Kyverno vulnerable to SSRF via Service Calls",
        "severity": "High",
        "components": {
          "go://github.com/kyverno/kyverno:1.7.5": {
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno:1.7.5",
                  "full_path": "github.com/kyverno/kyverno"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-693972",
        "references": [
          "https://pkg.go.dev/vuln/GO-2025-3615",
          "",
          "https://github.com/advisories/GHSA-459x-q9hg-4gpq",
          "https://github.com/kyverno/kyverno/security/advisories/GHSA-459x-q9hg-4gpq"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2016-2183",
            "cvss_v2_score": "5.0",
            "cvss_v2_vector": "CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-200"
            ]
          }
        ],
        "summary": "The DES and Triple DES ciphers, as used in the TLS, SSH, and IPSec protocols and other protocols and products, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain cleartext data via a birthday attack against a long-duration encrypted session, as demonstrated by an HTTPS session using Triple DES in CBC mode, aka a \"Sweet32\" attack.",
        "severity": "High",
        "components": {
          "go://github.com/kyverno/kyverno:1.7.5": {
            "fixed_versions": [
              "[1.9.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno:1.7.5",
                  "full_path": "github.com/kyverno/kyverno"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-536574",
        "references": [
          "https://github.com/kyverno/kyverno",
          "http://rhn.redhat.com/errata/RHSA-2017-0338.html",
          "https://h20566.www2.hpe.com/hpsc/doc/public/display?docLocale=en_US\u0026docId=emr_na-c05369415",
          "https://security.gentoo.org/glsa/201701-65",
          "http://www.securityfocus.com/archive/1/539885/100/0/threaded",
          "http://kb.juniper.net/InfoCenter/index?page=content\u0026id=JSA10759",
          "https://nakedsecurity.sophos.com/2016/08/25/anatomy-of-a-cryptographic-collision-the-sweet32-attack/",
          "https://www.oracle.com/security-alerts/cpuapr2020.html",
          "http://lists.opensuse.org/opensuse-security-announce/2017-01/msg00068.html",
          "https://www.openssl.org/blog/blog/2016/08/24/sweet32/",
          "http://www-01.ibm.com/support/docview.wss?uid=nas8N1021697",
          "https://kc.mcafee.com/corporate/index?page=content\u0026id=SB10310",
          "https://github.com/karmada-io/karmada/commit/98e655fc552b2987c3f2d2a061007889ce8be536",
          "http://lists.opensuse.org/opensuse-security-announce/2016-09/msg00023.html",
          "https://access.redhat.com/errata/RHSA-2019:1245",
          "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05390849",
          "https://support.f5.com/csp/article/K13167034",
          "http://www.huawei.com/en/psirt/security-advisories/huawei-sa-20170322-01-openssl-en",
          "http://www.securityfocus.com/bid/92630",
          "http://lists.opensuse.org/opensuse-security-announce/2017-02/msg00032.html",
          "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05356388",
          "https://www.vicarius.io/vsociety/posts/cve-2016-2183-detection-sweet32-vulnerability",
          "https://www.vicarius.io/vsociety/posts/cve-2016-2183-mitigate-sweet32-vulnerability",
          "http://lists.opensuse.org/opensuse-security-announce/2017-10/msg00010.html",
          "http://www.oracle.com/technetwork/security-advisory/cpujan2018-3236628.html",
          "https://github.com/karmada-io/karmada/security/advisories/GHSA-7xg2-83f8-39mr",
          "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05385680",
          "https://seclists.org/bugtraq/2018/Nov/21",
          "https://access.redhat.com/errata/RHSA-2017:3240",
          "http://www.securityfocus.com/archive/1/542005/100/0/threaded",
          "http://lists.opensuse.org/opensuse-security-announce/2017-10/msg00011.html",
          "https://kc.mcafee.com/corporate/index?page=content\u0026id=SB10197",
          "http://www.ubuntu.com/usn/USN-3179-1",
          "https://kc.mcafee.com/corporate/index?page=content\u0026id=SB10186",
          "http://www.oracle.com/technetwork/security-advisory/cpuoct2016-2881722.html",
          "http://lists.opensuse.org/opensuse-security-announce/2017-02/msg00003.html",
          "https://access.redhat.com/errata/RHSA-2018:2123",
          "https://www.oracle.com/security-alerts/cpujan2020.html",
          "https://h20566.www2.hpe.com/hpsc/doc/public/display?docLocale=en_US\u0026docId=emr_na-c05369403",
          "https://bugzilla.redhat.com/show_bug.cgi?id=1369383",
          "https://softwaresupport.softwaregrp.com/document/-/facetsearch/document/KM03158613",
          "https://access.redhat.com/articles/2548661",
          "https://ics-cert.us-cert.gov/advisories/ICSMA-18-058-02",
          "https://h20566.www2.hpe.com/hpsc/doc/public/display?docLocale=en_US\u0026docId=emr_na-c05390849",
          "https://www.sigsac.org/ccs/CCS2016/accepted-papers/",
          "http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html",
          "https://blog.cryptographyengineering.com/2016/08/24/attack-of-week-64-bit-ciphers-in-tls/",
          "https://www.oracle.com/security-alerts/cpuoct2020.html",
          "https://access.redhat.com/security/cve/cve-2016-2183",
          "https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2016/august/new-practical-attacks-on-64-bit-block-ciphers-3des-blowfish/",
          "https://security.netapp.com/advisory/ntap-20170119-0001/",
          "https://wiki.opendaylight.org/view/Security_Advisories",
          "https://www.tenable.com/security/tns-2016-20",
          "http://www.debian.org/security/2016/dsa-3673",
          "http://lists.opensuse.org/opensuse-security-announce/2016-09/msg00022.html",
          "https://github.com/kyverno/kyverno/pull/7308",
          "https://github.com/golang/go/issues/41476",
          "https://cert-portal.siemens.com/productcert/pdf/ssa-412672.pdf",
          "http://rhn.redhat.com/errata/RHSA-2017-0336.html",
          "https://access.redhat.com/errata/RHSA-2017:3114",
          "http://www.ubuntu.com/usn/USN-3372-1",
          "https://www.exploit-db.com/exploits/42091/",
          "http://lists.opensuse.org/opensuse-security-announce/2016-10/msg00005.html",
          "https://github.com/ssllabs/ssllabs-scan/issues/387#issuecomment-242514633",
          "https://www.oracle.com/security-alerts/cpujul2020.html",
          "https://access.redhat.com/errata/RHSA-2017:1216",
          "https://access.redhat.com/errata/RHSA-2017:2710",
          "http://lists.opensuse.org/opensuse-security-announce/2016-10/msg00029.html",
          "https://kc.mcafee.com/corporate/index?page=content\u0026id=SB10171",
          "http://lists.opensuse.org/opensuse-security-announce/2016-10/msg00012.html",
          "https://h20566.www2.hpe.com/hpsc/doc/public/display?docLocale=en_US\u0026docId=emr_na-hpesbux03725en_us",
          "https://www.teskalabs.com/blog/teskalabs-bulletin-160826-seacat-sweet32-issue",
          "http://www-01.ibm.com/support/docview.wss?uid=swg21991482",
          "http://lists.opensuse.org/opensuse-security-announce/2017-02/msg00028.html",
          "https://www.mitel.com/en-ca/support/security-advisories/mitel-product-security-advisory-17-0008",
          "http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html",
          "http://rhn.redhat.com/errata/RHSA-2017-0462.html",
          "http://seclists.org/fulldisclosure/2017/Jul/31",
          "http://lists.opensuse.org/opensuse-security-announce/2016-10/msg00011.html",
          "https://access.redhat.com/errata/RHSA-2017:2708",
          "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05369415",
          "https://h20566.www2.hpe.com/hpsc/doc/public/display?docLocale=en_US\u0026docId=emr_na-c05390722",
          "http://www.securityfocus.com/bid/95568",
          "http://www.splunk.com/view/SP-CAAAPUE",
          "http://www.ubuntu.com/usn/USN-3087-1",
          "https://access.redhat.com/errata/RHSA-2020:0451",
          "https://security.gentoo.org/glsa/201707-01",
          "http://www.securityfocus.com/archive/1/archive/1/539885/100/0/threaded",
          "http://www.ubuntu.com/usn/USN-3087-2",
          "http://www.oracle.com/technetwork/topics/security/linuxbulletinoct2016-3090545.html",
          "http://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html",
          "https://github.com/kyverno/kyverno/security/advisories/GHSA-hgv6-w7r3-w4qw",
          "https://www.arista.com/en/support/advisories-notices/security-advisories/1749-security-advisory-24",
          "https://access.redhat.com/errata/RHSA-2019:2859",
          "http://www-01.ibm.com/support/docview.wss?uid=swg21995039",
          "https://nvd.nist.gov/vuln/detail/CVE-2016-2183",
          "https://access.redhat.com/errata/RHSA-2017:3113",
          "http://lists.opensuse.org/opensuse-security-announce/2018-02/msg00032.html",
          "https://github.com/kyverno/kyverno/releases/tag/v1.9.5",
          "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05390722",
          "http://www.securityfocus.com/archive/1/archive/1/540341/100/0/threaded",
          "https://sweet32.info/",
          "https://www.tenable.com/security/tns-2016-16",
          "http://seclists.org/fulldisclosure/2017/May/105",
          "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05349499",
          "http://www.securityfocus.com/archive/1/archive/1/541104/100/0/threaded",
          "https://bto.bluecoat.com/security-advisory/sa133",
          "https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html",
          "https://github.com/karmada-io/karmada/issues/4191",
          "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05323116",
          "https://www.tenable.com/security/tns-2017-09",
          "http://www.securityfocus.com/archive/1/archive/1/542005/100/0/threaded",
          "http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html",
          "http://www.securityfocus.com/archive/1/540341/100/0/threaded",
          "https://github.com/karmada-io/karmada",
          "http://www.splunk.com/view/SP-CAAAPSV",
          "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05302448",
          "http://lists.opensuse.org/opensuse-security-announce/2016-09/msg00024.html",
          "http://lists.opensuse.org/opensuse-security-announce/2016-09/msg00031.html",
          "https://www.oracle.com/security-alerts/cpuoct2021.html",
          "http://www.securityfocus.com/archive/1/541104/100/0/threaded",
          "https://kc.mcafee.com/corporate/index?page=content\u0026id=SB10215",
          "https://h20566.www2.hpe.com/hpsc/doc/public/display?docLocale=en_US\u0026docId=emr_na-hpesbgn03765en_us",
          "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05369403",
          "https://www.ietf.org/mail-archive/web/tls/current/msg04560.html",
          "https://www.tenable.com/security/tns-2016-21",
          "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05309984",
          "https://h20566.www2.hpe.com/hpsc/doc/public/display?docLocale=en_US\u0026docId=emr_na-c05385680",
          "http://lists.opensuse.org/opensuse-security-announce/2017-05/msg00076.html",
          "http://www.securitytracker.com/id/1036696",
          "https://access.redhat.com/errata/RHSA-2017:2709",
          "http://www.ubuntu.com/usn/USN-3198-1",
          "https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA40312",
          "http://www.ubuntu.com/usn/USN-3194-1",
          "https://security.gentoo.org/glsa/201612-16",
          "https://h20566.www2.hpe.com/hpsc/doc/public/display?docLocale=en_US\u0026docId=emr_na-c05302448",
          "https://nodejs.org/en/blog/vulnerability/september-2016-security-releases/",
          "http://lists.opensuse.org/opensuse-security-announce/2016-10/msg00021.html",
          "http://lists.opensuse.org/opensuse-security-announce/2016-10/msg00013.html",
          "http://lists.opensuse.org/opensuse-security-announce/2017-02/msg00023.html",
          "http://www.securityfocus.com/archive/1/archive/1/540129/100/0/threaded",
          "https://github.com/karmada-io/karmada/commit/c3c376605403e07ca0ed2dc39c9e0f3c38f8e29d",
          "http://www.oracle.com/technetwork/topics/security/ovmbulletinoct2016-3090547.html",
          "https://security.netapp.com/advisory/ntap-20160915-0001/",
          "http://www.ubuntu.com/usn/USN-3270-1",
          "http://rhn.redhat.com/errata/RHSA-2017-0337.html",
          "https://access.redhat.com/errata/RHSA-2017:3239",
          "https://softwaresupport.softwaregrp.com/document/-/facetsearch/document/KM03286178"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-34091",
            "cvss_v3_score": "6.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "NVD-CWE-noinfo",
              "CWE-285"
            ]
          }
        ],
        "summary": "Kyverno is a policy engine designed for Kubernetes. In versions of Kyverno prior to 1.10.0, resources which have the `deletionTimestamp` field defined can bypass validate, generate, or mutate-existing policies, even in cases where the `validationFailureAction` field is set to `Enforce`. This situation occurs as resources pending deletion were being consciously exempted by Kyverno, as a way to reduce processing load as policies are typically not applied to objects which are being deleted. However, this could potentially result in allowing a malicious user to leverage the Kubernetes finalizers feature by setting a finalizer which causes the Kubernetes API server to set the `deletionTimestamp` and then not completing the delete operation as a way to explicitly to bypass a Kyverno policy. Note that this is not applicable to Kubernetes Pods but, as an example, a Kubernetes Service resource can be manipulated using an indefinite finalizer to bypass policies. This is resolved in Kyverno 1.10.0. There is no known workaround.",
        "severity": "Medium",
        "components": {
          "go://github.com/kyverno/kyverno:1.7.5": {
            "fixed_versions": [
              "[1.10.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno:1.7.5",
                  "full_path": "github.com/kyverno/kyverno"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-521217",
        "references": [
          "https://pkg.go.dev/vuln/GO-2023-1819",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-34091",
          "https://github.com/kyverno/kyverno/security/advisories/GHSA-hq4m-4948-64cc",
          "https://github.com/kyverno/kyverno/releases/tag/v1.10.0",
          "https://github.com/kyverno/kyverno"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-46342",
            "cvss_v3_score": "8.2",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:N/I:H/A:H",
            "cwe": [
              "NVD-CWE-noinfo",
              "CWE-1287"
            ]
          }
        ],
        "summary": "Kyverno is a policy engine designed for cloud native platform engineering teams. Prior to versions 1.13.5 and 1.14.0, it may happen that policy rules using namespace selector(s) in their match statements are mistakenly not applied during admission review request processing due to a missing error propagation in function `GetNamespaceSelectorsFromNamespaceLister` in `pkg/utils/engine/labels.go`. As a consequence, security-critical mutations and validations are bypassed, potentially allowing attackers with K8s API access to perform malicious operations. This issue has been patched in versions 1.13.5 and 1.14.0.",
        "severity": "High",
        "components": {
          "go://github.com/kyverno/kyverno:1.7.5": {
            "fixed_versions": [
              "[1.13.5]",
              "[1.14.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno:1.7.5",
                  "full_path": "github.com/kyverno/kyverno"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-695215",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2025-46342",
          "https://pkg.go.dev/vuln/GO-2025-3652",
          "https://github.com/kyverno/kyverno/security/advisories/GHSA-jrr2-x33p-6hvc",
          "https://github.com/advisories/GHSA-jrr2-x33p-6hvc",
          "https://github.com/kyverno/kyverno/commit/3ff923b7756e1681daf73849954bd88516589194"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-24534",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-400"
            ]
          }
        ],
        "summary": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.8]",
              "[1.20.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-513415",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-24534",
          "https://security.gentoo.org/glsa/202311-09",
          "https://go.dev/cl/481994",
          "https://pkg.go.dev/vuln/GO-2023-1704",
          "https://groups.google.com/g/golang-announce/c/Xdv6JL9ENs8",
          "https://security.netapp.com/advisory/ntap-20230526-0007/",
          "https://go.dev/issue/58975"
        ],
        "extended_information": {
          "short_description": "Improper MIME header parsing in Go's `net/textproto` package can lead to memory exhaustion and denial of service when processing a crafted header.",
          "full_description": "`net/textproto` is a Go standard library package that offers functionality for parsing and serializing textual protocols used in network communications, such as HTTP, SMTP, NNTP, and FTP, by providing methods for reading and writing lines, headers, and MIME-style messages in a way that handles common protocol-specific quirks and variations.\nA vulnerability was identified in the `ReadMIMEHeader()` function within the `net/textproto` package, whereby certain input data patterns (large amounts of LF characters) can cause the function to allocate an excessive amount of memory. For instance, a header with a large number of newline characters may cause the function to over-allocate memory, resulting in memory exhaustion and a denial of service. Attackers could exploit this vulnerability by crafting small requests, making it a relatively easy target for malicious activity.\n\nThis issue is dangerous since even a very simple Go HTTP server is remotely vulnerable to DoS.\n\nVulnerable code example -\n```go\npackage main\n\nimport (\n    \"fmt\"\n    \"net/http\"\n)\n\nfunc hello(w http.ResponseWriter, req *http.Request) {\n    fmt.Fprintf(w, \"hello\\n\")\n}\n\nfunc main() {\n    http.HandleFunc(\"/hello\", hello)\n    http.ListenAndServe(\":80\", nil)\n}\n```",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "Go HTTP servers (with no special configurations) are vulnerable to this attack remotely"
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "An attacker can easily craft a request with a significant amount of newline characters in any MIME header in order to trigger the issue."
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "This issue leads to memory exhaustion and potential denial of service of the HTTP server"
            }
          ],
          "remediation": "##### Deployment mitigations\n\nDefine a `systemd service` and limit the memory available to the application. It will prevent it from crashing the host system.\nTo do that, create a `.service` file in the `/etc/systemd/system/` directory and fill it in following the template given here:\n```\n[Unit]\nDescription = My HTTP server\nRequires    = my_http_app.socket\nAfter       = multi-user.target\n\n[Service]\nUser                         = www-user\nGroup                      = www-user\nWorkingDirectory  = /var/my_http_server\nExecStart                = /var/my_http_server/bin/my-server\nExecReload            = /bin/kill -HUP $MAINPID\nRestart                    = always\nNotifyAccess         = main\nKillMode                 = process\nNonBlocking          = true\nMemoryMax           = 20G\n```\nwith the according socket file (`my_http_app.socket`):\n```\n[Unit]\nDescription=My HTTP server socket\n\n[Socket]\nListenStream = 80\nBindIPv6Only = both\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24785",
            "cvss_v3_score": "5.4",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N",
            "cwe": [
              "CWE-150"
            ]
          }
        ],
        "summary": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.21.8]",
              "[1.22.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616746",
        "references": [
          "http://www.openwall.com/lists/oss-security/2024/03/08/4",
          "https://go.dev/cl/564196",
          "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg",
          "https://security.netapp.com/advisory/ntap-20240329-0008/",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24785",
          "https://go.dev/issue/65697",
          "https://pkg.go.dev/vuln/GO-2024-2610"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45289",
            "cvss_v3_score": "4.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
            "cwe": [
              "CWE-212"
            ]
          }
        ],
        "summary": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.21.8]",
              "[1.22.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616747",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45289",
          "https://security.netapp.com/advisory/ntap-20240329-0006/",
          "https://go.dev/issue/65065",
          "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg",
          "https://go.dev/cl/569340",
          "https://pkg.go.dev/vuln/GO-2024-2600",
          "http://www.openwall.com/lists/oss-security/2024/03/08/4"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-24538",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-94"
            ]
          }
        ],
        "summary": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
        "severity": "Critical",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.8]",
              "[1.20.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-513412",
        "references": [
          "https://security.netapp.com/advisory/ntap-20241115-0007/",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-24538",
          "https://groups.google.com/g/golang-announce/c/Xdv6JL9ENs8",
          "https://pkg.go.dev/vuln/GO-2023-1703",
          "https://go.dev/issue/59234",
          "https://security.gentoo.org/glsa/202311-09",
          "https://go.dev/cl/482079"
        ],
        "extended_information": {
          "short_description": "Missing delimiter escaping in Go html/template leads to JavaScript code injection when using Go template actions inside JavaScript template literals.",
          "full_description": "Go's [html/template](https://pkg.go.dev/html/template) package implements data-driven templates for generating HTML output safe against code injection.\nIt was discovered that the template package does not properly consider backticks as JavaString string delimiters, and do not escape them as expected.\nTherefore, if a Go template contains a Go template action (for example `{{.}}`) within a JavaScript template literal (any literal delimited by a backtick \\` character) and an attacker can control the output of the Go template action, then the attacker can output the backtick character from the action which will escape the JavaScript template literal and allow arbitrary JavaScript code injection\n\nVulnerable template example -\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003ctitle\u003eUnsafe Template Example\u003c/title\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003c!-- \n        Vulnerable Implementation\n        Go template action within a JavaScript template literal\n        Assume payload: `;alert(1);//\n    --\u003e\n    \u003cscript\u003e\n        let data = `{{.}}`;\n    \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\nViewing the above rendered template in a browser (assuming the attacker payload was \"\\`;alert(1);//\") will cause an `alert` popup.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "The CVSS critical score (9.8) does not take into account the per-target research that must be done to exploit this vulnerability and the fact that the vulnerability is most likely to cause an XSS (JavaScript running in a browser) and not unsandboxed code execution",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "An attacker can inject arbitrary JavaScript code simply by inserting a backtick character to escape the JavaScript template literal"
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "Most likely, the rendered template will be used in a webpage that is viewed in a browser. In this case, exploitation will result in XSS (JavaScript code injection in the browser) which is less severe than unsandboxed RCE. In cases where the rendered template is directly used in a Node.js application or Electron application, exploitation may lead to unsandboxed RCE.",
              "is_positive": true
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "A vulnerable Go template must be rendered using `Template.Execute` or `Template.ExecuteTemplate`",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The attacker must be able to control the output of a Go template action which is wrapped with backticks (meaning - it is treated as a JavaScript template literal)",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24790",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "NVD-CWE-noinfo",
              "CWE-180"
            ]
          }
        ],
        "summary": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
        "severity": "Critical",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.21.11]",
              "[1.22.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-606108",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24790",
          "https://www.cve.org/CVERecord?id=CVE-2024-24790",
          "https://go.dev/cl/590316",
          "https://github.com/traefik/traefik/releases/tag/v2.11.4",
          "http://www.openwall.com/lists/oss-security/2024/06/04/1",
          "https://go.dev/issue/67680",
          "https://pkg.go.dev/vuln/GO-2024-2917",
          "https://pkg.go.dev/vuln/GO-2024-2887",
          "https://github.com/advisories/GHSA-7jmw-8259-q9jx",
          "https://github.com/traefik/traefik/security/advisories/GHSA-7jmw-8259-q9jx",
          "https://groups.google.com/g/golang-announce/c/XbxouI9gY7k/m/TuoGEhxIEwAJ",
          "https://github.com/traefik/traefik/releases/tag/v3.0.2"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45284",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cwe": [
              "CWE-41",
              "NVD-CWE-noinfo"
            ]
          }
        ],
        "summary": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.20.11]",
              "[1.21.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-535836",
        "references": [
          "https://go.dev/cl/540277",
          "https://go.dev/issue/63713",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45284",
          "https://pkg.go.dev/vuln/GO-2023-2186",
          "https://groups.google.com/g/golang-announce/c/4tU8LZfBFkY"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-24540",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-74",
              "CWE-77",
              "NVD-CWE-noinfo"
            ]
          }
        ],
        "summary": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
        "severity": "Critical",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.9]",
              "[1.20.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-520141",
        "references": [
          "https://security.netapp.com/advisory/ntap-20241115-0008/",
          "https://pkg.go.dev/vuln/GO-2023-1752",
          "https://groups.google.com/g/golang-announce/c/MEb0UyuSMsU",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-24540",
          "https://go.dev/issue/59721",
          "https://go.dev/cl/491616"
        ],
        "extended_information": {
          "short_description": "Insufficient filtering in Go's `html/template` leads to XSS when executing crafted templates.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The attackers must find a remote input that propagates into a Go template that is subsequently rendered with `Template.Execute` or `Template.ExecuteTemplate`. This is highly unlikely and is considered a bad practice regardless of this vulnerability.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-29405",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-88",
              "CWE-74"
            ]
          }
        ],
        "summary": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
        "severity": "Critical",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.10]",
              "[1.20.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-521541",
        "references": [
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NZ2O6YCO2IZMZJELQGZYR2WAUNEDLYV6/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XBS3IIK6ADV24C5ULQU55QLT2UE762ZX/",
          "https://security.gentoo.org/glsa/202311-09",
          "https://go.dev/issue/60306",
          "https://security.netapp.com/advisory/ntap-20241206-0003/",
          "https://go.dev/cl/501224",
          "https://groups.google.com/g/golang-announce/c/q5135a9d924/m/j0ZoAJOHAwAJ",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-29405",
          "https://pkg.go.dev/vuln/GO-2023-1842"
        ],
        "extended_information": {
          "short_description": "Insufficient validation in Go's linker leads to build-time code execution when compiling untrusted source code.",
          "full_description": "Go supports compiling \"cgo\" binaries, which allow Go code to call C code.\nAs part of \"cgo\" support, Go source code files can supply flags to the GCC compiler and linker by using the `#cgo CFLAGS` and `#cgo LDFLAGS` directives, respectively.\nSince some GCC flags can directly lead to unwanted code execution in build time (for example the `-wrapper` flag) the Go compiler maintains a whitelist of allowed GCC flags.\n\nIt was discovered that arbitrary GCC flags can be smuggled to the build process, through the `#cgo LDFLAGS` directive.\nFor example, building the following code will smuggle the `--nosuchoption` flag into the build process -\n```go\npackage main\n// #cgo LDFLAGS: -L \"./ -Wl,--nosuchoption\"\nimport \"C\"\nfunc main() {}\n```\n\nAttackers can exploit this issue by making victims compile untrusted Go code (ex. with `go build` or `go get`). Arbitrary code execution will happen as soon as the untrusted Go code is built.",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Code execution"
            },
            {
              "name": "The issue has an exploit published",
              "description": "Published exploit demonstrates arbitrary flag injection"
            },
            {
              "name": "Exploiting the issue requires the user to interact with the vulnerable software",
              "description": "A user must compile untrusted Go code in order to trigger the vulnerability",
              "is_positive": true
            }
          ],
          "remediation": "##### Deployment mitigations\n\nDisable \"cgo\" support by running the `go` tool with `CGO_ENABLED=0` -\n```bash\nCGO_ENABLED=0 go build .\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-2879",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-770"
            ]
          }
        ],
        "summary": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.18.7]",
              "[1.19.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-257610",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2022-2879",
          "https://pkg.go.dev/vuln/GO-2022-1037",
          "https://groups.google.com/g/golang-announce/c/xtuG5faxtaU",
          "https://go.dev/cl/439355",
          "https://security.gentoo.org/glsa/202311-09",
          "https://go.dev/issue/54853"
        ],
        "extended_information": {
          "short_description": "Insufficient input validation in Golang archive/tar enables attackers to perform denial of service via a maliciously crafted tar archive.",
          "full_description": "Golang's [tar](https://pkg.go.dev/archive/tar) module provides access to reading and writing tar archives.\n\nIn the archive/tar module, the functions `Reader.parsePax`, and `Reader.next` do not limit the maximum size of file header's, which could cause an out of memory error when crafted files are parsed. \n\nAttackers can trigger the vulnerability by uploading a maliciously crafted tar archive with large headers, which subsequently needs to get processed via `tar.NewReader` and `Reader.Next`.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker has to be able to upload tar archives which subsequently get processed via `tar.NewReader` and `Reader.Next`",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "Test code contains a DoS PoC"
            },
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "It is likely that Golang's tar module will be used to process untrusted tar archives"
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-0913",
            "cvss_v3_score": "5.5",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "CWE-59"
            ]
          }
        ],
        "summary": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.23.10]",
              "[1.24.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-704403",
        "references": [
          "https://go.dev/cl/672396",
          "https://go.dev/issue/73702",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-0913",
          "https://pkg.go.dev/vuln/GO-2025-3750",
          "https://groups.google.com/g/golang-announce/c/ufZ8WpEsA3A"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22866",
            "cvss_v3_score": "4.0",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "cwe": [
              "CWE-208"
            ]
          }
        ],
        "summary": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.22.12]",
              "[1.23.6]",
              "[1.24.0-rc.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-669928",
        "references": [
          "https://security.netapp.com/advisory/ntap-20250221-0002/",
          "https://pkg.go.dev/vuln/GO-2025-3447",
          "https://go.dev/issue/71383",
          "https://go.dev/cl/643735",
          "https://groups.google.com/g/golang-announce/c/xU1ZCHUZw3k",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22866"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-24532",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cwe": [
              "CWE-682"
            ]
          }
        ],
        "summary": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.7]",
              "[1.20.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-427380",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-24532",
          "https://go.dev/issue/58647",
          "https://groups.google.com/g/golang-announce/c/3-TpUx48iQY",
          "https://go.dev/cl/471255",
          "https://pkg.go.dev/vuln/GO-2023-1621"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24787",
            "cvss_v3_score": "6.4",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"
          }
        ],
        "summary": "On Darwin, building a Go module which contains CGO can trigger arbitrary code execution when using the Apple version of ld, due to usage of the -lto_library flag in a \"#cgo LDFLAGS\" directive.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.21.10]",
              "[1.22.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616754",
        "references": [
          "https://go.dev/cl/583815",
          "http://www.openwall.com/lists/oss-security/2024/05/08/3",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24787",
          "https://go.dev/issue/67119",
          "https://pkg.go.dev/vuln/GO-2024-2825",
          "https://security.netapp.com/advisory/ntap-20240531-0006/",
          "https://groups.google.com/g/golang-announce/c/wkkO4P9stm0"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-2880",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "CWE-444"
            ]
          }
        ],
        "summary": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.18.7]",
              "[1.19.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-257609",
        "references": [
          "https://security.gentoo.org/glsa/202311-09",
          "https://pkg.go.dev/vuln/GO-2022-1038",
          "https://go.dev/issue/54663",
          "https://go.dev/cl/432976",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-2880",
          "https://groups.google.com/g/golang-announce/c/xtuG5faxtaU"
        ],
        "extended_information": {
          "short_description": "Insufficient input validation in Golang net/http/httputil and net/url may enable attackers to perform filter bypass \u0026 parameter smuggling.",
          "full_description": "Golang's [net/http/httputil](https://pkg.go.dev/net/http/httputil) package provides HTTP utility functions, complementing the ones in Golang's net/http package.\n\nGolang's [net/http](https://pkg.go.dev/net/http) package provides HTTP client and server implementations in Golang.\n\nGolang's [net/url](https://pkg.go.dev/net/url) package is used for parsing URLs and query escaping.\n\nIn Go 1.17, URL parsing was changed to reject keys containing a semicolon. But despite the function `net/url.ParseQuery` being changed to raise an error when given a parameter with `;`, the function `net/url.URL.Query`, which calls the `net/url.ParseQuery`, ignores any error returned by it. Furthermore, the function `net/http/httputils.NewSingleHostReverseProxy` does not parse the query at all and sends the raw query to the backend.\n\nThis means that when there's a version discrepancy between the frontend and the backend - where the frontend uses a Go 1.17 or later, and the backend uses Go 1.16.x or earlier - it is possible for attackers to use parameter smuggling in order to bypass possible filters.\n\nTake for example the fictional website `https://mysite`, which uses Go 1.18 for its frontend and Go 1.16 for its backend. When going to `https://mysite/home`, the user's name is added as a parameter, e.g.  `https://mysite/home?name=sam`. In addition to the `name` parameter, it is possible to add a `role` parameter, which can be set to either `user` or `admin`. When the parameter is set to `admin` the frontend checks whether the user's name is that of an admin or not before forwarding the query to the backend.\n\nHowever,  when an attacker sends a request such as `https://mysite/home?role=admin;\u0026name=regularuser`, and the frontend parses it using `net/url.URL.Query`, the function will only return the `name=regularuser` parameter and raise no error. Since the frontend deems the request valid, it will pass it to the backend using `net/http/httputils.NewSingleHostReverseProxy`, which will pass the raw query instead of the parsed query from `net/url.URL.Query` to the backend. When the backend parses the query, both `name=regularuser` and `role=admin` will be returned. Thus, the attacker bypassed the frontend's filter.\n\nThe vulnerability does not exist if the frontend and the backend both use Go before 1.17 or Go after 1.17.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "A simple addition of the `;` character to a vulnerable parameter can lead to successful exploitation.\nThere are several exploitation examples of this issue online and it is trivial to create a new one when a vulnerable application is found."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "- The attacker has to know that the frontend/proxy and backend of the target both use Golang, and that the frontend/proxy use Go 1.17 or later, while the backend uses an earlier version of Go (before 1.17).\n- They also need to know that there isn't any additional sanitization on the URL before parsing the query or sending it to the backend through the proxy.\n- The attacker should find a vulnerable parameter that can be exploited with a meaningful applicative impact.",
              "is_positive": true
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The impact of the vulnerability depends on the parameters that can be given to the URL and their effects.",
              "is_positive": true
            },
            {
              "name": "The issue has a detailed technical explanation published, that can aid in exploit development"
            }
          ],
          "remediation": "##### Development mitigations\n\nUse `net/url.ParseQuery` instead of `net/url.URL.Query`, and check for errors returned by it."
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45283",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-22",
              "CWE-41"
            ]
          }
        ],
        "summary": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.20.11]",
              "[1.20.12]",
              "[1.21.4]",
              "[1.21.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-535837",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45283",
          "https://go.dev/cl/540277",
          "http://www.openwall.com/lists/oss-security/2023/12/05/2",
          "https://go.dev/issue/64028",
          "https://go.dev/cl/541175",
          "https://go.dev/issue/63713",
          "https://pkg.go.dev/vuln/GO-2023-2185",
          "https://security.netapp.com/advisory/ntap-20231214-0008/",
          "https://groups.google.com/g/golang-dev/c/6ypN5EjibjM/m/KmLVYH_uAgAJ",
          "https://groups.google.com/g/golang-announce/c/4tU8LZfBFkY"
        ],
        "extended_information": {
          "short_description": "Insufficient input validation in Golang allows attackers to perform path traversal when parsing Windows paths.",
          "full_description": "[Go](https://go.dev/) is an open source programming language that makes it easy to build simple, reliable, and efficient software.\nThe [`path/filepath`](https://pkg.go.dev/path/filepath) package of the Go programming language is used to parse and handle paths. This package takes into consideration the operating system.\nThe `Clean()` function in the  `path/filepath` package is used to clean up a given path and return a shorter, cleaned version of the path. \nOn Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system.\n\nIt was discovered that when running Go applications on Windows, the `path/filepath` package does not recognize paths with a \\??\\ prefix as special. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fixing, `Clean()` could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. The vulnerability affects most of the functions of the `path/filepath` package, not just `Clean()`, this could lead to unexpected results when relying on the package, including path traversal which may lead to arbitrary file-read/file-write.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The security impact of exploiting this vulnerability highly depends on the 1st-party code that uses a `path/filepath` function.\nFor example, suppose the code uses `join()` to create an attacker-named externally writable file in the current directory. In that case, the attacker can create the file in an arbitrary file path, leading to arbitrary file overwrite.",
              "is_positive": true
            },
            {
              "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
              "description": "The advisory contains an explanation of how to trigger the vulnerability."
            },
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability as well as the impact.",
              "is_positive": true
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "For the vulnerability to be exploitable, an attacker must find a remote service that takes user input and specifically opens a file after using a `path/filepath` package function, in which case the attacker may use it to open arbitrary files.",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The vulnerability only affects the Windows operating system.",
              "is_positive": true
            }
          ],
          "remediation": "##### Development mitigations\n\nReplace any path usage of `\\??\\` with the equivalent `\\\\?\\` which is handled properly by `Clean` and other path-related APIs.\n\nFor example -\n```go\n\tmy_path := `\\??\\my\\path`\n\tsafe_path := strings.Replace(my_path, `\\??\\`, `\\\\?\\`, -1)\n\t# safe_path can be used with Clean() etc.\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22871",
            "cvss_v3_score": "9.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cwe": [
              "CWE-1395",
              "CWE-444"
            ]
          }
        ],
        "summary": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
        "severity": "Critical",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.23.8]",
              "[1.24.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-692219",
        "references": [
          "https://github.com/traefik/traefik/releases/tag/v3.3.6",
          "https://go.dev/issue/71988",
          "https://groups.google.com/g/golang-announce/c/Y2uBTVKjBQk",
          "https://pkg.go.dev/vuln/GO-2025-3563",
          "https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2",
          "https://go.dev/cl/652998",
          "https://github.com/traefik/traefik/security/advisories/GHSA-5423-jcjm-2gpv",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22871",
          "http://www.openwall.com/lists/oss-security/2025/04/04/4",
          "https://github.com/traefik/traefik/releases/tag/v2.11.24",
          "https://github.com/advisories/GHSA-5423-jcjm-2gpv"
        ],
        "extended_information": {
          "short_description": "Insufficient input validation in Go's net/http may lead to request smuggling when parsing HTTP requests.",
          "full_description": "The `net/http` package in Go is used for handling HTTP requests and responses.\nThe HTTP protocol uses `CRLF` characters (`\\r\\n`) as line terminators, and it does not allow bare LF (cases where only `\\n` is present, meaning partial `CRLF`) to be used in chunked encoding.\nIn HTTP chunked transfer encoding, the `chunk-size` is a value indicating the number of bytes in the subsequent data chunk.\n\nThe `net/http` library does not reject these bare `LF` characters, but instead allows them in a `chunk-size` line, which may lead to request smuggling under the right conditions:\n\n1. The reverse proxy allows bare `LF` characters and doesn't interpret them as line terminators.\n\n2. The backend server allows bare `LF` characters and interprets them as line terminators.\n\nWith the above configuration, HTTP requests reach the backend server, where they are split due to the interpretation of the bare LF as a line terminator. Thus, the smuggled request is processed as an additional individual request.\n\nFor the backend server, there are such servers, for example, `Nginx` or anything that uses Go's `net/http`,  which is unpatched to this vuln (after this patch, Go's `net/http` completely rejects bare LF).\n\nHowever, for reverse proxy, there is no such known proxy (including `Nginx`, `Traefik`). Most known proxies either disallow Bare LF or treat it as a line terminator.\n\nHTTP Request Smuggling is a web security vulnerability where conflicting interpretations of HTTP specifications by different front-end and back-end servers can lead to request manipulation by attackers.\nThis type of attack can lead to the following impacts: DoS, SSRF, XXS, data leakage, cache poisoning, session manipulation, security bypass, and business logic abuse.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "The vulnerability can be remotely exploited by sending a crafted HTTP request."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "For the vulnerability to be exploitable, both the reverse proxy and the backend server should allow for bare LF characters to be used in chunk-size lines in an HTTP request. Specifically, the backend server should interpret the bare LF character as a line terminator, while the reverse proxy shouldn't.",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "The attacker needs to simply inject CRLF characters to the `Origin` header of the HTTP response, to cause the response to be splitted."
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The impact of HTTP request smuggling vulnerabilities always depends on the context, and specifically, which security check is bypassed in the front-end proxy via the smuggling. The smuggling may allow an attacker to bypass security controls, gain unauthorized access to sensitive data, and possibly compromise other application users.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24791",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
          }
        ],
        "summary": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail. An attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.21.12]",
              "[1.22.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616759",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24791",
          "https://go.dev/issue/67555",
          "https://groups.google.com/g/golang-dev/c/t0rK-qHBqzY/m/6MMoAZkMAgAJ",
          "https://go.dev/cl/591255",
          "https://pkg.go.dev/vuln/GO-2024-2963"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-41716",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "NVD-CWE-Other",
              "CWE-158"
            ]
          }
        ],
        "summary": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.18.8]",
              "[1.19.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-260471",
        "references": [
          "https://go.dev/issue/56284",
          "https://groups.google.com/g/golang-announce/c/mbHY1UY3BaM/m/hSpmRzk-AgAJ",
          "https://pkg.go.dev/vuln/GO-2022-1095",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-41716",
          "https://go.dev/cl/446916"
        ],
        "extended_information": {
          "short_description": "Insufficient input validation in Golang allows attackers to set arbitrary environment variables.",
          "full_description": "[Golang](https://go.dev/) is a statically typed, compiled programming language.\n\nIt was discovered that due to insufficient checks in `syscall.StartProcess` and `os/exec.Cmd`, an attacker can overwrite arbitrary environment variables.\n\nThe vulnerability only applies to Windows systems, as an attacker needs to make use of the `NUL` value.\n\nAn example:\nThe environment variable string `A=B\\x00C=D` will set the environment variables `A=B` and `C=D`.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "When a remote attacker has access to set environment variables through a network endpoint that takes user input- this vulnerability will also be remotely exploitable."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The code needs to use user input as an environment variable to trigger this vulnerability.",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "This only applies to Windows systems.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-4673",
            "cvss_v3_score": "6.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N",
            "cwe": [
              "CWE-201"
            ]
          }
        ],
        "summary": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.23.10]",
              "[1.24.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-704401",
        "references": [
          "https://groups.google.com/g/golang-announce/c/ufZ8WpEsA3A",
          "https://go.dev/cl/679257",
          "https://go.dev/issue/73816",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-4673",
          "https://pkg.go.dev/vuln/GO-2025-3751"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-4674",
            "cvss_v3_score": "8.6",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
            "cwe": [
              "CWE-73"
            ]
          }
        ],
        "summary": "The go command may execute unexpected commands when operating in untrusted VCS repositories. This occurs when possibly dangerous VCS configuration is present in repositories. This can happen when a repository was fetched via one VCS (e.g. Git), but contains metadata for another VCS (e.g. Mercurial). Modules which are retrieved using the go command line, i.e. via \"go get\", are not affected.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.23.11]",
              "[1.24.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-712293",
        "references": [
          "https://go.dev/issue/74380",
          "https://groups.google.com/g/golang-announce/c/gTNJnDXmn34",
          "https://go.dev/cl/686515",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-4674",
          "https://pkg.go.dev/vuln/GO-2025-3828"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-45336",
            "cvss_v3_score": "6.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "cwe": [
              "CWE-116"
            ]
          }
        ],
        "summary": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com. In the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.22.11]",
              "[1.23.5]",
              "[1.24.0-rc.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-668447",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-45336",
          "https://groups.google.com/g/golang-dev/c/CAWXhan3Jww/m/bk9LAa-lCgAJ",
          "https://groups.google.com/g/golang-dev/c/bG8cv1muIBM/m/G461hA6lCgAJ",
          "https://go.dev/issue/70530",
          "https://go.dev/cl/643100",
          "https://security.netapp.com/advisory/ntap-20250221-0003/",
          "https://pkg.go.dev/vuln/GO-2025-3420"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24789",
            "cvss_v3_score": "5.5",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "CWE-390",
              "NVD-CWE-noinfo"
            ]
          }
        ],
        "summary": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.21.11]",
              "[1.22.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616756",
        "references": [
          "https://go.dev/cl/585397",
          "http://www.openwall.com/lists/oss-security/2024/06/04/1",
          "https://pkg.go.dev/vuln/GO-2024-2888",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24789",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U5YAEIA6IUHUNGJ7AIXXPQT6D2GYENX7/",
          "https://security.netapp.com/advisory/ntap-20250131-0008/",
          "https://go.dev/issue/66869",
          "https://groups.google.com/g/golang-announce/c/XbxouI9gY7k/m/TuoGEhxIEwAJ"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-47907",
            "cvss_v3_score": "7.0",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:L",
            "cwe": [
              "CWE-362"
            ]
          }
        ],
        "summary": "Cancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.23.12]",
              "[1.24.6]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-713818",
        "references": [
          "https://groups.google.com/g/golang-announce/c/x5MKroML2yM",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-47907",
          "https://pkg.go.dev/vuln/GO-2025-3849",
          "https://go.dev/cl/693735",
          "https://go.dev/issue/74831"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-41720",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-22"
            ]
          }
        ],
        "summary": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.18.9]",
              "[1.19.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-263271",
        "references": [
          "https://go.dev/issue/56694",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-41720",
          "https://go.dev/cl/455716",
          "https://groups.google.com/g/golang-announce/c/L_3rmdT0BMU/m/yZDrXjIiBQAJ",
          "https://pkg.go.dev/vuln/GO-2022-1143"
        ],
        "extended_information": {
          "short_description": "Insufficient input validation in Golang allows attackers to perform path traversal via os.DirFS and http.dir.",
          "full_description": "[Golang](https://go.dev/) is a statically typed, compiled programming language.\n\nDue to insufficient checks in `os.DirFS` and `http.dir`, an attacker can perform path traversal and access any files on the system (according to the user's access).\n\nThere are multiple ways to trigger this vulnerability -\n\nOn Linux, opening an empty directory tree (`\"\"`) will be mistakenly treated as opening the root (`/`).\nAn example that will mistakenly open `/tmp`:\n`os.DirFS(\"\").Open(\"tmp\")`\n\nOn Windows, the affected functions mistakenly permitted access to Windows-reserved device names (for example `COM1` or `NUL`).\nAn example that will open `COM1` (works with any argument to `DirFS`):\n`os.DirFS(\"C:/tmp\").Open(\"COM1\")`\n\nAnother way to trigger the issue on Windows would be using ```os.DirFS(`\\`)``` which will permit an attacker to escape from the drive and access any path on the system (including network shares).",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The security impact of exploiting this vulnerability highly depends on the 1st-party code that uses `os.DirFS()` or `http.dir()`.\nFor example, if the code uses `os.DirFS(\"\").Open(attacker_filename)` in order to create an attacker-named externally-writable file in the current directory, the attacker will actually be able to create the file in an arbitrary filepath, leading to arbitrary file overwrite",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "GitHub Issue contains PoC snippets with multiple ways to trigger the vulnerability."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must find a remote service that takes user input and specifically opens a file after calling the `os.DirFS()` or `http.dir()` functions. Refer to the full applicability conditions in the full description.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-34155",
            "cvss_v3_score": "4.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-674"
            ]
          }
        ],
        "summary": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.22.7]",
              "[1.23.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-642406",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-34155",
          "https://pkg.go.dev/vuln/GO-2024-3105",
          "https://groups.google.com/g/golang-dev/c/S9POB9NCTdk",
          "https://go.dev/cl/611238",
          "https://go.dev/issue/69138"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-29400",
            "cvss_v3_score": "7.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cwe": [
              "CWE-94",
              "CWE-74"
            ]
          }
        ],
        "summary": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.9]",
              "[1.20.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-520139",
        "references": [
          "https://security.netapp.com/advisory/ntap-20241213-0005/",
          "https://go.dev/issue/59722",
          "https://pkg.go.dev/vuln/GO-2023-1753",
          "https://groups.google.com/g/golang-announce/c/MEb0UyuSMsU",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-29400",
          "https://go.dev/cl/491617"
        ],
        "extended_information": {
          "short_description": "Insufficient filtering in Go's `html/template` leads to XSS when executing crafted templates.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue has an exploit published",
              "description": "Test code contains PoC that demonstrates code injection."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The attackers must find a remote input that propagates into a Go template that is subsequently rendered with `Template.Execute` or `Template.ExecuteTemplate`. This is highly unlikely and is considered a bad practice regardless of this vulnerability.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-39323",
            "cvss_v3_score": "8.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "NVD-CWE-noinfo"
            ]
          }
        ],
        "summary": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.20.9]",
              "[1.21.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-533052",
        "references": [
          "https://pkg.go.dev/vuln/GO-2023-2095",
          "https://groups.google.com/g/golang-announce/c/XBa1oHDevAo",
          "https://go.dev/cl/533215",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KSEGD2IWKNUO3DWY4KQGUQM5BISRWHQE/",
          "https://go.dev/issue/63211",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CLB4TW7KALB3EEQWNWCN7OUIWWVWWCG2/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XFOIBB4YFICHDM7IBOP7PWXW3FX4HLL2/",
          "https://security.gentoo.org/glsa/202311-09",
          "https://security.netapp.com/advisory/ntap-20231020-0001/",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-39323"
        ],
        "extended_information": {
          "short_description": "A design problem in Golang's go command leads to arbitrary code execution when building crafted Go source code.",
          "full_description": "Compiler directives are statements written in the source code that give the programmer the ability to control the compiler's behavior. Golang compiler accepts compiler directives as comments (using `//` single line and `/*` multi-line comments). \n\nA [line directive](https://pkg.go.dev/cmd/compile#hdr-Compiler_Directives) specifies the source position for the character immediately following the comment as having come from the specified file. The following example specifies that the filename is foo.go and the line number is 10 for the next line in the source code.\n\n`//line foo.go:10` \n\nThe `cgo` package lets Go packages call C code and combines c files and go files into a single Go package. The cgo directives are used to provide flags for the compiler and linker when building the C parts of the package. For security reasons (may lead to code execution), the Golang command restricts the use of `cgo` directives (`//go:cgo_`) unless the file is generated by cgo.\n\nThe Golang compiler has a design problem in the implementation of the `isCgoGeneratedFile()` function, which leads to cgo directives restrictions being bypassed when handling crafted line directives followed by cgo directives. This function's purpose is to determine whether a file was generated by cgo or not, tricking this function is the key to bypassing the compiler restrictions. The following combination tricks the compiler into handling cgo directives as it is part of cgo-generated code (`_cgo_` prefix) although it is not.\n\n```\n//line /tmp/_cgo_.go:1\n//go:cgo_dynamic_linker \"/elf/interp\"\n```\n\nUsing the directives above tricks the compiler to use restricted cgo directives, which can lead to arbitrary code execution when running the `go build` command on the manipulated source code.\n\nThe line directive requires the absolute path of the file in which the directive lives, which can make exploiting this issue more complex (may require per-target research).\n\nThe official fix solves this issue by correcting the implementation of the `isCgoGeneratedFile()` function to find the real position of a statement (not the position specified by the line directive).",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC"
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Arbitrary code execution"
            },
            {
              "name": "Exploiting the issue requires the user to interact with the vulnerable software",
              "description": "The victim must explicitly build malicious or tampered source code (ex. by running `go build`)",
              "is_positive": true
            },
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The attacker must be able to write the contents of a Go source code file (that will be compiled using the Go command) to exploit this issue, which is unlikely.",
              "is_positive": true
            }
          ],
          "remediation": "##### Deployment mitigations\n\nDisable \"cgo\" support by running the go tool with CGO_ENABLED=0 -\n`CGO_ENABLED=0 go build .`"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-41722",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-22"
            ]
          }
        ],
        "summary": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.6]",
              "[1.20.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-426750",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2022-41722",
          "https://go.dev/issue/57274",
          "https://pkg.go.dev/vuln/GO-2023-1568",
          "https://groups.google.com/g/golang-announce/c/V0aBFqaFs_E",
          "https://go.dev/cl/468123"
        ],
        "extended_information": {
          "short_description": "Improper error handling in Go leads to unexpected results from the Clean function.",
          "full_description": "The `Clean()` function in the  [`path/filepath`](https://pkg.go.dev/path/filepath) package of the Go programming language is used to clean up a given path and return a shorter, cleaned version of the path. This function takes into consideration the operating system and is capable of transforming a Unix path to a Windows path if needed.\n\nIt was discovered that when running Go applications on Windows (only), if the input path to `Clean` contains the `:` operator, the function can form a valid Windows path from this operator alone. For example, calling `Clean(\"a/../c:/b\")` will erroneously transform the input path into `c:\\b`. Due to these unexpected results, in certain cases, the use of this function can lead to path traversal or filter bypass issues.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The specific security impact of this issue depends on the way that the input for `Clean` is checked AND used after the call to `Clean`. For example, if the input is validated to not point to `C:\\` before calling `Clean`, then an attacker can bypass this validation by calling `Clean(\"a/../c:/b\")` which doesn't start with `C:\\` but will result in the output path `c:\\b` after cleaning",
              "is_positive": true
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must find an input that propagates to the `Clean()` function",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "It is easy to craft an invalid path for `Clean` that will result in a valid, unexpected output path"
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-41725",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-770",
              "CWE-400"
            ]
          }
        ],
        "summary": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.6]",
              "[1.20.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-426747",
        "references": [
          "https://security.gentoo.org/glsa/202311-09",
          "https://go.dev/issue/58006",
          "https://groups.google.com/g/golang-announce/c/V0aBFqaFs_E",
          "https://pkg.go.dev/vuln/GO-2023-1569",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-41725",
          "https://go.dev/cl/468124"
        ],
        "extended_information": {
          "short_description": "Missing length checks in Go's net/http and mime/multipart packages can lead to denial of service when processing crafted packets.",
          "full_description": "The `net/http` and `mime/multipart` packages in Go are used for handling HTTP requests and responses, and for parsing multipart/form-data requests, respectively.\nWhen handling HTTP requests that contain multipart form data, the Go programming language provides two packages: `mime/multipart` and `net/http`. Multipart form data can be parsed using the `mime/multipart.Reader.ReadForm` function, as well as the Request methods `FormFile`, `FormValue`, `ParseMultipartForm`, and `PostFormValue` provided by the `net/http` package.\n\nBy default, the maximum amount of memory that can be used for buffering is set to `maxMemory` bytes + 10MB. However, there was an issue where certain metadata such as map entry overhead, part names, and MIME headers were not included in the memory size calculation. This could allow an attacker that controls the metadata's length to create excessively large files that could potentially exhaust the available disk space and cause a denial of service.\n\nVulnerable code example -\n```go\n// forms.go\npackage main\n\nimport (\n    \"html/template\"\n    \"net/http\"\n)\n\ntype ContactDetails struct {\n    Email   string\n    Subject string\n    Message string\n}\n\nfunc main() {\n    tmpl := template.Must(template.ParseFiles(\"forms.html\"))\n\n    http.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\n        if r.Method != http.MethodPost {\n            tmpl.Execute(w, nil)\n            return\n        }\n\n        details := ContactDetails{\n            Email:   r.FormValue(\"email\"),\n            Subject: r.FormValue(\"subject\"),\n            Message: r.FormValue(\"message\"),\n        }\n\n        // do something with details\n        _ = details\n\n        tmpl.Execute(w, struct{ Success bool }{true})\n    })\n\n    http.ListenAndServe(\":8080\", nil)\n}\n```",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "It is highly likely that HTTP form data will be received from possibly untrusted sources"
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attackers must find an input that propagates to one of the vulnerable functions - \n\n* mime/multipart `Reader.ReadForm`\n* net/http `Request.FormFile`\n* net/http `Request.FormValue`\n* net/http `Request.ParseMultipartForm`\n* net/http `Request.PostFormValue`",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "A request containing large multipart form data is enough to trigger the issue."
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "This issue leads to denial of service in server applications."
            }
          ],
          "remediation": "##### Development mitigations\n\nThe `multipart.ReadForm` and the `http.Request` methods that call it do not limit the amount of disk space consumed by temporary files, so callers can limit the size of form data using `http.MaxBytesReader`.\nExample:\n```\nhttp.HandleFunc(\"/bar\", func(w http.ResponseWriter, r *http.Request) {\n\t// Limit to 1MB\n\tmaxSize = 1024*1024 \n        r.Body = http.MaxBytesReader(w, nopCloser{r.Body}, maxSize)\n})\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24783",
            "cvss_v3_score": "5.9",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "CWE-476"
            ]
          }
        ],
        "summary": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic. This affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.21.8]",
              "[1.22.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616744",
        "references": [
          "https://go.dev/issue/65390",
          "https://go.dev/cl/569339",
          "https://security.netapp.com/advisory/ntap-20240329-0005/",
          "http://www.openwall.com/lists/oss-security/2024/03/08/4",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24783",
          "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg",
          "https://pkg.go.dev/vuln/GO-2024-2598"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-24531",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-138"
            ]
          }
        ],
        "summary": "Command go env is documented as outputting a shell script containing the Go environment. However, go env doesn't sanitize values, so executing its output as a shell script can cause various bad bahaviors, including executing arbitrary commands or inserting new environment variables. This issue is relatively minor because, in general, if an attacker can set arbitrary environment variables on a system, they have better attack vectors than making \"go env\" print them out.",
        "severity": "Critical",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.21.0-0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616757",
        "references": [
          "https://go.dev/issue/58508",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-24531",
          "https://go.dev/cl/488375",
          "https://groups.google.com/g/golang-dev/c/ixHOFpSbajE/m/8EjlbKVWAwAJ",
          "https://pkg.go.dev/vuln/GO-2024-2962",
          "https://go.dev/cl/493535",
          "https://security.netapp.com/advisory/ntap-20250328-0005/"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45287",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-203",
              "CWE-208"
            ]
          }
        ],
        "summary": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.20.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-540244",
        "references": [
          "https://people.redhat.com/~hkario/marvin/",
          "https://groups.google.com/g/golang-announce/c/QMK8IQALDvA",
          "https://security.netapp.com/advisory/ntap-20240112-0005/",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45287",
          "https://go.dev/issue/20654",
          "https://pkg.go.dev/vuln/GO-2023-2375",
          "https://go.dev/cl/326012/26"
        ],
        "extended_information": {
          "short_description": "A design problem in Golang crypto/tls may lead to data leakage when performing RSA-based TLS key exchange.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "An attacker needs to find the use of sensitive data within a vulnerable function utilizing the crypto/tls library for cryptographic calculations.",
              "is_positive": true
            },
            {
              "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
              "description": "To exploit this vulnerability an attacker would need an in-depth understanding of how to perform a side-channel timing attack, as well as be familiar with the Golang's crypto package's inner workings.",
              "is_positive": true
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Data leakage."
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "Exploiting this vulnerability is highly challenging, requiring a timing side channel and a complex cryptographic attack.",
              "is_positive": true
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "Exploiting the vulnerability may lead to leakage, including recovery of session key bits. However, execution of the attack may not always produce valuable data and is very context-dependent.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45290",
            "cvss_v3_score": "6.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-400",
              "CWE-770"
            ]
          }
        ],
        "summary": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion. With fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.21.8]",
              "[1.22.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616745",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45290",
          "https://go.dev/issue/65383",
          "https://pkg.go.dev/vuln/GO-2024-2599",
          "https://security.netapp.com/advisory/ntap-20240329-0004/",
          "http://www.openwall.com/lists/oss-security/2024/03/08/4",
          "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg",
          "https://go.dev/cl/569341"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-39326",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "cwe": [
              "NVD-CWE-noinfo",
              "CWE-400"
            ]
          }
        ],
        "summary": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.20.12]",
              "[1.21.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-540331",
        "references": [
          "https://go.dev/cl/547335",
          "https://go.dev/issue/64433",
          "https://pkg.go.dev/vuln/GO-2023-2382",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UIU6HOGV6RRIKWM57LOXQA75BGZSIH6G/",
          "https://groups.google.com/g/golang-dev/c/6ypN5EjibjM/m/KmLVYH_uAgAJ",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-39326"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-45285",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "NVD-CWE-noinfo",
              "CWE-636"
            ]
          }
        ],
        "summary": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.20.12]",
              "[1.21.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-540330",
        "references": [
          "https://go.dev/cl/540257",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-45285",
          "https://pkg.go.dev/vuln/GO-2023-2383",
          "https://go.dev/issue/63845",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UIU6HOGV6RRIKWM57LOXQA75BGZSIH6G/",
          "https://groups.google.com/g/golang-dev/c/6ypN5EjibjM/m/KmLVYH_uAgAJ"
        ],
        "extended_information": {
          "short_description": "A design problem in Go's `cmd/go` allows network attackers to perform man-in-the-middle attacks when a client fetches a module with the `.git` suffix and without an explicit URL scheme.",
          "full_description": "[cmd/go](https://pkg.go.dev/cmd/go) is a command-line tool and part of the Go programming language's toolchain. It is primarily used for managing Go modules, which are collections of Go packages and their dependencies.\nThe logic in `(*vcs).vcs.repoRootFromVCSPaths` function, part of the `cmd/go` package, has a design problem when processing a module's `url` that ends with the `.git` suffix (`foo/bar.git`) and is unavailable via secure protocols (`https`, `ssh`). \n\nFor example, when fetching a module with a URL that has no scheme and ends with `.git` -\n`go get -x dgl.cx/foo.git`\nIf the module cannot be fetched with the `https://` or `git+ssh://` schemes, then Go will unexpectedly try to fetch the module using insecure schemes such as `http://` and `git://`, which allows for man-in-the-middle attacks that can lead to data leakages or even indirect remote code execution (by attackers tampering with the fetched source code).",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "Attackers can mount MitM attacks on fetched Go modules, if the client fetches the module using a URL that satisfies the following conditions:\n1. The URL has to end with `.git`.\n2. The URL must not contain an explicit scheme\n3. The user is fetching modules directly (i.e. sets GOPROXY=off), which is not the default scenario.",
              "is_positive": true
            },
            {
              "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
              "description": "The GitHub issue details the vulnerability and how to trigger it."
            },
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
              "is_positive": true
            }
          ],
          "remediation": "##### Deployment mitigations\n\nUse an explicit (secure) scheme when fetching Go modules.\nFor example instead of -\n```\ngo get -x dgl.cx/foo.git\n```\n\nUse - \n```\ngo get -x https://dgl.cx/foo.git\n```\n\nor alternatively -\n```\ngo get -x git+ssh://dgl.cx/foo.git\n```\n```\n\n##### Deployment mitigations\n\nDo not disable the module proxy.\nSpecifically, do not set the environment variable `GOPROXY=off`."
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-29404",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-94"
            ]
          }
        ],
        "summary": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
        "severity": "Critical",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.10]",
              "[1.20.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-521542",
        "references": [
          "https://security.netapp.com/advisory/ntap-20241115-0009/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NZ2O6YCO2IZMZJELQGZYR2WAUNEDLYV6/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XBS3IIK6ADV24C5ULQU55QLT2UE762ZX/",
          "https://groups.google.com/g/golang-announce/c/q5135a9d924/m/j0ZoAJOHAwAJ",
          "https://go.dev/cl/501225",
          "https://pkg.go.dev/vuln/GO-2023-1841",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-29404",
          "https://security.gentoo.org/glsa/202311-09",
          "https://go.dev/issue/60305"
        ],
        "extended_information": {
          "short_description": "Insufficient validation in Go's linker leads to build-time code execution when compiling untrusted source code.",
          "full_description": "Go supports compiling \"cgo\" binaries, which allow Go code to call C code.\nAs part of \"cgo\" support, Go source code files can supply flags to the GCC compiler and linker by using the `#cgo CFLAGS` and `#cgo LDFLAGS` directives, respectively.\nSince some GCC flags can directly lead to unwanted code execution in build time (for example the `-wrapper` flag) the Go compiler maintains a whitelist of allowed GCC flags.\n\nIt was discovered that arbitrary GCC flags can be smuggled to the build process, through the `#cgo LDFLAGS` directive.\nFor example, building the following code will smuggle the `-bad-flag` flag into the build process -\n```go\npackage main\n// #cgo LDFLAGS: -L \"-Wl,-O -Wl,-R,-bad-flag\"\nimport \"C\"\nfunc main() {}\n```\n\nAttackers can exploit this issue by making victims compile untrusted Go code (ex. with `go build` or `go get`). Arbitrary code execution will happen as soon as the untrusted Go code is built.",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Code execution"
            },
            {
              "name": "The issue has an exploit published",
              "description": "Published exploit demonstrates arbitrary flag injection"
            },
            {
              "name": "Exploiting the issue requires the user to interact with the vulnerable software",
              "description": "A user must compile untrusted Go code in order to trigger the vulnerability",
              "is_positive": true
            }
          ],
          "remediation": "##### Development mitigations\n\nDisable \"cgo\" support by running the `go` tool with `CGO_ENABLED=0` -\n```bash\nCGO_ENABLED=0 go build .\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-29406",
            "cvss_v3_score": "6.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
            "cwe": [
              "CWE-436",
              "CWE-113"
            ]
          }
        ],
        "summary": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.11]",
              "[1.20.6]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-523140",
        "references": [
          "https://pkg.go.dev/vuln/GO-2023-1878",
          "https://groups.google.com/g/golang-announce/c/2q13H6LEEx0",
          "https://go.dev/issue/60374",
          "https://security.netapp.com/advisory/ntap-20230814-0002/",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-29406",
          "https://go.dev/cl/506996",
          "https://security.gentoo.org/glsa/202311-09"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-41715",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "NVD-CWE-Other"
            ]
          }
        ],
        "summary": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.18.7]",
              "[1.19.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-257703",
        "references": [
          "https://go.dev/cl/439356",
          "https://pkg.go.dev/vuln/GO-2022-1039",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-41715",
          "https://go.dev/issue/55949",
          "https://security.gentoo.org/glsa/202311-09",
          "https://groups.google.com/g/golang-announce/c/xtuG5faxtaU"
        ],
        "extended_information": {
          "short_description": "Unbounded resource consumption in Golang regexp/syntax enables attackers to perform denial of service when compiling or parsing crafted regular expressions.",
          "full_description": "Golang's [regexp/syntax](https://pkg.go.dev/regexp/syntax) package enables parsing of regular expressions into parse (syntax) trees and compiling parse trees into programs.\n\nIt was discovered that the parsed regexp representation had an unbounded memory footprint, and in some cases relatively small regexps can consume much larger amounts of memory. The issue was fixed by rejecting parse trees which consume more than 256MB of memory.\n\nWhile the `regexp/syntax` package by itself is not that popular, however, the vulnerable function `syntax.Parse` is used by multiple functions from the much more popular `regexp` package.\n\nAttackers can trigger the vulnerability by giving a large or complicated regexp to one of the following API functions:\n\nFrom `regexp/syntax`:\n\n1. `Parse`\n\nFrom `regexp`:\n\n1. `Match`\n2. `MatchReader`\n3. `MatchString`\n4. `Regexp.Compile`\n5. `Regexp.CompilePOSIX`\n6. `Regexp.MustCompile`\n7. `Regexp.MustCompilePOSIX`",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The attacker must find remote input that propagates into the `Parse` API, either directly or through a vulnerable function in the more popular `regexp` package. This is very unlikely since regular expressions are usually not compiled from untrusted sources.",
              "is_positive": true
            },
            {
              "name": "The issue cannot result in a severe impact (such as remote code execution)",
              "description": "Linear complexity memory consumption (albeit the linear constant can be 40KB per 1 regex character)",
              "is_positive": true
            },
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "CVSS doesn't take into account the high attack complexity of this attack, since the researcher must find a remote input for regular expressions to be compiled",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "PoC from test code demonstrates DoS"
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-29402",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-94"
            ]
          }
        ],
        "summary": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
        "severity": "Critical",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.10]",
              "[1.20.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-521544",
        "references": [
          "https://security.netapp.com/advisory/ntap-20241213-0004/",
          "https://go.dev/issue/60167",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XBS3IIK6ADV24C5ULQU55QLT2UE762ZX/",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-29402",
          "https://pkg.go.dev/vuln/GO-2023-1839",
          "https://go.dev/cl/501226",
          "https://groups.google.com/g/golang-announce/c/q5135a9d924/m/j0ZoAJOHAwAJ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NZ2O6YCO2IZMZJELQGZYR2WAUNEDLYV6/",
          "https://security.gentoo.org/glsa/202311-09"
        ],
        "extended_information": {
          "short_description": "Compiling Go source code that uses cgo may lead to code injection when the working path contains a newline.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The code injection requires that -\n1. The Go source code uses \"cgo\" (code contains `import \"C\"`)\n2. The directory name from which the package is built, contains a newline character\nNote that malicious code execution will only happen when running the built module (the vulnerability does not trigger code execution on build time)",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The issue is very unlikely to be exploited maliciously, and can only be used to somewhat hide malicious code, since the attack requires the user to build Go source code from a directory that has a crafted name. Since the malicious code will only be executed when running the built module (and not at build time), successful attacks will require the victim to build an untrusted package and execute it, which is an extremely bad practice regardless of this vulnerability.",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "PoC from test code demonstrates code injection"
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-39318",
            "cvss_v3_score": "6.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "cwe": [
              "CWE-79"
            ]
          }
        ],
        "summary": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.20.8]",
              "[1.21.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-531550",
        "references": [
          "https://go.dev/cl/526156",
          "https://groups.google.com/g/golang-dev/c/2C5vbR-UNkI/m/L1hdrPhfBAAJ",
          "https://security.gentoo.org/glsa/202311-09",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-39318",
          "https://pkg.go.dev/vuln/GO-2023-2041",
          "https://security.netapp.com/advisory/ntap-20231020-0009/",
          "https://go.dev/issue/62196"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-39319",
            "cvss_v3_score": "6.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "cwe": [
              "CWE-79"
            ]
          }
        ],
        "summary": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.20.8]",
              "[1.21.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-531549",
        "references": [
          "https://security.netapp.com/advisory/ntap-20231020-0009/",
          "https://go.dev/issue/62197",
          "https://go.dev/cl/526157",
          "https://pkg.go.dev/vuln/GO-2023-2043",
          "https://groups.google.com/g/golang-dev/c/2C5vbR-UNkI/m/L1hdrPhfBAAJ",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-39319",
          "https://security.gentoo.org/glsa/202311-09"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24784",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cwe": [
              "CWE-150"
            ]
          }
        ],
        "summary": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.21.8]",
              "[1.22.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-616748",
        "references": [
          "http://www.openwall.com/lists/oss-security/2024/03/08/4",
          "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg",
          "https://go.dev/issue/65083",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24784",
          "https://security.netapp.com/advisory/ntap-20240329-0007/",
          "https://pkg.go.dev/vuln/GO-2024-2609",
          "https://go.dev/cl/555596"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-24536",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-400",
              "CWE-770"
            ]
          }
        ],
        "summary": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.8]",
              "[1.20.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-513414",
        "references": [
          "https://security.netapp.com/advisory/ntap-20230526-0007/",
          "https://pkg.go.dev/vuln/GO-2023-1705",
          "https://go.dev/cl/482075",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-24536",
          "https://go.dev/cl/482076",
          "https://groups.google.com/g/golang-announce/c/Xdv6JL9ENs8",
          "https://go.dev/issue/59153",
          "https://go.dev/cl/482077",
          "https://security.gentoo.org/glsa/202311-09"
        ],
        "extended_information": {
          "short_description": "Improper part counting in Go's `mime/multipart` and `net/http` packages can lead to CPU and memory denial of service when processing form inputs with many parts.",
          "full_description": "The `net/http` and `mime/multipart` packages in Go are used for handling HTTP requests and responses, and for parsing multipart/form-data requests, respectively.\nThe `mime/multipart.Reader.ReadForm` function can undercount the amount of memory consumed when parsing multipart form inputs, leading to larger inputs being accepted than intended. Additionally, the function can allocate a large number of short-lived buffers, which can further increase pressure on the garbage collector. These factors combined can allow an attacker to cause the program to consume large amounts of CPU and memory, potentially leading to a denial of service.\n\nNote that some `net/http` package functions such as `Request.FormFile`, `Request.FormValue`, `Request.ParseMultipartForm` and `Request.PostFormValue` are also vulnerable as they call  the vulnerable function `mime/multipart.Reader.ReadForm`.\n\n```go\n// forms.go\npackage main\n\nimport (\n    \"html/template\"\n    \"net/http\"\n)\n\ntype ContactDetails struct {\n    Email   string\n    Subject string\n    Message string\n}\n\nfunc main() {\n    tmpl := template.Must(template.ParseFiles(\"forms.html\"))\n\n    http.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\n        if r.Method != http.MethodPost {\n            tmpl.Execute(w, nil)\n            return\n        }\n\n        details := ContactDetails{\n            Email:   r.FormValue(\"email\"),\n            Subject: r.FormValue(\"subject\"),\n            Message: r.FormValue(\"message\"),\n        }\n\n        // do something with details\n        _ = details\n\n        tmpl.Execute(w, struct{ Success bool }{true})\n    })\n\n    http.ListenAndServe(\":8080\", nil)\n}\n```",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "It is highly likely that HTTP form data will be received from possibly untrusted sources"
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "This issue leads to denial of service in server applications."
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "A request containing multipart form data with many parts is enough to trigger the issue."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attackers must find a remote input that propagates to the `mime/multipart.Reader.ReadForm` function.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-41724",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-400"
            ]
          }
        ],
        "summary": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.6]",
              "[1.20.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-426748",
        "references": [
          "https://security.gentoo.org/glsa/202311-09",
          "https://groups.google.com/g/golang-announce/c/V0aBFqaFs_E",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-41724",
          "https://go.dev/issue/58001",
          "https://go.dev/cl/468125",
          "https://pkg.go.dev/vuln/GO-2023-1570"
        ],
        "extended_information": {
          "short_description": "Improper error management in Go's crypto/tls package can lead to denial of service when processing large TLS handshake records.",
          "full_description": "The `crypto/tls` package in Go provides cryptographic protocols for secure communication over the network, including the Transport Layer Security (TLS) protocol.\nImproper error management when processing a large TLS handshake record can lead to panic when attempting to construct responses. \n\nA large TLS handshake can be generated by TLS 1.3 clients and TLS 1.2 clients with session resumption enabled, when the `Config.ClientSessionCache` setting has a non-nil value. In addition, a large TLS handshake can also be generated by TLS 1.3 servers when client authentication is enabled (`Config.ClientAuth` is set to `RequestClientCert` or a higher value).\n\nAlthough internal library code is vulnerable to this issue, currently it does not seem this issue can be triggered by an external attacker.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "The CVSS score does not reflect the real-world impact of the issue, since the issue cannot be exploited by an external attacker",
              "is_positive": true
            },
            {
              "name": "The issue cannot result in a severe impact (such as remote code execution)",
              "description": "Although internal library code is vulnerable to this issue, currently it does not seem this issue can be triggered by an external attacker.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-29403",
            "cvss_v3_score": "7.8",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-642",
              "CWE-668"
            ]
          }
        ],
        "summary": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.10]",
              "[1.20.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-521543",
        "references": [
          "https://security.netapp.com/advisory/ntap-20241220-0009/",
          "https://pkg.go.dev/vuln/GO-2023-1840",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XBS3IIK6ADV24C5ULQU55QLT2UE762ZX/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NZ2O6YCO2IZMZJELQGZYR2WAUNEDLYV6/",
          "https://go.dev/cl/501223",
          "https://go.dev/issue/60272",
          "https://groups.google.com/g/golang-announce/c/q5135a9d924/m/j0ZoAJOHAwAJ",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-29403",
          "https://security.gentoo.org/glsa/202311-09"
        ],
        "extended_information": {
          "short_description": "Incorrect error handling in the Go runtime allows local attackers to cause data leakage when SUID Go binaries are executed.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "Attackers must cause a setuid/setgid Go executable to crash"
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The impact depends on the Go application being run.\nIf the standard file descriptors are closed while running the Go application, an attacker can exploit the issue to read/write arbitrary files.\nIn the case of a crash of the Go application, a memory dump of the crash could result in data leakage.",
              "is_positive": true
            },
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "The CVSS does not take into account the high attack complexity and per-target research needed to exploit this issue.",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "Exploitation relies on the Go application binary having the `setuid`/`setgid` bits set. Moreover, the only scenarios found exploitable are when the standard file descriptors (`stdin`/`stdout`/`stderr`) are closed or when a memory dump occurs, which are highly unlikely.",
              "is_positive": true
            },
            {
              "name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
              "description": "The data leakage caused by crashing a setuid/setgid Go executable is very likely to be visible to local attackers exclusively",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-34158",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-674"
            ]
          }
        ],
        "summary": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.22.7]",
              "[1.23.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-642404",
        "references": [
          "https://groups.google.com/g/golang-dev/c/S9POB9NCTdk",
          "https://go.dev/issue/69141",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-34158",
          "https://pkg.go.dev/vuln/GO-2024-3107",
          "https://go.dev/cl/611240"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-34156",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-674"
            ]
          }
        ],
        "summary": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.22.7]",
              "[1.23.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-642402",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-34156",
          "https://pkg.go.dev/vuln/GO-2024-3106",
          "https://go.dev/issue/69139",
          "https://go.dev/cl/611239",
          "https://groups.google.com/g/golang-dev/c/S9POB9NCTdk"
        ],
        "extended_information": {
          "short_description": "Uncontrolled recursion in Golang encoding/gob.Decoder.Decode leads to denial of service when decoding attacker-supplied Gob streams.",
          "full_description": "Golang supports an optimized encoder/decoder called \"gob\" for binary values exchanged between an Encoder (transmitter) and a Decoder (receiver). A typical use is transporting arguments and results of remote procedure calls (RPCs) such as those provided by package \"net/rpc\".\n\nIt was discovered that calling `Decoder.Decode` on a message which contains deeply nested structures can cause a panic due to stack exhaustion., which will crash the calling Go process.\n\nExample code snippet vulnerable to this issue-\n```go\ndec := NewDecoder(attacker_input)\ndec.Decode(\u0026output)\n```",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must find remote input that propagates into a `NewDecoder` API call (first argument). The built `Decoder` must then invoke the `Decode` call.",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "Published PoC in test code demonstrates denial of service."
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-29409",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-400"
            ]
          }
        ],
        "summary": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.12]",
              "[1.20.7]",
              "[1.21.0-rc.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-527218",
        "references": [
          "https://groups.google.com/g/golang-announce/c/X0b6CsSAaYI/m/Efv5DbZ9AwAJ",
          "https://pkg.go.dev/vuln/GO-2023-1987",
          "https://go.dev/issue/61460",
          "https://go.dev/cl/515257",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-29409",
          "https://security.gentoo.org/glsa/202311-09",
          "https://security.netapp.com/advisory/ntap-20230831-0010/"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-24539",
            "cvss_v3_score": "7.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cwe": [
              "CWE-94",
              "CWE-74"
            ]
          }
        ],
        "summary": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.9]",
              "[1.20.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-520142",
        "references": [
          "https://security.netapp.com/advisory/ntap-20241129-0005/",
          "https://pkg.go.dev/vuln/GO-2023-1751",
          "https://groups.google.com/g/golang-announce/c/MEb0UyuSMsU",
          "https://go.dev/issue/59720",
          "https://go.dev/cl/491615",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-24539"
        ],
        "extended_information": {
          "short_description": "Insufficient filtering in Go's `html/template` leads to XSS when executing crafted templates.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue has an exploit published",
              "description": "Test code contains PoC that demonstrates code injection."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The attackers must find a remote input that propagates into a Go template that is subsequently rendered with `Template.Execute` or `Template.ExecuteTemplate`. This is highly unlikely and is considered a bad practice regardless of this vulnerability.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-24537",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-835",
              "CWE-190"
            ]
          }
        ],
        "summary": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
        "severity": "High",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.19.8]",
              "[1.20.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-513413",
        "references": [
          "https://security.netapp.com/advisory/ntap-20241129-0004/",
          "https://go.dev/cl/482078",
          "https://groups.google.com/g/golang-announce/c/Xdv6JL9ENs8",
          "https://security.gentoo.org/glsa/202311-09",
          "https://go.dev/issue/59180",
          "https://nvd.nist.gov/vuln/detail/CVE-2023-24537",
          "https://pkg.go.dev/vuln/GO-2023-1702"
        ],
        "extended_information": {
          "short_description": "An infinite loop in Go's parser package leads to denial of service when parsing crafted Go source code.",
          "full_description": "Go's [parser](https://pkg.go.dev/go/parser) package implements a parser for Go source files. Input may be provided in a variety of forms (see the various Parse* functions); the output is an abstract syntax tree (AST) representing the Go source. The parser is invoked through one of the Parse* functions.\n\nIt was discovered that a `//line` directive (used normally [for debugging purposes](https://www.lemoda.net/go/line-directives/index.html)) with a very large line number, can cause an integer overflow in the parser which results in an infinite loop denial of service.\n\nNote that the vulnerability can be triggered indirectly, for example via Go's [scanner](https://pkg.go.dev/go/scanner) package, or even by calling `go build` on untrusted source code.\n\nThat said, the vulnerability is less likely to affect runtime services, since Go source code parsing is mostly done at compile-time.\n\nMalicious source code example - \n```go\npackage p\n//line :9223372036854775806\n\n//\n```",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue cannot result in a severe impact (such as remote code execution)",
              "description": "The DoS vulnerability is less likely to affect runtime services, since Go source code parsing is mostly done at compile-time. In the more likely case of the vulnerability affecting a command-line utility, the impact is less severe since it will lead to DoS of a forked non-server utility.",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "A PoC that demonstrates DoS can be found in the fixing commit."
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The attacker would need to cause crafted Go source code to be parsed directly by the `parser` package or indirectly by the `scanner` package (or by any command-line utility that calls either of the above packages, such as `go build`).",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-45341",
            "cvss_v3_score": "6.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "cwe": [
              "CWE-295"
            ]
          }
        ],
        "summary": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain. Certificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs.",
        "severity": "Medium",
        "components": {
          "go://github.com/golang/go:1.18.5": {
            "fixed_versions": [
              "[1.22.11]",
              "[1.23.5]",
              "[1.24.0-rc.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5"
                },
                {
                  "component_id": "generic://sha256:467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5/sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar",
                  "full_path": "sha256__467f20ced9c096ba506193f616c69c5ea8b2f150bac402b62642398d36bb0ff5.tar"
                },
                {
                  "component_id": "go://github.com/kyverno/kyverno/cmd/kyverno:1.7.5",
                  "full_path": "kyverno"
                },
                {
                  "component_id": "go://github.com/golang/go:1.18.5",
                  "full_path": "github.com/golang/go"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-668446",
        "references": [
          "https://security.netapp.com/advisory/ntap-20250221-0004/",
          "https://groups.google.com/g/golang-dev/c/CAWXhan3Jww/m/bk9LAa-lCgAJ",
          "https://groups.google.com/g/golang-dev/c/bG8cv1muIBM/m/G461hA6lCgAJ",
          "https://go.dev/issue/71156",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-45341",
          "https://pkg.go.dev/vuln/GO-2025-3373",
          "https://go.dev/cl/643099"
        ],
        "extended_information": {}
      }
    ],
    "component_id": "docker://ghcr.io/kyverno/kyverno:v1.7.5",
    "package_type": "docker",
    "status": "completed"
  }
]
