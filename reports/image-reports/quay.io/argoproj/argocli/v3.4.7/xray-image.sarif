{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "addresses": [],
      "graphs": [],
      "invocations": [
        {
          "executionSuccessful": true,
          "notificationConfigurationOverrides": [],
          "ruleConfigurationOverrides": [],
          "toolConfigurationNotifications": [],
          "toolExecutionNotifications": [],
          "workingDirectory": {
            "index": -1,
            "uri": "file:///tmp/jfrog.cli.temp.-1756737013-1174551410"
          }
        }
      ],
      "language": "en-US",
      "logicalLocations": [],
      "newlineSequences": [
        "\r\n",
        "\n"
      ],
      "policies": [],
      "redactionTokens": [],
      "results": [
        {
          "fingerprints": {
            "jfrogFingerprintHash": "7a5587fd765bd088616deabeb65ec6b0"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-24786] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-24786] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-24786_google.golang.org/protobuf_1.29.1",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "187b69a7456f86d70c2db2420d149714"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-22868] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-22868] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[0.27.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-22868_golang.org/x/oauth2_0.6.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "17873330a283c1d7cf7ceec658ccc16f"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-35255] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-35255] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.6.0-beta.4.0.20240610221955-50774cd97099]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-35255_github.com/Azure/azure-sdk-for-go/sdk/azidentity_1.2.2",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "7afd6ee9724d43ded75e97a84e84790a"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-28180] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-28180] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-28180_github.com/go-jose/go-jose/v3_3.0.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "a91032991270ad1457c33c2510e12694"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-27144] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-27144] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[3.0.4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-27144_github.com/go-jose/go-jose/v3_3.0.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5bb462ef88fda2ae5bf7f4898e619cc2"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-32445] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-32445] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.9.6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-32445_github.com/argoproj/argo-events_1.7.3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "e71aac06d8b30d7a636b9c0e230d4885"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-22869] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-22869] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[0.35.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-22869_golang.org/x/crypto_0.7.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "cf147f922c5631d53ba83ccb0681441d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-45337] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-45337] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[0.31.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-45337_golang.org/x/crypto_0.7.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "115824e849d923dc8113ee5b53395eb2"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-48795] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-48795] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[0.17.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-48795_golang.org/x/crypto_0.7.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "43a3bdaa74d97a2ea30c9c97b42e2ac6"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-45288] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-45288] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.21.9], [1.22.2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "22e5840cbe391f3447ff30b7f435d9cd"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-45288] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-45288] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[0.23.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-45288_golang.org/x/net_0.8.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "aa7987165d2aa6ccccfc22f9c68f5ae9"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-29406] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-29406] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.19.11], [1.20.6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "4c02a7cc61e0a820239b7ee8e81ede1a"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-24539] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-24539] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.19.9], [1.20.4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "52da07b20322b1a2b2784956b5820064"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-39323] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-39323] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.20.9], [1.21.2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "44b4b9bcea3093f82670c98055c66f26"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-24784] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-24784] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.21.8], [1.22.1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-24784_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5682e1b244c9878dbaf95d758875b199"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-29400] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-29400] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.19.9], [1.20.4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "89bb807a217eab760f993089b83e29bf"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-24787] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-24787] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.21.10], [1.22.3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-24787_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "d18dadcdb5bd3b548f7db5724b57388f"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-22866] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-22866] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.22.12], [1.23.6], [1.24.0-rc.3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-22866_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "d82f9081848b5a8147fe69c7dab71536"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-45287] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-45287] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.20.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "aee9054e7cb13009e2e86abdd4a19e93"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-24531] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-24531] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.21.0-0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-24531_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "7d57a441aaac63d6111977f642111704"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-34158] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-34158] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.22.7], [1.23.1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-34158_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b3a41cfe832f758523f0e5c7ed805a48"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-34156] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-34156] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.22.7], [1.23.1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-34156_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "bb580ac241f3aecfd04f1f6d72e0162c"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-0913] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-0913] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.23.10], [1.24.4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-0913_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "adc54594ce72ef4b9f7ea941ec002b74"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-29405] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-29405] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.19.10], [1.20.5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "4392e6279b0a37190aa7f1a2ca4b380b"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-4674] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-4674] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.23.11], [1.24.5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-4674_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "d2df3246b2d9de5e75dfbfa7214b3741"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-45336] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-45336] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.22.11], [1.23.5], [1.24.0-rc.2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-45336_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b5e039a274813cecfb6589d2b04ec4cb"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-45289] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-45289] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.21.8], [1.22.1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-45289_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "f9c17a7ba677a5aef06f32ffd43cc5ca"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-47907] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-47907] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.23.12], [1.24.6]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-47907_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "9f21f67bc6018481446b8f3eee99d947"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-29403] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-29403] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.19.10], [1.20.5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "0074dc30fbec090d443ead81976a3382"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-24785] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-24785] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.21.8], [1.22.1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-24785_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "a9c846d0e0977affebfb575dcd8b2d88"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-24540] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-24540] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.19.9], [1.20.4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "270083e0bb98bc2611aa3d5ec2ec7320"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-45290] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-45290] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.21.8], [1.22.1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-45290_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "5d8ee434b5ad6124012cf46910e37be7"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-29404] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-29404] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.19.10], [1.20.5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "2f8b4139f2aff309fadb755ce02eabd6"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-4673] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-4673] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.23.10], [1.24.4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-4673_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "99be4b048a13da505e3ee96b23328730"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-45283] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-45283] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.20.11], [1.20.12], [1.21.4], [1.21.5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "bd15dbf0a1e103e6f2cf7a6537859034"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-45341] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-45341] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.22.11], [1.23.5], [1.24.0-rc.2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-45341_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "e97bd157614a913a746808b9104f1651"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-45284] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-45284] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.20.11], [1.21.4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "85118dd2dde887b5e449c4af3e0e7ba9"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-39326] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-39326] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.20.12], [1.21.5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "c57b22fec1645cde6326b904fee6be5a"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-24790] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-24790] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.21.11], [1.22.4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-24790_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "efebc2ea9c0022034230a9532299b018"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-39319] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-39319] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.20.8], [1.21.1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "165f361a7db5150ed05db07e1dfdab26"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-29409] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-29409] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.19.12], [1.20.7], [1.21.0-rc.4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "6dd78c3fd40dc31924e8b6530842b873"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-24789] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-24789] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.21.11], [1.22.4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-24789_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "c9793480f0870ca55998180181613b14"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-22871] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-22871] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.23.8], [1.24.2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-22871_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "4cd38ea8fb786cc75ad18edb071312c4"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-24783] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-24783] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.21.8], [1.22.1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-24783_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "ed9d9dbc39f1ab34403c5ef216ec4ad4"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-34155] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-34155] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.22.7], [1.23.1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-34155_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "e557217b025805647f80c64f86125df2"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-45285] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-45285] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.20.12], [1.21.5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b7309fd00aaba1e9248b63474e2b1f36"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-39318] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-39318] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.20.8], [1.21.1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "6b4ada3fdd63fbbc9af2e61f68a41c0d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-24791] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-24791] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.21.12], [1.22.5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-24791_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "fded4874886beae28162f79869179e7b"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-29402] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-29402] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.19.10], [1.20.5]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.19.8",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "63b45f28f4389f3c1c42f7905d77703a"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-46402] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-46402] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "No fix available"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-46402_github.com/whilp/git-urls_1.0.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "56ba68b654a7c77a515e6e83850359c3"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "note",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-51744] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-51744] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[4.5.1]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-51744_github.com/golang-jwt/jwt/v4_4.5.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "029c32badb90ece598b58ef14d417e3b"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-30204] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-30204] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[4.5.2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-30204_github.com/golang-jwt/jwt/v4_4.5.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "8aa795f9ac897fc015eaafeb09d4c8d2"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-22870] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-22870] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[0.36.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-22870_golang.org/x/net_0.8.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "01fc34f70583b2de84fbec72122e4614"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-39325] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-39325] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[0.17.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-39325_golang.org/x/net_0.8.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "874bc5faede47e74a62cb62577cd3b5a"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-3978] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-3978] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[0.13.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-3978_golang.org/x/net_0.8.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "710b798d50078c1fea561c75f893e5c4"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-22872] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2025-22872] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[0.38.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-22872_golang.org/x/net_0.8.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "7c72d3d785259c5f8361a33ecee6f341"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-44487] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-44487] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[0.17.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-44487_golang.org/x/net_0.8.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "24018eaabdaf8411c6670a8d5e59db5d"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-44487] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-44487] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.56.3], [1.57.1], [1.58.3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-44487_google.golang.org/grpc_1.53.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "bf8fda9d003029bc79ecddb08d177296"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-44487] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-44487] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[0.29.0-alpha.3], [1.29.0-alpha.3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-44487_k8s.io/apimachinery_0.24.3",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "cfcb9247c0838b054aeffdd9cfe28b43"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-33953] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-33953] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.53.2], [1.54.3], [1.55.2], [1.56.2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-33953_google.golang.org/grpc_1.53.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "9094581252940e83f0d8174d6126a335"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-7246] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2024-7246] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.58.3], [1.59.5], [1.60.2], [1.61.3], [1.62.3], [1.63.2], [1.64.3], [1.65.4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-7246_google.golang.org/grpc_1.53.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "dd059a77e29332bd6583ccc593ad05b2"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-32731] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar \nImage: quay.io/argoproj/argocli:v3.4.7\nLayer (sha256): 72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b",
            "text": "[CVE-2023-32731] sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar "
          },
          "properties": {
            "fixedVersion": "[1.55.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-32731_google.golang.org/grpc_1.53.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        }
      ],
      "runAggregates": [],
      "taxonomies": [],
      "threadFlowLocations": [],
      "tool": {
        "driver": {
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "isComprehensive": false,
          "language": "en-US",
          "locations": [],
          "name": "JFrog Xray Scanner",
          "notifications": [],
          "rules": [
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.4      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.10], [1.22.3]   |",
                "text": "On Darwin, building a Go module which contains CGO can trigger arbitrary code execution when using the Apple version of ld, due to usage of the -lto_library flag in a \"#cgo LDFLAGS\" directive."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.4      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.10], [1.22.3]   |",
                "text": "On Darwin, building a Go module which contains CGO can trigger arbitrary code execution when using the Apple version of ld, due to usage of the -lto_library flag in a \"#cgo LDFLAGS\" directive."
              },
              "id": "CVE-2024-24787_github.com/golang/go_1.19.8",
              "name": "CVE-2024-24787-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "6.4"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-24787] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [4.5.2]   |",
                "text": "golang-jwt is a Go implementation of JSON Web Tokens. Starting in version 3.2.0 and prior to versions 5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a call to strings.Split) its argument (which is untrusted data) on periods. As a result, in the face of a malicious request whose Authorization header consists of Bearer  followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the function's argument), with a constant factor of about 16. This issue is fixed in 5.2.2 and 4.5.2."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [4.5.2]   |",
                "text": "golang-jwt is a Go implementation of JSON Web Tokens. Starting in version 3.2.0 and prior to versions 5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a call to strings.Split) its argument (which is untrusted data) on periods. As a result, in the face of a malicious request whose Authorization header consists of Bearer  followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the function's argument), with a constant factor of about 16. This issue is fixed in 5.2.2 and 4.5.2."
              },
              "id": "CVE-2025-30204_github.com/golang-jwt/jwt/v4_4.5.0",
              "name": "CVE-2025-30204-github.com/golang-jwt/jwt/v4-4.5.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang-jwt/jwt/v4",
                      "version": "4.5.0",
                      "location": {
                        "file": "github.com/golang-jwt/jwt/v4"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-30204] github.com/golang-jwt/jwt/v4 4.5.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.6.0-beta.4.0.20240610221955-50774cd97099]   |",
                "text": "Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.6.0-beta.4.0.20240610221955-50774cd97099]   |",
                "text": "Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability"
              },
              "id": "CVE-2024-35255_github.com/Azure/azure-sdk-for-go/sdk/azidentity_1.2.2",
              "name": "CVE-2024-35255-github.com/Azure/azure-sdk-for-go/sdk/azidentity-1.2.2",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/Azure/azure-sdk-for-go/sdk/azidentity",
                      "version": "1.2.2",
                      "location": {
                        "file": "github.com/Azure/azure-sdk-for-go/sdk/azidentity"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-35255] github.com/Azure/azure-sdk-for-go/sdk/azidentity 1.2.2"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [3.0.3]   |",
                "text": "Package jose aims to provide an implementation of the Javascript Object Signing and Encryption set of standards. An attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). This vulnerability has been patched in versions 4.0.1, 3.0.3 and 2.6.3."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [3.0.3]   |",
                "text": "Package jose aims to provide an implementation of the Javascript Object Signing and Encryption set of standards. An attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). This vulnerability has been patched in versions 4.0.1, 3.0.3 and 2.6.3."
              },
              "id": "CVE-2024-28180_github.com/go-jose/go-jose/v3_3.0.0",
              "name": "CVE-2024-28180-github.com/go-jose/go-jose/v3-3.0.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/go-jose/go-jose/v3",
                      "version": "3.0.0",
                      "location": {
                        "file": "github.com/go-jose/go-jose/v3"
                      }
                    }
                  ]
                ],
                "security-severity": "4.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-28180] github.com/go-jose/go-jose/v3 3.0.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.8], [1.22.1]   |",
                "text": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.8], [1.22.1]   |",
                "text": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers."
              },
              "id": "CVE-2024-24784_github.com/golang/go_1.19.8",
              "name": "CVE-2024-24784-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-24784] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.9], [1.20.4]   |",
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.9], [1.20.4]   |",
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags."
              },
              "id": "CVE-2023-29400_github.com/golang/go_1.19.8",
              "name": "CVE-2023-29400-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "7.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.23.10], [1.24.4]   |",
                "text": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.23.10], [1.24.4]   |",
                "text": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information."
              },
              "id": "CVE-2025-4673_github.com/golang/go_1.19.8",
              "name": "CVE-2025-4673-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "6.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-4673] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [4.5.1]   |",
                "text": "golang-jwt is a Go implementation of JSON Web Tokens. Unclear documentation of the error behavior in `ParseWithClaims` can lead to situation where users are potentially not checking errors in the way they should be. Especially, if a token is both expired and invalid, the errors returned by `ParseWithClaims` return both error codes. If users only check for the `jwt.ErrTokenExpired ` using `error.Is`, they will ignore the embedded `jwt.ErrTokenSignatureInvalid` and thus potentially accept invalid tokens. A fix has been back-ported with the error handling logic from the `v5` branch to the `v4` branch. In this logic, the `ParseWithClaims` function will immediately return in \"dangerous\" situations (e.g., an invalid signature), limiting the combined errors only to situations where the signature is valid, but further validation failed (e.g., if the signature is valid, but is expired AND has the wrong audience). This fix is part of the 4.5.1 release. We are aware that this changes the behaviour of an established function and is not 100 % backwards compatible, so updating to 4.5.1 might break your code. In case you cannot update to 4.5.0, please make sure that you are properly checking for all errors (\"dangerous\" ones first), so that you are not running in the case detailed above."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [4.5.1]   |",
                "text": "golang-jwt is a Go implementation of JSON Web Tokens. Unclear documentation of the error behavior in `ParseWithClaims` can lead to situation where users are potentially not checking errors in the way they should be. Especially, if a token is both expired and invalid, the errors returned by `ParseWithClaims` return both error codes. If users only check for the `jwt.ErrTokenExpired ` using `error.Is`, they will ignore the embedded `jwt.ErrTokenSignatureInvalid` and thus potentially accept invalid tokens. A fix has been back-ported with the error handling logic from the `v5` branch to the `v4` branch. In this logic, the `ParseWithClaims` function will immediately return in \"dangerous\" situations (e.g., an invalid signature), limiting the combined errors only to situations where the signature is valid, but further validation failed (e.g., if the signature is valid, but is expired AND has the wrong audience). This fix is part of the 4.5.1 release. We are aware that this changes the behaviour of an established function and is not 100 % backwards compatible, so updating to 4.5.1 might break your code. In case you cannot update to 4.5.0, please make sure that you are properly checking for all errors (\"dangerous\" ones first), so that you are not running in the case detailed above."
              },
              "id": "CVE-2024-51744_github.com/golang-jwt/jwt/v4_4.5.0",
              "name": "CVE-2024-51744-github.com/golang-jwt/jwt/v4-4.5.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang-jwt/jwt/v4",
                      "version": "4.5.0",
                      "location": {
                        "file": "github.com/golang-jwt/jwt/v4"
                      }
                    }
                  ]
                ],
                "security-severity": "3.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-51744] github.com/golang-jwt/jwt/v4 4.5.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.27.0]   |",
                "text": "GHSA-6v2p-p543-phr9:\ngolang.org/x/oauth2 Improper Validation of Syntactic Correctness of Input vulnerability\nGHSA-3wqc-mwfx-672p:\nTraefik affected by Go oauth2/jws Improper Validation of Syntactic Correctness of Input vulnerability"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.27.0]   |",
                "text": "GHSA-6v2p-p543-phr9:\ngolang.org/x/oauth2 Improper Validation of Syntactic Correctness of Input vulnerability\nGHSA-3wqc-mwfx-672p:\nTraefik affected by Go oauth2/jws Improper Validation of Syntactic Correctness of Input vulnerability"
              },
              "id": "CVE-2025-22868_golang.org/x/oauth2_0.6.0",
              "name": "CVE-2025-22868-golang.org/x/oauth2-0.6.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "golang.org/x/oauth2",
                      "version": "0.6.0",
                      "location": {
                        "file": "golang.org/x/oauth2"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-22868] golang.org/x/oauth2 0.6.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.31.0]   |",
                "text": "Applications and libraries which misuse connection.serverAuthenticate (via callback field ServerConfig.PublicKeyCallback) may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding..."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.31.0]   |",
                "text": "Applications and libraries which misuse connection.serverAuthenticate (via callback field ServerConfig.PublicKeyCallback) may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding..."
              },
              "id": "CVE-2024-45337_golang.org/x/crypto_0.7.0",
              "name": "CVE-2024-45337-golang.org/x/crypto-0.7.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "golang.org/x/crypto",
                      "version": "0.7.0",
                      "location": {
                        "file": "golang.org/x/crypto"
                      }
                    }
                  ]
                ],
                "security-severity": "9.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-45337] golang.org/x/crypto 0.7.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.23.0]   |",
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.23.0]   |",
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection."
              },
              "id": "CVE-2023-45288_golang.org/x/net_0.8.0",
              "name": "CVE-2023-45288-golang.org/x/net-0.8.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "golang.org/x/net",
                      "version": "0.8.0",
                      "location": {
                        "file": "golang.org/x/net"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-45288] golang.org/x/net 0.8.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.9], [1.20.4]   |",
                "text": "Angle brackets (<>) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.9], [1.20.4]   |",
                "text": "Angle brackets (<>) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input."
              },
              "id": "CVE-2023-24539_github.com/golang/go_1.19.8",
              "name": "CVE-2023-24539-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "7.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.0-0]   |",
                "text": "Command go env is documented as outputting a shell script containing the Go environment. However, go env doesn't sanitize values, so executing its output as a shell script can cause various bad bahaviors, including executing arbitrary commands or inserting new environment variables. This issue is relatively minor because, in general, if an attacker can set arbitrary environment variables on a system, they have better attack vectors than making \"go env\" print them out."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.0-0]   |",
                "text": "Command go env is documented as outputting a shell script containing the Go environment. However, go env doesn't sanitize values, so executing its output as a shell script can cause various bad bahaviors, including executing arbitrary commands or inserting new environment variables. This issue is relatively minor because, in general, if an attacker can set arbitrary environment variables on a system, they have better attack vectors than making \"go env\" print them out."
              },
              "id": "CVE-2023-24531_github.com/golang/go_1.19.8",
              "name": "CVE-2023-24531-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-24531] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.10], [1.20.5]   |",
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.10], [1.20.5]   |",
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler."
              },
              "id": "CVE-2023-29405_github.com/golang/go_1.19.8",
              "name": "CVE-2023-29405-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.0      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.23.12], [1.24.6]   |",
                "text": "Cancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.0      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.23.12], [1.24.6]   |",
                "text": "Cancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error."
              },
              "id": "CVE-2025-47907_github.com/golang/go_1.19.8",
              "name": "CVE-2025-47907-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "7.0"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-47907] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.33.0]   |",
                "text": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.33.0]   |",
                "text": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set."
              },
              "id": "CVE-2024-24786_google.golang.org/protobuf_1.29.1",
              "name": "CVE-2024-24786-google.golang.org/protobuf-1.29.1",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "google.golang.org/protobuf",
                      "version": "1.29.1",
                      "location": {
                        "file": "google.golang.org/protobuf"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-24786] google.golang.org/protobuf 1.29.1"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.22.7], [1.23.1]   |",
                "text": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.22.7], [1.23.1]   |",
                "text": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion."
              },
              "id": "CVE-2024-34158_github.com/golang/go_1.19.8",
              "name": "CVE-2024-34158-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-34158] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.53.2], [1.54.3], [1.55.2], [1.56.2]   |",
                "text": "gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/ Three vectors were found that allow the following DOS attacks:\n\n- Unbounded memory buffering in the HPACK parser\n- Unbounded CPU consumption in the HPACK parser\n\nThe unbounded CPU consumption is down to a copy that occurred per-input-block in the parser, and because that could be unbounded due to the memory copy bug we end up with an O(n^2) parsing loop, with n selected by the client.\n\nThe unbounded memory buffering bugs:\n\n- The header size limit check was behind the string reading code, so we needed to first buffer up to a 4 gigabyte string before rejecting it as longer than 8 or 16kb.\n- HPACK varints have an encoding quirk whereby an infinite number of 0’s can be added at the start of an integer. gRPC’s hpack parser needed to read all of them before concluding a parse.\n- gRPC’s metadata overflow check was performed per frame, so that the following sequence of frames could cause infinite buffering: HEADERS: containing a: 1 CONTINUATION: containing a: 2 CONTINUATION: containing a: 3 etc…"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.53.2], [1.54.3], [1.55.2], [1.56.2]   |",
                "text": "gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/ Three vectors were found that allow the following DOS attacks:\n\n- Unbounded memory buffering in the HPACK parser\n- Unbounded CPU consumption in the HPACK parser\n\nThe unbounded CPU consumption is down to a copy that occurred per-input-block in the parser, and because that could be unbounded due to the memory copy bug we end up with an O(n^2) parsing loop, with n selected by the client.\n\nThe unbounded memory buffering bugs:\n\n- The header size limit check was behind the string reading code, so we needed to first buffer up to a 4 gigabyte string before rejecting it as longer than 8 or 16kb.\n- HPACK varints have an encoding quirk whereby an infinite number of 0’s can be added at the start of an integer. gRPC’s hpack parser needed to read all of them before concluding a parse.\n- gRPC’s metadata overflow check was performed per frame, so that the following sequence of frames could cause infinite buffering: HEADERS: containing a: 1 CONTINUATION: containing a: 2 CONTINUATION: containing a: 3 etc…"
              },
              "id": "CVE-2023-33953_google.golang.org/grpc_1.53.0",
              "name": "CVE-2023-33953-google.golang.org/grpc-1.53.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "google.golang.org/grpc",
                      "version": "1.53.0",
                      "location": {
                        "file": "google.golang.org/grpc"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-33953] google.golang.org/grpc 1.53.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.11], [1.20.6]   |",
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.11], [1.20.6]   |",
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value."
              },
              "id": "CVE-2023-29406_github.com/golang/go_1.19.8",
              "name": "CVE-2023-29406-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.8], [1.22.1]   |",
                "text": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.8], [1.22.1]   |",
                "text": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded."
              },
              "id": "CVE-2023-45289_github.com/golang/go_1.19.8",
              "name": "CVE-2023-45289-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "4.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-45289] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.22.7], [1.23.1]   |",
                "text": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.22.7], [1.23.1]   |",
                "text": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion."
              },
              "id": "CVE-2024-34155_github.com/golang/go_1.19.8",
              "name": "CVE-2024-34155-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "4.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-34155] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.38.0]   |",
                "text": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. <math>, <svg>, etc contexts)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.38.0]   |",
                "text": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. <math>, <svg>, etc contexts)."
              },
              "id": "CVE-2025-22872_golang.org/x/net_0.8.0",
              "name": "CVE-2025-22872-golang.org/x/net-0.8.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "golang.org/x/net",
                      "version": "0.8.0",
                      "location": {
                        "file": "golang.org/x/net"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-22872] golang.org/x/net 0.8.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.58.3], [1.59.5], [1.60.2], [1.61.3], [1.62.3], [1.63.2], [1.64.3], [1.65.4]   |",
                "text": "It's possible for a gRPC client communicating with a HTTP/2 proxy to poison the HPACK table between the proxy and the backend such that other clients see failed requests. It's also possible to use this vulnerability to leak other clients HTTP header keys, but not values.\n\nThis occurs because the error status for a misencoded header is not cleared between header reads, resulting in subsequent (incrementally indexed) added headers in the first request being poisoned until cleared from the HPACK table.\n\nPlease update to a fixed version of gRPC as soon as possible. This bug has been fixed in 1.58.3, 1.59.5, 1.60.2, 1.61.3, 1.62.3, 1.63.2, 1.64.3, 1.65.4."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.58.3], [1.59.5], [1.60.2], [1.61.3], [1.62.3], [1.63.2], [1.64.3], [1.65.4]   |",
                "text": "It's possible for a gRPC client communicating with a HTTP/2 proxy to poison the HPACK table between the proxy and the backend such that other clients see failed requests. It's also possible to use this vulnerability to leak other clients HTTP header keys, but not values.\n\nThis occurs because the error status for a misencoded header is not cleared between header reads, resulting in subsequent (incrementally indexed) added headers in the first request being poisoned until cleared from the HPACK table.\n\nPlease update to a fixed version of gRPC as soon as possible. This bug has been fixed in 1.58.3, 1.59.5, 1.60.2, 1.61.3, 1.62.3, 1.63.2, 1.64.3, 1.65.4."
              },
              "id": "CVE-2024-7246_google.golang.org/grpc_1.53.0",
              "name": "CVE-2024-7246-google.golang.org/grpc-1.53.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "google.golang.org/grpc",
                      "version": "1.53.0",
                      "location": {
                        "file": "google.golang.org/grpc"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-7246] google.golang.org/grpc 1.53.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.23.8], [1.24.2]   |",
                "text": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.23.8], [1.24.2]   |",
                "text": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext."
              },
              "id": "CVE-2025-22871_github.com/golang/go_1.19.8",
              "name": "CVE-2025-22871-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "9.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-22871] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.12], [1.21.5]   |",
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.12], [1.21.5]   |",
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off)."
              },
              "id": "CVE-2023-45285_github.com/golang/go_1.19.8",
              "name": "CVE-2023-45285-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.35.0]   |",
                "text": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.35.0]   |",
                "text": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted."
              },
              "id": "CVE-2025-22869_golang.org/x/crypto_0.7.0",
              "name": "CVE-2025-22869-golang.org/x/crypto-0.7.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "golang.org/x/crypto",
                      "version": "0.7.0",
                      "location": {
                        "file": "golang.org/x/crypto"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-22869] golang.org/x/crypto 0.7.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.9], [1.21.2]   |",
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.9], [1.21.2]   |",
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex."
              },
              "id": "CVE-2023-39323_github.com/golang/go_1.19.8",
              "name": "CVE-2023-39323-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "8.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.12], [1.22.5]   |",
                "text": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail. An attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.12], [1.22.5]   |",
                "text": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail. An attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail."
              },
              "id": "CVE-2024-24791_github.com/golang/go_1.19.8",
              "name": "CVE-2024-24791-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-24791] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.17.0]   |",
                "text": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.17.0]   |",
                "text": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function."
              },
              "id": "CVE-2023-39325_golang.org/x/net_0.8.0",
              "name": "CVE-2023-39325-golang.org/x/net-0.8.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "golang.org/x/net",
                      "version": "0.8.0",
                      "location": {
                        "file": "golang.org/x/net"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-39325] golang.org/x/net 0.8.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.17.0]   |",
                "text": "Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound causes denial of service (High)"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.17.0]   |",
                "text": "Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound causes denial of service (High)"
              },
              "id": "CVE-2023-44487_golang.org/x/net_0.8.0",
              "name": "CVE-2023-44487-golang.org/x/net-0.8.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "golang.org/x/net",
                      "version": "0.8.0",
                      "location": {
                        "file": "golang.org/x/net"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-44487] golang.org/x/net 0.8.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.0      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.22.12], [1.23.6], [1.24.0-rc.3]   |",
                "text": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.0      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.22.12], [1.23.6], [1.24.0-rc.3]   |",
                "text": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols."
              },
              "id": "CVE-2025-22866_github.com/golang/go_1.19.8",
              "name": "CVE-2025-22866-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "4.0"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-22866] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.6      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.23.11], [1.24.5]   |",
                "text": "The go command may execute unexpected commands when operating in untrusted VCS repositories. This occurs when possibly dangerous VCS configuration is present in repositories. This can happen when a repository was fetched via one VCS (e.g. Git), but contains metadata for another VCS (e.g. Mercurial). Modules which are retrieved using the go command line, i.e. via \"go get\", are not affected."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.6      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.23.11], [1.24.5]   |",
                "text": "The go command may execute unexpected commands when operating in untrusted VCS repositories. This occurs when possibly dangerous VCS configuration is present in repositories. This can happen when a repository was fetched via one VCS (e.g. Git), but contains metadata for another VCS (e.g. Mercurial). Modules which are retrieved using the go command line, i.e. via \"go get\", are not affected."
              },
              "id": "CVE-2025-4674_github.com/golang/go_1.19.8",
              "name": "CVE-2025-4674-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "8.6"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-4674] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.11], [1.22.4]   |",
                "text": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.11], [1.22.4]   |",
                "text": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms."
              },
              "id": "CVE-2024-24790_github.com/golang/go_1.19.8",
              "name": "CVE-2024-24790-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-24790] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.0]   |",
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.0]   |",
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels."
              },
              "id": "CVE-2023-45287_github.com/golang/go_1.19.8",
              "name": "CVE-2023-45287-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.4      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.8], [1.22.1]   |",
                "text": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.4      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.8], [1.22.1]   |",
                "text": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates."
              },
              "id": "CVE-2024-24785_github.com/golang/go_1.19.8",
              "name": "CVE-2024-24785-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "5.4"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-24785] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.11], [1.21.4]   |",
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.11], [1.21.4]   |",
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local."
              },
              "id": "CVE-2023-45284_github.com/golang/go_1.19.8",
              "name": "CVE-2023-45284-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.12], [1.21.5]   |",
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.12], [1.21.5]   |",
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small."
              },
              "id": "CVE-2023-39326_github.com/golang/go_1.19.8",
              "name": "CVE-2023-39326-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.8], [1.21.1]   |",
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"<script\", \"<!--\", and \"</script\" within JS literals in <script> contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.8], [1.21.1]   |",
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"<script\", \"<!--\", and \"</script\" within JS literals in <script> contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack."
              },
              "id": "CVE-2023-39319_github.com/golang/go_1.19.8",
              "name": "CVE-2023-39319-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "6.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |",
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to <= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |",
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to <= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable."
              },
              "id": "CVE-2023-29409_github.com/golang/go_1.19.8",
              "name": "CVE-2023-29409-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.11], [1.22.4]   |",
                "text": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.11], [1.22.4]   |",
                "text": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors."
              },
              "id": "CVE-2024-24789_github.com/golang/go_1.19.8",
              "name": "CVE-2024-24789-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-24789] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.8], [1.22.1]   |",
                "text": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic. This affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.8], [1.22.1]   |",
                "text": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic. This affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates."
              },
              "id": "CVE-2024-24783_github.com/golang/go_1.19.8",
              "name": "CVE-2024-24783-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "5.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-24783] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | No fix available   |",
                "text": "git-urls 1.0.0 allows ReDOS (Regular Expression Denial of Service) in urls.go."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | No fix available   |",
                "text": "git-urls 1.0.0 allows ReDOS (Regular Expression Denial of Service) in urls.go."
              },
              "id": "CVE-2023-46402_github.com/whilp/git-urls_1.0.0",
              "name": "CVE-2023-46402-github.com/whilp/git-urls-1.0.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/whilp/git-urls",
                      "version": "1.0.0",
                      "location": {
                        "file": "github.com/whilp/git-urls"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-46402] github.com/whilp/git-urls 1.0.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.17.0]   |",
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.17.0]   |",
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust."
              },
              "id": "CVE-2023-48795_golang.org/x/crypto_0.7.0",
              "name": "CVE-2023-48795-golang.org/x/crypto-0.7.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "golang.org/x/crypto",
                      "version": "0.7.0",
                      "location": {
                        "file": "golang.org/x/crypto"
                      }
                    }
                  ]
                ],
                "security-severity": "5.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-48795] golang.org/x/crypto 0.7.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.22.7], [1.23.1]   |",
                "text": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.22.7], [1.23.1]   |",
                "text": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635."
              },
              "id": "CVE-2024-34156_github.com/golang/go_1.19.8",
              "name": "CVE-2024-34156-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-34156] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.10], [1.20.5]   |",
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.10], [1.20.5]   |",
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected)."
              },
              "id": "CVE-2023-29402_github.com/golang/go_1.19.8",
              "name": "CVE-2023-29402-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.9      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [3.0.4]   |",
                "text": "Go JOSE provides an implementation of the Javascript Object Signing and Encryption set of standards in Go, including support for JSON Web Encryption (JWE), JSON Web Signature (JWS), and JSON Web Token (JWT) standards. In versions on the 4.x branch prior to version 4.0.5, when parsing compact JWS or JWE input, Go JOSE could use excessive memory. The code used strings.Split(token, \".\") to split JWT tokens, which is vulnerable to excessive memory consumption when processing maliciously crafted tokens with a large number of `.` characters.  An attacker could exploit this by sending numerous malformed tokens, leading to memory exhaustion and a Denial of Service. Version 4.0.5 fixes this issue. As a workaround, applications could pre-validate that payloads passed to Go JOSE do not contain an excessive number of `.` characters."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.9      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [3.0.4]   |",
                "text": "Go JOSE provides an implementation of the Javascript Object Signing and Encryption set of standards in Go, including support for JSON Web Encryption (JWE), JSON Web Signature (JWS), and JSON Web Token (JWT) standards. In versions on the 4.x branch prior to version 4.0.5, when parsing compact JWS or JWE input, Go JOSE could use excessive memory. The code used strings.Split(token, \".\") to split JWT tokens, which is vulnerable to excessive memory consumption when processing maliciously crafted tokens with a large number of `.` characters.  An attacker could exploit this by sending numerous malformed tokens, leading to memory exhaustion and a Denial of Service. Version 4.0.5 fixes this issue. As a workaround, applications could pre-validate that payloads passed to Go JOSE do not contain an excessive number of `.` characters."
              },
              "id": "CVE-2025-27144_github.com/go-jose/go-jose/v3_3.0.0",
              "name": "CVE-2025-27144-github.com/go-jose/go-jose/v3-3.0.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/go-jose/go-jose/v3",
                      "version": "3.0.0",
                      "location": {
                        "file": "github.com/go-jose/go-jose/v3"
                      }
                    }
                  ]
                ],
                "security-severity": "6.9"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-27144] github.com/go-jose/go-jose/v3 3.0.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.22.11], [1.23.5], [1.24.0-rc.2]   |",
                "text": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com. In the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.22.11], [1.23.5], [1.24.0-rc.2]   |",
                "text": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com. In the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2."
              },
              "id": "CVE-2024-45336_github.com/golang/go_1.19.8",
              "name": "CVE-2024-45336-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "6.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-45336] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.10], [1.20.5]   |",
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.10], [1.20.5]   |",
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers."
              },
              "id": "CVE-2023-29403_github.com/golang/go_1.19.8",
              "name": "CVE-2023-29403-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "7.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |",
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |",
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored."
              },
              "id": "CVE-2023-45283_github.com/golang/go_1.19.8",
              "name": "CVE-2023-45283-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.22.11], [1.23.5], [1.24.0-rc.2]   |",
                "text": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain. Certificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.22.11], [1.23.5], [1.24.0-rc.2]   |",
                "text": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain. Certificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs."
              },
              "id": "CVE-2024-45341_github.com/golang/go_1.19.8",
              "name": "CVE-2024-45341-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "6.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-45341] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.29.0-alpha.3], [1.29.0-alpha.3]   |",
                "text": "Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound causes denial of service (High)"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.29.0-alpha.3], [1.29.0-alpha.3]   |",
                "text": "Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound causes denial of service (High)"
              },
              "id": "CVE-2023-44487_k8s.io/apimachinery_0.24.3",
              "name": "CVE-2023-44487-k8s.io/apimachinery-0.24.3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "k8s.io/apimachinery",
                      "version": "0.24.3",
                      "location": {
                        "file": "k8s.io/apimachinery"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-44487] k8s.io/apimachinery 0.24.3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.55.0]   |",
                "text": "When gRPC HTTP2 stack raised a header size exceeded error, it skipped parsing the rest of the HPACK frame. This caused any HPACK table mutations to also be skipped, resulting in a desynchronization of HPACK tables between sender and receiver. If leveraged, say, between a proxy and a backend, this could lead to requests from the proxy being interpreted as containing headers from different proxy clients - leading to an information leak that can be used for privilege escalation or data exfiltration. We recommend upgrading beyond the commit contained in  https://github.com/grpc/grpc/pull/33005 https://github.com/grpc/grpc/pull/33005"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.55.0]   |",
                "text": "When gRPC HTTP2 stack raised a header size exceeded error, it skipped parsing the rest of the HPACK frame. This caused any HPACK table mutations to also be skipped, resulting in a desynchronization of HPACK tables between sender and receiver. If leveraged, say, between a proxy and a backend, this could lead to requests from the proxy being interpreted as containing headers from different proxy clients - leading to an information leak that can be used for privilege escalation or data exfiltration. We recommend upgrading beyond the commit contained in  https://github.com/grpc/grpc/pull/33005 https://github.com/grpc/grpc/pull/33005"
              },
              "id": "CVE-2023-32731_google.golang.org/grpc_1.53.0",
              "name": "CVE-2023-32731-google.golang.org/grpc-1.53.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "google.golang.org/grpc",
                      "version": "1.53.0",
                      "location": {
                        "file": "google.golang.org/grpc"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-32731] google.golang.org/grpc 1.53.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.23.10], [1.24.4]   |",
                "text": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.23.10], [1.24.4]   |",
                "text": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink."
              },
              "id": "CVE-2025-0913_github.com/golang/go_1.19.8",
              "name": "CVE-2025-0913-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "5.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-0913] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.4      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.36.0]   |",
                "text": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.4      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.36.0]   |",
                "text": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied."
              },
              "id": "CVE-2025-22870_golang.org/x/net_0.8.0",
              "name": "CVE-2025-22870-golang.org/x/net-0.8.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "golang.org/x/net",
                      "version": "0.8.0",
                      "location": {
                        "file": "golang.org/x/net"
                      }
                    }
                  ]
                ],
                "security-severity": "4.4"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-22870] golang.org/x/net 0.8.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.13.0]   |",
                "text": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [0.13.0]   |",
                "text": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack."
              },
              "id": "CVE-2023-3978_golang.org/x/net_0.8.0",
              "name": "CVE-2023-3978-golang.org/x/net-0.8.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "golang.org/x/net",
                      "version": "0.8.0",
                      "location": {
                        "file": "golang.org/x/net"
                      }
                    }
                  ]
                ],
                "security-severity": "6.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-3978] golang.org/x/net 0.8.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.56.3], [1.57.1], [1.58.3]   |",
                "text": "Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound causes denial of service (High)"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.56.3], [1.57.1], [1.58.3]   |",
                "text": "Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound causes denial of service (High)"
              },
              "id": "CVE-2023-44487_google.golang.org/grpc_1.53.0",
              "name": "CVE-2023-44487-google.golang.org/grpc-1.53.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "google.golang.org/grpc",
                      "version": "1.53.0",
                      "location": {
                        "file": "google.golang.org/grpc"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-44487] google.golang.org/grpc 1.53.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.9], [1.22.2]   |",
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.9], [1.22.2]   |",
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection."
              },
              "id": "CVE-2023-45288_github.com/golang/go_1.19.8",
              "name": "CVE-2023-45288-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 10.0      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.9.6]   |",
                "text": "Argo Events is an event-driven workflow automation framework for Kubernetes. A user with permission to create/modify EventSource and Sensor custom resources can gain privileged access to the host system and cluster, even without having direct administrative privileges. The EventSource and Sensor CRs allow the corresponding orchestrated pod to be customized with spec.template and spec.template.container (with type k8s.io/api/core/v1.Container), thus, any specification under container such as command, args, securityContext , volumeMount can be specified, and applied to the EventSource or Sensor pod. With these, a user would be able to gain privileged access to the cluster host, if he/she specified the EventSource/Sensor CR with some particular properties under template. This vulnerability is fixed in v1.9.6."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 10.0      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.9.6]   |",
                "text": "Argo Events is an event-driven workflow automation framework for Kubernetes. A user with permission to create/modify EventSource and Sensor custom resources can gain privileged access to the host system and cluster, even without having direct administrative privileges. The EventSource and Sensor CRs allow the corresponding orchestrated pod to be customized with spec.template and spec.template.container (with type k8s.io/api/core/v1.Container), thus, any specification under container such as command, args, securityContext , volumeMount can be specified, and applied to the EventSource or Sensor pod. With these, a user would be able to gain privileged access to the cluster host, if he/she specified the EventSource/Sensor CR with some particular properties under template. This vulnerability is fixed in v1.9.6."
              },
              "id": "CVE-2025-32445_github.com/argoproj/argo-events_1.7.3",
              "name": "CVE-2025-32445-github.com/argoproj/argo-events-1.7.3",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-events",
                      "version": "1.7.3",
                      "location": {
                        "file": "github.com/argoproj/argo-events"
                      }
                    }
                  ]
                ],
                "security-severity": "10.0"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-32445] github.com/argoproj/argo-events 1.7.3"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.9], [1.20.4]   |",
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.9], [1.20.4]   |",
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution."
              },
              "id": "CVE-2023-24540_github.com/golang/go_1.19.8",
              "name": "CVE-2023-24540-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.8], [1.22.1]   |",
                "text": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion. With fix, the ParseMultipartForm function now correctly limits the maximum size of form lines."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.21.8], [1.22.1]   |",
                "text": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion. With fix, the ParseMultipartForm function now correctly limits the maximum size of form lines."
              },
              "id": "CVE-2023-45290_github.com/golang/go_1.19.8",
              "name": "CVE-2023-45290-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-45290] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.10], [1.20.5]   |",
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.19.10], [1.20.5]   |",
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers."
              },
              "id": "CVE-2023-29404_github.com/golang/go_1.19.8",
              "name": "CVE-2023-29404-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "9.8"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.19.8"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.8], [1.21.1]   |",
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in <script> contexts. This may cause the template parser to improperly interpret the contents of <script> contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar `       | [1.20.8], [1.21.1]   |",
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in <script> contexts. This may cause the template parser to improperly interpret the contents of <script> contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack."
              },
              "id": "CVE-2023-39318_github.com/golang/go_1.19.8",
              "name": "CVE-2023-39318-github.com/golang/go-1.19.8",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/argoproj/argocli",
                      "version": "v3.4.7"
                    },
                    {
                      "name": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__72994eab8e4f26696e0544834cfe70fe9e39ec112a499e6a6672c84137895b9b.tar"
                      }
                    },
                    {
                      "name": "github.com/argoproj/argo-workflows/v3/cmd/argo",
                      "version": "3.4.7",
                      "location": {
                        "file": "bin/argo"
                      }
                    },
                    {
                      "name": "github.com/golang/go",
                      "version": "1.19.8",
                      "location": {
                        "file": "github.com/golang/go"
                      }
                    }
                  ]
                ],
                "security-severity": "6.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.19.8"
              }
            }
          ],
          "supportedTaxonomies": [],
          "taxa": [],
          "version": "3.127.6"
        },
        "extensions": []
      },
      "translations": [],
      "versionControlProvenance": [],
      "webRequests": [],
      "webResponses": []
    }
  ],
  "properties": {}
}

