{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "addresses": [],
      "graphs": [],
      "invocations": [
        {
          "executionSuccessful": true,
          "notificationConfigurationOverrides": [],
          "ruleConfigurationOverrides": [],
          "toolConfigurationNotifications": [],
          "toolExecutionNotifications": [],
          "workingDirectory": {
            "index": -1,
            "uri": "file:///tmp/jfrog.cli.temp.-1756737240-3215448915"
          }
        }
      ],
      "language": "en-US",
      "logicalLocations": [],
      "newlineSequences": [
        "\r\n",
        "\n"
      ],
      "policies": [],
      "redactionTokens": [],
      "results": [
        {
          "fingerprints": {
            "jfrogFingerprintHash": "d43bb49a8b35f41db58551fc5ff6032a"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-45288] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar \nImage: quay.io/calico/csi:v3.25.1\nLayer (sha256): 91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
            "text": "[CVE-2023-45288] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar "
          },
          "properties": {
            "fixedVersion": "[0.23.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-45288_golang.org/x/net_0.7.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "3537d40b915337d3c59b0ffc7dece5ab"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-22870] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar \nImage: quay.io/calico/csi:v3.25.1\nLayer (sha256): 91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
            "text": "[CVE-2025-22870] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar "
          },
          "properties": {
            "fixedVersion": "[0.36.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-22870_golang.org/x/net_0.7.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "9725e44603d07445b31078deeb7517f7"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2025-22872] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar \nImage: quay.io/calico/csi:v3.25.1\nLayer (sha256): 91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
            "text": "[CVE-2025-22872] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar "
          },
          "properties": {
            "fixedVersion": "[0.38.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2025-22872_golang.org/x/net_0.7.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "7fd19d3f157d246fea204557d72a97ae"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-39325] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar \nImage: quay.io/calico/csi:v3.25.1\nLayer (sha256): 91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
            "text": "[CVE-2023-39325] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar "
          },
          "properties": {
            "fixedVersion": "[0.17.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-39325_golang.org/x/net_0.7.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "1fa42cbc66143b9a5fdf4a4b1043eaf7"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-3978] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar \nImage: quay.io/calico/csi:v3.25.1\nLayer (sha256): 91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
            "text": "[CVE-2023-3978] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar "
          },
          "properties": {
            "fixedVersion": "[0.13.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-3978_golang.org/x/net_0.7.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "b9ee85e18a061a1c8597438e52197dc6"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-44487] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar \nImage: quay.io/calico/csi:v3.25.1\nLayer (sha256): 91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
            "text": "[CVE-2023-44487] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar "
          },
          "properties": {
            "fixedVersion": "[1.56.3], [1.57.1], [1.58.3]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-44487_google.golang.org/grpc_1.40.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "7063ceb94ceff2b1f1418d6200cfc91f"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-44487] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar \nImage: quay.io/calico/csi:v3.25.1\nLayer (sha256): 91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
            "text": "[CVE-2023-44487] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar "
          },
          "properties": {
            "fixedVersion": "[0.17.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-44487_golang.org/x/net_0.7.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "18237ec9b17ddc9c8badef706a0390fe"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-32732] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar \nImage: quay.io/calico/csi:v3.25.1\nLayer (sha256): 91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
            "text": "[CVE-2023-32732] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar "
          },
          "properties": {
            "fixedVersion": "[1.53.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-32732_google.golang.org/grpc_1.40.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "75d7a56704e1631bc9cd5b64dd997ef5"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2023-33953] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar \nImage: quay.io/calico/csi:v3.25.1\nLayer (sha256): 91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
            "text": "[CVE-2023-33953] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar "
          },
          "properties": {
            "fixedVersion": "[1.53.2], [1.54.3], [1.55.2], [1.56.2]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2023-33953_google.golang.org/grpc_1.40.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "adf38d6252c16b04b3e63b861e79e0b2"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-7246] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar \nImage: quay.io/calico/csi:v3.25.1\nLayer (sha256): 91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
            "text": "[CVE-2024-7246] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar "
          },
          "properties": {
            "fixedVersion": "[1.58.3], [1.59.5], [1.60.2], [1.61.3], [1.62.3], [1.63.2], [1.64.3], [1.65.4]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-7246_google.golang.org/grpc_1.40.0",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        },
        {
          "fingerprints": {
            "jfrogFingerprintHash": "ade3810c49389fd793791e462efa706c"
          },
          "attachments": [],
          "codeFlows": [],
          "fixes": [],
          "graphTraversals": [],
          "graphs": [],
          "kind": "fail",
          "level": "warning",
          "locations": [
            {
              "annotations": [],
              "id": 0,
              "logicalLocations": [
                {
                  "index": -1,
                  "kind": "layer",
                  "name": "91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
                  "parentIndex": -1,
                  "properties": {
                    "algorithm": "sha256"
                  }
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "file://sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                },
                "region": {
                  "byteOffset": 0,
                  "charOffset": 0,
                  "endColumn": 1,
                  "endLine": 1,
                  "startColumn": 1,
                  "startLine": 1
                }
              },
              "relationships": []
            }
          ],
          "message": {
            "arguments": [],
            "markdown": "[CVE-2024-24786] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar \nImage: quay.io/calico/csi:v3.25.1\nLayer (sha256): 91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c",
            "text": "[CVE-2024-24786] sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar "
          },
          "properties": {
            "fixedVersion": "[1.33.0]"
          },
          "rank": -1,
          "relatedLocations": [],
          "ruleId": "CVE-2024-24786_google.golang.org/protobuf_1.28.1",
          "ruleIndex": -1,
          "stacks": [],
          "taxa": []
        }
      ],
      "runAggregates": [],
      "taxonomies": [],
      "threadFlowLocations": [],
      "tool": {
        "driver": {
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "isComprehensive": false,
          "language": "en-US",
          "locations": [],
          "name": "JFrog Xray Scanner",
          "notifications": [],
          "rules": [
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [0.23.0]   |",
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [0.23.0]   |",
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection."
              },
              "id": "CVE-2023-45288_golang.org/x/net_0.7.0",
              "name": "CVE-2023-45288-golang.org/x/net-0.7.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/calico/csi",
                      "version": "v3.25.1"
                    },
                    {
                      "name": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                      }
                    },
                    {
                      "name": "command-line-arguments",
                      "version": "6519adc215948bb7947c879a68ad81a42e7ed48e5387d5fad3117a1ea903b0a3",
                      "location": {
                        "file": "usr/local/bin/csi-driver"
                      }
                    },
                    {
                      "name": "golang.org/x/net",
                      "version": "0.7.0",
                      "location": {
                        "file": "golang.org/x/net"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-45288] golang.org/x/net 0.7.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.4      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [0.36.0]   |",
                "text": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.4      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [0.36.0]   |",
                "text": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied."
              },
              "id": "CVE-2025-22870_golang.org/x/net_0.7.0",
              "name": "CVE-2025-22870-golang.org/x/net-0.7.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/calico/csi",
                      "version": "v3.25.1"
                    },
                    {
                      "name": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                      }
                    },
                    {
                      "name": "command-line-arguments",
                      "version": "6519adc215948bb7947c879a68ad81a42e7ed48e5387d5fad3117a1ea903b0a3",
                      "location": {
                        "file": "usr/local/bin/csi-driver"
                      }
                    },
                    {
                      "name": "golang.org/x/net",
                      "version": "0.7.0",
                      "location": {
                        "file": "golang.org/x/net"
                      }
                    }
                  ]
                ],
                "security-severity": "4.4"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-22870] golang.org/x/net 0.7.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [0.13.0]   |",
                "text": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [0.13.0]   |",
                "text": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack."
              },
              "id": "CVE-2023-3978_golang.org/x/net_0.7.0",
              "name": "CVE-2023-3978-golang.org/x/net-0.7.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/calico/csi",
                      "version": "v3.25.1"
                    },
                    {
                      "name": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                      }
                    },
                    {
                      "name": "command-line-arguments",
                      "version": "6519adc215948bb7947c879a68ad81a42e7ed48e5387d5fad3117a1ea903b0a3",
                      "location": {
                        "file": "usr/local/bin/csi-driver"
                      }
                    },
                    {
                      "name": "golang.org/x/net",
                      "version": "0.7.0",
                      "location": {
                        "file": "golang.org/x/net"
                      }
                    }
                  ]
                ],
                "security-severity": "6.1"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-3978] golang.org/x/net 0.7.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [1.56.3], [1.57.1], [1.58.3]   |",
                "text": "Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound causes denial of service (High)"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [1.56.3], [1.57.1], [1.58.3]   |",
                "text": "Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound causes denial of service (High)"
              },
              "id": "CVE-2023-44487_google.golang.org/grpc_1.40.0",
              "name": "CVE-2023-44487-google.golang.org/grpc-1.40.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/calico/csi",
                      "version": "v3.25.1"
                    },
                    {
                      "name": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                      }
                    },
                    {
                      "name": "command-line-arguments",
                      "version": "6519adc215948bb7947c879a68ad81a42e7ed48e5387d5fad3117a1ea903b0a3",
                      "location": {
                        "file": "usr/local/bin/csi-driver"
                      }
                    },
                    {
                      "name": "google.golang.org/grpc",
                      "version": "1.40.0",
                      "location": {
                        "file": "google.golang.org/grpc"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-44487] google.golang.org/grpc 1.40.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [0.17.0]   |",
                "text": "Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound causes denial of service (High)"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [0.17.0]   |",
                "text": "Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound causes denial of service (High)"
              },
              "id": "CVE-2023-44487_golang.org/x/net_0.7.0",
              "name": "CVE-2023-44487-golang.org/x/net-0.7.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/calico/csi",
                      "version": "v3.25.1"
                    },
                    {
                      "name": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                      }
                    },
                    {
                      "name": "command-line-arguments",
                      "version": "6519adc215948bb7947c879a68ad81a42e7ed48e5387d5fad3117a1ea903b0a3",
                      "location": {
                        "file": "usr/local/bin/csi-driver"
                      }
                    },
                    {
                      "name": "golang.org/x/net",
                      "version": "0.7.0",
                      "location": {
                        "file": "golang.org/x/net"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-44487] golang.org/x/net 0.7.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [1.53.0]   |",
                "text": "gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in  https://github.com/grpc/grpc/pull/32309 https://www.google.com/url"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [1.53.0]   |",
                "text": "gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in  https://github.com/grpc/grpc/pull/32309 https://www.google.com/url"
              },
              "id": "CVE-2023-32732_google.golang.org/grpc_1.40.0",
              "name": "CVE-2023-32732-google.golang.org/grpc-1.40.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/calico/csi",
                      "version": "v3.25.1"
                    },
                    {
                      "name": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                      }
                    },
                    {
                      "name": "command-line-arguments",
                      "version": "6519adc215948bb7947c879a68ad81a42e7ed48e5387d5fad3117a1ea903b0a3",
                      "location": {
                        "file": "usr/local/bin/csi-driver"
                      }
                    },
                    {
                      "name": "google.golang.org/grpc",
                      "version": "1.40.0",
                      "location": {
                        "file": "google.golang.org/grpc"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-32732] google.golang.org/grpc 1.40.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [1.53.2], [1.54.3], [1.55.2], [1.56.2]   |",
                "text": "gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/ Three vectors were found that allow the following DOS attacks:\n\n- Unbounded memory buffering in the HPACK parser\n- Unbounded CPU consumption in the HPACK parser\n\nThe unbounded CPU consumption is down to a copy that occurred per-input-block in the parser, and because that could be unbounded due to the memory copy bug we end up with an O(n^2) parsing loop, with n selected by the client.\n\nThe unbounded memory buffering bugs:\n\n- The header size limit check was behind the string reading code, so we needed to first buffer up to a 4 gigabyte string before rejecting it as longer than 8 or 16kb.\n- HPACK varints have an encoding quirk whereby an infinite number of 0’s can be added at the start of an integer. gRPC’s hpack parser needed to read all of them before concluding a parse.\n- gRPC’s metadata overflow check was performed per frame, so that the following sequence of frames could cause infinite buffering: HEADERS: containing a: 1 CONTINUATION: containing a: 2 CONTINUATION: containing a: 3 etc…"
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [1.53.2], [1.54.3], [1.55.2], [1.56.2]   |",
                "text": "gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/ Three vectors were found that allow the following DOS attacks:\n\n- Unbounded memory buffering in the HPACK parser\n- Unbounded CPU consumption in the HPACK parser\n\nThe unbounded CPU consumption is down to a copy that occurred per-input-block in the parser, and because that could be unbounded due to the memory copy bug we end up with an O(n^2) parsing loop, with n selected by the client.\n\nThe unbounded memory buffering bugs:\n\n- The header size limit check was behind the string reading code, so we needed to first buffer up to a 4 gigabyte string before rejecting it as longer than 8 or 16kb.\n- HPACK varints have an encoding quirk whereby an infinite number of 0’s can be added at the start of an integer. gRPC’s hpack parser needed to read all of them before concluding a parse.\n- gRPC’s metadata overflow check was performed per frame, so that the following sequence of frames could cause infinite buffering: HEADERS: containing a: 1 CONTINUATION: containing a: 2 CONTINUATION: containing a: 3 etc…"
              },
              "id": "CVE-2023-33953_google.golang.org/grpc_1.40.0",
              "name": "CVE-2023-33953-google.golang.org/grpc-1.40.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/calico/csi",
                      "version": "v3.25.1"
                    },
                    {
                      "name": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                      }
                    },
                    {
                      "name": "command-line-arguments",
                      "version": "6519adc215948bb7947c879a68ad81a42e7ed48e5387d5fad3117a1ea903b0a3",
                      "location": {
                        "file": "usr/local/bin/csi-driver"
                      }
                    },
                    {
                      "name": "google.golang.org/grpc",
                      "version": "1.40.0",
                      "location": {
                        "file": "google.golang.org/grpc"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-33953] google.golang.org/grpc 1.40.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [0.38.0]   |",
                "text": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. <math>, <svg>, etc contexts)."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [0.38.0]   |",
                "text": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. <math>, <svg>, etc contexts)."
              },
              "id": "CVE-2025-22872_golang.org/x/net_0.7.0",
              "name": "CVE-2025-22872-golang.org/x/net-0.7.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/calico/csi",
                      "version": "v3.25.1"
                    },
                    {
                      "name": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                      }
                    },
                    {
                      "name": "command-line-arguments",
                      "version": "6519adc215948bb7947c879a68ad81a42e7ed48e5387d5fad3117a1ea903b0a3",
                      "location": {
                        "file": "usr/local/bin/csi-driver"
                      }
                    },
                    {
                      "name": "golang.org/x/net",
                      "version": "0.7.0",
                      "location": {
                        "file": "golang.org/x/net"
                      }
                    }
                  ]
                ],
                "security-severity": "6.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2025-22872] golang.org/x/net 0.7.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [0.17.0]   |",
                "text": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [0.17.0]   |",
                "text": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function."
              },
              "id": "CVE-2023-39325_golang.org/x/net_0.7.0",
              "name": "CVE-2023-39325-golang.org/x/net-0.7.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/calico/csi",
                      "version": "v3.25.1"
                    },
                    {
                      "name": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                      }
                    },
                    {
                      "name": "command-line-arguments",
                      "version": "6519adc215948bb7947c879a68ad81a42e7ed48e5387d5fad3117a1ea903b0a3",
                      "location": {
                        "file": "usr/local/bin/csi-driver"
                      }
                    },
                    {
                      "name": "golang.org/x/net",
                      "version": "0.7.0",
                      "location": {
                        "file": "golang.org/x/net"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2023-39325] golang.org/x/net 0.7.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [1.58.3], [1.59.5], [1.60.2], [1.61.3], [1.62.3], [1.63.2], [1.64.3], [1.65.4]   |",
                "text": "It's possible for a gRPC client communicating with a HTTP/2 proxy to poison the HPACK table between the proxy and the backend such that other clients see failed requests. It's also possible to use this vulnerability to leak other clients HTTP header keys, but not values.\n\nThis occurs because the error status for a misencoded header is not cleared between header reads, resulting in subsequent (incrementally indexed) added headers in the first request being poisoned until cleared from the HPACK table.\n\nPlease update to a fixed version of gRPC as soon as possible. This bug has been fixed in 1.58.3, 1.59.5, 1.60.2, 1.61.3, 1.62.3, 1.63.2, 1.64.3, 1.65.4."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [1.58.3], [1.59.5], [1.60.2], [1.61.3], [1.62.3], [1.63.2], [1.64.3], [1.65.4]   |",
                "text": "It's possible for a gRPC client communicating with a HTTP/2 proxy to poison the HPACK table between the proxy and the backend such that other clients see failed requests. It's also possible to use this vulnerability to leak other clients HTTP header keys, but not values.\n\nThis occurs because the error status for a misencoded header is not cleared between header reads, resulting in subsequent (incrementally indexed) added headers in the first request being poisoned until cleared from the HPACK table.\n\nPlease update to a fixed version of gRPC as soon as possible. This bug has been fixed in 1.58.3, 1.59.5, 1.60.2, 1.61.3, 1.62.3, 1.63.2, 1.64.3, 1.65.4."
              },
              "id": "CVE-2024-7246_google.golang.org/grpc_1.40.0",
              "name": "CVE-2024-7246-google.golang.org/grpc-1.40.0",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/calico/csi",
                      "version": "v3.25.1"
                    },
                    {
                      "name": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                      }
                    },
                    {
                      "name": "command-line-arguments",
                      "version": "6519adc215948bb7947c879a68ad81a42e7ed48e5387d5fad3117a1ea903b0a3",
                      "location": {
                        "file": "usr/local/bin/csi-driver"
                      }
                    },
                    {
                      "name": "google.golang.org/grpc",
                      "version": "1.40.0",
                      "location": {
                        "file": "google.golang.org/grpc"
                      }
                    }
                  ]
                ],
                "security-severity": "5.3"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-7246] google.golang.org/grpc 1.40.0"
              }
            },
            {
              "fullDescription": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [1.33.0]   |",
                "text": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set."
              },
              "help": {
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar `       | [1.33.0]   |",
                "text": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set."
              },
              "id": "CVE-2024-24786_google.golang.org/protobuf_1.28.1",
              "name": "CVE-2024-24786-google.golang.org/protobuf-1.28.1",
              "properties": {
                "impactPaths": [
                  [
                    {
                      "name": "quay.io/calico/csi",
                      "version": "v3.25.1"
                    },
                    {
                      "name": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar",
                      "version": "",
                      "location": {
                        "file": "sha256__91dbabdc3121b7f431ad40c00a6c7a448c43a682429d5f59f12c3e97ec36967c.tar"
                      }
                    },
                    {
                      "name": "command-line-arguments",
                      "version": "6519adc215948bb7947c879a68ad81a42e7ed48e5387d5fad3117a1ea903b0a3",
                      "location": {
                        "file": "usr/local/bin/csi-driver"
                      }
                    },
                    {
                      "name": "google.golang.org/protobuf",
                      "version": "1.28.1",
                      "location": {
                        "file": "google.golang.org/protobuf"
                      }
                    }
                  ]
                ],
                "security-severity": "7.5"
              },
              "relationships": [],
              "shortDescription": {
                "text": "[CVE-2024-24786] google.golang.org/protobuf 1.28.1"
              }
            }
          ],
          "supportedTaxonomies": [],
          "taxa": [],
          "version": "3.127.6"
        },
        "extensions": []
      },
      "translations": [],
      "versionControlProvenance": [],
      "webRequests": [],
      "webResponses": []
    }
  ],
  "properties": {}
}

