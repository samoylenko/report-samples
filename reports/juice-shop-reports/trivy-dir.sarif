{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2024-34394",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "libxmljs2 vulnerable to type confusion when parsing specially crafted XML"
              },
              "fullDescription": {
                "text": "libxmljs2 is vulnerable to a type confusion vulnerability when parsing a specially crafted XML while invoking the namespaces() function (which invokes XmlNode::get_local_namespaces()) on a grand-child of a node that refers to an entity. This vulnerability can lead to denial of service and remote code execution."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-34394",
              "help": {
                "text": "Vulnerability CVE-2024-34394\nSeverity: CRITICAL\nPackage: libxmljs2\nFixed Version: \nLink: [CVE-2024-34394](https://avd.aquasec.com/nvd/cve-2024-34394)\nlibxmljs2 is vulnerable to a type confusion vulnerability when parsing a specially crafted XML while invoking the namespaces() function (which invokes XmlNode::get_local_namespaces()) on a grand-child of a node that refers to an entity. This vulnerability can lead to denial of service and remote code execution.",
                "markdown": "**Vulnerability CVE-2024-34394**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|libxmljs2||[CVE-2024-34394](https://avd.aquasec.com/nvd/cve-2024-34394)|\n\nlibxmljs2 is vulnerable to a type confusion vulnerability when parsing a specially crafted XML while invoking the namespaces() function (which invokes XmlNode::get_local_namespaces()) on a grand-child of a node that refers to an entity. This vulnerability can lead to denial of service and remote code execution."
              },
              "properties": {
                "cvssv3_baseScore": 8.1,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2024-36751",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "parse-uri Regular expression Denial of Service (ReDoS)"
              },
              "fullDescription": {
                "text": "An issue in parse-uri v1.0.9 allows attackers to cause a Regular expression Denial of Service (ReDoS) via a crafted URL."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-36751",
              "help": {
                "text": "Vulnerability CVE-2024-36751\nSeverity: MEDIUM\nPackage: parseuri\nFixed Version: 2.0.0\nLink: [CVE-2024-36751](https://avd.aquasec.com/nvd/cve-2024-36751)\nAn issue in parse-uri v1.0.9 allows attackers to cause a Regular expression Denial of Service (ReDoS) via a crafted URL.",
                "markdown": "**Vulnerability CVE-2024-36751**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|parseuri|2.0.0|[CVE-2024-36751](https://avd.aquasec.com/nvd/cve-2024-36751)|\n\nAn issue in parse-uri v1.0.9 allows attackers to cause a Regular expression Denial of Service (ReDoS) via a crafted URL."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-32695",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "socket.io parser is a socket.io encoder and decoder written in JavaScr ..."
              },
              "fullDescription": {
                "text": "socket.io parser is a socket.io encoder and decoder written in JavaScript complying with version 5 of socket.io-protocol. A specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process. A patch has been released in version 4.2.3.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-32695",
              "help": {
                "text": "Vulnerability CVE-2023-32695\nSeverity: MEDIUM\nPackage: socket.io-parser\nFixed Version: 4.2.3, 3.4.3, 3.3.4\nLink: [CVE-2023-32695](https://avd.aquasec.com/nvd/cve-2023-32695)\nsocket.io parser is a socket.io encoder and decoder written in JavaScript complying with version 5 of socket.io-protocol. A specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process. A patch has been released in version 4.2.3.\n\n",
                "markdown": "**Vulnerability CVE-2023-32695**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|socket.io-parser|4.2.3, 3.4.3, 3.3.4|[CVE-2023-32695](https://avd.aquasec.com/nvd/cve-2023-32695)|\n\nsocket.io parser is a socket.io encoder and decoder written in JavaScript complying with version 5 of socket.io-protocol. A specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process. A patch has been released in version 4.2.3.\n\n"
              },
              "properties": {
                "cvssv3_baseScore": 7.3,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-37890",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-ws: denial of service when handling a request with many HTTP headers"
              },
              "fullDescription": {
                "text": "ws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-37890",
              "help": {
                "text": "Vulnerability CVE-2024-37890\nSeverity: HIGH\nPackage: ws\nFixed Version: 5.2.4, 6.2.3, 7.5.10, 8.17.1\nLink: [CVE-2024-37890](https://avd.aquasec.com/nvd/cve-2024-37890)\nws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied.",
                "markdown": "**Vulnerability CVE-2024-37890**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ws|5.2.4, 6.2.3, 7.5.10, 8.17.1|[CVE-2024-37890](https://avd.aquasec.com/nvd/cve-2024-37890)|\n\nws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied."
              },
              "properties": {
                "cvssv3_baseScore": 7.5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "NSWG-ECO-428",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Out-of-bounds Read"
              },
              "fullDescription": {
                "text": "`base64url` allocates uninitialized Buffers when number is passed in input on Node.js 4.x and below"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://hackerone.com/reports/321687",
              "help": {
                "text": "Vulnerability NSWG-ECO-428\nSeverity: HIGH\nPackage: base64url\nFixed Version: \u003e=3.0.0\nLink: [NSWG-ECO-428](https://hackerone.com/reports/321687)\n`base64url` allocates uninitialized Buffers when number is passed in input on Node.js 4.x and below",
                "markdown": "**Vulnerability NSWG-ECO-428**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|base64url|\u003e=3.0.0|[NSWG-ECO-428](https://hackerone.com/reports/321687)|\n\n`base64url` allocates uninitialized Buffers when number is passed in input on Node.js 4.x and below"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "GHSA-rvg8-pwq2-xj7q",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Out-of-bounds Read in base64url"
              },
              "fullDescription": {
                "text": "Versions of `base64url` before 3.0.0 are vulnerable to to out-of-bounds reads as it allocates uninitialized Buffers when number is passed in input on Node.js 4.x and below.\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-rvg8-pwq2-xj7q",
              "help": {
                "text": "Vulnerability GHSA-rvg8-pwq2-xj7q\nSeverity: MEDIUM\nPackage: base64url\nFixed Version: 3.0.0\nLink: [GHSA-rvg8-pwq2-xj7q](https://github.com/advisories/GHSA-rvg8-pwq2-xj7q)\nVersions of `base64url` before 3.0.0 are vulnerable to to out-of-bounds reads as it allocates uninitialized Buffers when number is passed in input on Node.js 4.x and below.\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later.",
                "markdown": "**Vulnerability GHSA-rvg8-pwq2-xj7q**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|base64url|3.0.0|[GHSA-rvg8-pwq2-xj7q](https://github.com/advisories/GHSA-rvg8-pwq2-xj7q)|\n\nVersions of `base64url` before 3.0.0 are vulnerable to to out-of-bounds reads as it allocates uninitialized Buffers when number is passed in input on Node.js 4.x and below.\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-4068",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "braces: fails to limit the number of characters it can handle"
              },
              "fullDescription": {
                "text": "The NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-4068",
              "help": {
                "text": "Vulnerability CVE-2024-4068\nSeverity: HIGH\nPackage: braces\nFixed Version: 3.0.3\nLink: [CVE-2024-4068](https://avd.aquasec.com/nvd/cve-2024-4068)\nThe NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash.",
                "markdown": "**Vulnerability CVE-2024-4068**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|braces|3.0.3|[CVE-2024-4068](https://avd.aquasec.com/nvd/cve-2024-4068)|\n\nThe NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash."
              },
              "properties": {
                "cvssv3_baseScore": 7.5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-47764",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "cookie: cookie accepts cookie name, path, and domain with out of bounds characters"
              },
              "fullDescription": {
                "text": "cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-47764",
              "help": {
                "text": "Vulnerability CVE-2024-47764\nSeverity: LOW\nPackage: cookie\nFixed Version: 0.7.0\nLink: [CVE-2024-47764](https://avd.aquasec.com/nvd/cve-2024-47764)\ncookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain.",
                "markdown": "**Vulnerability CVE-2024-47764**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|cookie|0.7.0|[CVE-2024-47764](https://avd.aquasec.com/nvd/cve-2024-47764)|\n\ncookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-46233",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "crypto-js: PBKDF2 1,000 times weaker than specified in 1993 and 1.3M times weaker than current standard"
              },
              "fullDescription": {
                "text": "crypto-js is a JavaScript library of crypto standards. Prior to version 4.2.0, crypto-js PBKDF2 is 1,000 times weaker than originally specified in 1993, and at least 1,300,000 times weaker than current industry standard. This is because it both defaults to SHA1, a cryptographic hash algorithm considered insecure since at least 2005, and defaults to one single iteration, a 'strength' or 'difficulty' value specified at 1,000 when specified in 1993. PBKDF2 relies on iteration count as a countermeasure to preimage and collision attacks. If used to protect passwords, the impact is high. If used to generate signatures, the impact is high. Version 4.2.0 contains a patch for this issue. As a workaround, configure crypto-js to use SHA256 with at least 250,000 iterations."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-46233",
              "help": {
                "text": "Vulnerability CVE-2023-46233\nSeverity: CRITICAL\nPackage: crypto-js\nFixed Version: 4.2.0\nLink: [CVE-2023-46233](https://avd.aquasec.com/nvd/cve-2023-46233)\ncrypto-js is a JavaScript library of crypto standards. Prior to version 4.2.0, crypto-js PBKDF2 is 1,000 times weaker than originally specified in 1993, and at least 1,300,000 times weaker than current industry standard. This is because it both defaults to SHA1, a cryptographic hash algorithm considered insecure since at least 2005, and defaults to one single iteration, a 'strength' or 'difficulty' value specified at 1,000 when specified in 1993. PBKDF2 relies on iteration count as a countermeasure to preimage and collision attacks. If used to protect passwords, the impact is high. If used to generate signatures, the impact is high. Version 4.2.0 contains a patch for this issue. As a workaround, configure crypto-js to use SHA256 with at least 250,000 iterations.",
                "markdown": "**Vulnerability CVE-2023-46233**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|crypto-js|4.2.0|[CVE-2023-46233](https://avd.aquasec.com/nvd/cve-2023-46233)|\n\ncrypto-js is a JavaScript library of crypto standards. Prior to version 4.2.0, crypto-js PBKDF2 is 1,000 times weaker than originally specified in 1993, and at least 1,300,000 times weaker than current industry standard. This is because it both defaults to SHA1, a cryptographic hash algorithm considered insecure since at least 2005, and defaults to one single iteration, a 'strength' or 'difficulty' value specified at 1,000 when specified in 1993. PBKDF2 relies on iteration count as a countermeasure to preimage and collision attacks. If used to protect passwords, the impact is high. If used to generate signatures, the impact is high. Version 4.2.0 contains a patch for this issue. As a workaround, configure crypto-js to use SHA256 with at least 250,000 iterations."
              },
              "properties": {
                "cvssv3_baseScore": 9.1,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-41940",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "engine.io: Specially crafted HTTP request can trigger an uncaught exception"
              },
              "fullDescription": {
                "text": "Engine.IO is the implementation of transport-based cross-browser/cross-device bi-directional communication layer for Socket.IO. A specially crafted HTTP request can trigger an uncaught exception on the Engine.IO server, thus killing the Node.js process. This impacts all the users of the engine.io package, including those who uses depending packages like socket.io. There is no known workaround except upgrading to a safe version. There are patches for this issue released in versions 3.6.1 and 6.2.1."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41940",
              "help": {
                "text": "Vulnerability CVE-2022-41940\nSeverity: MEDIUM\nPackage: engine.io\nFixed Version: 3.6.1, 6.2.1\nLink: [CVE-2022-41940](https://avd.aquasec.com/nvd/cve-2022-41940)\nEngine.IO is the implementation of transport-based cross-browser/cross-device bi-directional communication layer for Socket.IO. A specially crafted HTTP request can trigger an uncaught exception on the Engine.IO server, thus killing the Node.js process. This impacts all the users of the engine.io package, including those who uses depending packages like socket.io. There is no known workaround except upgrading to a safe version. There are patches for this issue released in versions 3.6.1 and 6.2.1.",
                "markdown": "**Vulnerability CVE-2022-41940**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|engine.io|3.6.1, 6.2.1|[CVE-2022-41940](https://avd.aquasec.com/nvd/cve-2022-41940)|\n\nEngine.IO is the implementation of transport-based cross-browser/cross-device bi-directional communication layer for Socket.IO. A specially crafted HTTP request can trigger an uncaught exception on the Engine.IO server, thus killing the Node.js process. This impacts all the users of the engine.io package, including those who uses depending packages like socket.io. There is no known workaround except upgrading to a safe version. There are patches for this issue released in versions 3.6.1 and 6.2.1."
              },
              "properties": {
                "cvssv3_baseScore": 6.5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-15084",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Authorization bypass in express-jwt"
              },
              "fullDescription": {
                "text": "In express-jwt (NPM package) up and including version 5.3.3, the algorithms entry to be specified in the configuration is not being enforced. When algorithms is not specified in the configuration, with the combination of jwks-rsa, it may lead to authorization bypass. You are affected by this vulnerability if all of the following conditions apply: - You are using express-jwt - You do not have **algorithms** configured in your express-jwt configuration. - You are using libraries such as jwks-rsa as the **secret**. You can fix this by specifying **algorithms** in the express-jwt configuration. See linked GHSA for example. This is also fixed in version 6.0.0."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-15084",
              "help": {
                "text": "Vulnerability CVE-2020-15084\nSeverity: HIGH\nPackage: express-jwt\nFixed Version: 6.0.0\nLink: [CVE-2020-15084](https://avd.aquasec.com/nvd/cve-2020-15084)\nIn express-jwt (NPM package) up and including version 5.3.3, the algorithms entry to be specified in the configuration is not being enforced. When algorithms is not specified in the configuration, with the combination of jwks-rsa, it may lead to authorization bypass. You are affected by this vulnerability if all of the following conditions apply: - You are using express-jwt - You do not have **algorithms** configured in your express-jwt configuration. - You are using libraries such as jwks-rsa as the **secret**. You can fix this by specifying **algorithms** in the express-jwt configuration. See linked GHSA for example. This is also fixed in version 6.0.0.",
                "markdown": "**Vulnerability CVE-2020-15084**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|express-jwt|6.0.0|[CVE-2020-15084](https://avd.aquasec.com/nvd/cve-2020-15084)|\n\nIn express-jwt (NPM package) up and including version 5.3.3, the algorithms entry to be specified in the configuration is not being enforced. When algorithms is not specified in the configuration, with the combination of jwks-rsa, it may lead to authorization bypass. You are affected by this vulnerability if all of the following conditions apply: - You are using express-jwt - You do not have **algorithms** configured in your express-jwt configuration. - You are using libraries such as jwks-rsa as the **secret**. You can fix this by specifying **algorithms** in the express-jwt configuration. See linked GHSA for example. This is also fixed in version 6.0.0."
              },
              "properties": {
                "cvssv3_baseScore": 7.7,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N",
                "precision": "very-high",
                "security-severity": "7.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-33987",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-got: missing verification of requested URLs allows redirects to UNIX sockets"
              },
              "fullDescription": {
                "text": "The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-33987",
              "help": {
                "text": "Vulnerability CVE-2022-33987\nSeverity: MEDIUM\nPackage: got\nFixed Version: 12.1.0, 11.8.5\nLink: [CVE-2022-33987](https://avd.aquasec.com/nvd/cve-2022-33987)\nThe got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.",
                "markdown": "**Vulnerability CVE-2022-33987**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|got|12.1.0, 11.8.5|[CVE-2022-33987](https://avd.aquasec.com/nvd/cve-2022-33987)|\n\nThe got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket."
              },
              "properties": {
                "cvssv3_baseScore": 5.3,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-25881",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "http-cache-semantics: Regular Expression Denial of Service (ReDoS) vulnerability"
              },
              "fullDescription": {
                "text": "This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-25881",
              "help": {
                "text": "Vulnerability CVE-2022-25881\nSeverity: HIGH\nPackage: http-cache-semantics\nFixed Version: 4.1.1\nLink: [CVE-2022-25881](https://avd.aquasec.com/nvd/cve-2022-25881)\nThis affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.",
                "markdown": "**Vulnerability CVE-2022-25881**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|http-cache-semantics|4.1.1|[CVE-2022-25881](https://avd.aquasec.com/nvd/cve-2022-25881)|\n\nThis affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library."
              },
              "properties": {
                "cvssv3_baseScore": 7.5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-29415",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "node-ip: Incomplete fix for CVE-2023-42282"
              },
              "fullDescription": {
                "text": "The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-29415",
              "help": {
                "text": "Vulnerability CVE-2024-29415\nSeverity: HIGH\nPackage: ip\nFixed Version: \nLink: [CVE-2024-29415](https://avd.aquasec.com/nvd/cve-2024-29415)\nThe ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.",
                "markdown": "**Vulnerability CVE-2024-29415**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ip||[CVE-2024-29415](https://avd.aquasec.com/nvd/cve-2024-29415)|\n\nThe ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282."
              },
              "properties": {
                "cvssv3_baseScore": 8.1,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2015-9235",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-jsonwebtoken: verification step bypass with an altered token"
              },
              "fullDescription": {
                "text": "In jsonwebtoken node module before 4.2.2 it is possible for an attacker to bypass verification when a token digitally signed with an asymmetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2015-9235",
              "help": {
                "text": "Vulnerability CVE-2015-9235\nSeverity: CRITICAL\nPackage: jsonwebtoken\nFixed Version: 4.2.2\nLink: [CVE-2015-9235](https://avd.aquasec.com/nvd/cve-2015-9235)\nIn jsonwebtoken node module before 4.2.2 it is possible for an attacker to bypass verification when a token digitally signed with an asymmetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family).",
                "markdown": "**Vulnerability CVE-2015-9235**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|jsonwebtoken|4.2.2|[CVE-2015-9235](https://avd.aquasec.com/nvd/cve-2015-9235)|\n\nIn jsonwebtoken node module before 4.2.2 it is possible for an attacker to bypass verification when a token digitally signed with an asymmetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-23539",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jsonwebtoken: Unrestricted key type could lead to legacy keys usagen"
              },
              "fullDescription": {
                "text": "Versions `\u003c=8.5.1` of `jsonwebtoken` library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. You are affected if you are using an algorithm and a key type other than a combination listed in the GitHub Security Advisory as unaffected. This issue has been fixed, please update to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, if you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you’ll need to set the `allowInvalidAsymmetricKeyTypes` option  to `true` in the `sign()` and/or `verify()` functions."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23539",
              "help": {
                "text": "Vulnerability CVE-2022-23539\nSeverity: HIGH\nPackage: jsonwebtoken\nFixed Version: 9.0.0\nLink: [CVE-2022-23539](https://avd.aquasec.com/nvd/cve-2022-23539)\nVersions `\u003c=8.5.1` of `jsonwebtoken` library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. You are affected if you are using an algorithm and a key type other than a combination listed in the GitHub Security Advisory as unaffected. This issue has been fixed, please update to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, if you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you’ll need to set the `allowInvalidAsymmetricKeyTypes` option  to `true` in the `sign()` and/or `verify()` functions.",
                "markdown": "**Vulnerability CVE-2022-23539**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|jsonwebtoken|9.0.0|[CVE-2022-23539](https://avd.aquasec.com/nvd/cve-2022-23539)|\n\nVersions `\u003c=8.5.1` of `jsonwebtoken` library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. You are affected if you are using an algorithm and a key type other than a combination listed in the GitHub Security Advisory as unaffected. This issue has been fixed, please update to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, if you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you’ll need to set the `allowInvalidAsymmetricKeyTypes` option  to `true` in the `sign()` and/or `verify()` functions."
              },
              "properties": {
                "cvssv3_baseScore": 8.1,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "NSWG-ECO-17",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Verification Bypass"
              },
              "fullDescription": {
                "text": "It is possible for an attacker to bypass verification when \"a token digitally signed with an asymetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family)\" [1]"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "text": "Vulnerability NSWG-ECO-17\nSeverity: HIGH\nPackage: jsonwebtoken\nFixed Version: \u003e=4.2.2\nLink: [NSWG-ECO-17]()\nIt is possible for an attacker to bypass verification when \"a token digitally signed with an asymetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family)\" [1]",
                "markdown": "**Vulnerability NSWG-ECO-17**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|jsonwebtoken|\u003e=4.2.2|[NSWG-ECO-17]()|\n\nIt is possible for an attacker to bypass verification when \"a token digitally signed with an asymetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family)\" [1]"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-23540",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jsonwebtoken: Insecure default algorithm in jwt.verify() could lead to signature validation bypass"
              },
              "fullDescription": {
                "text": "In versions `\u003c=8.5.1` of `jsonwebtoken` library, lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. Users are affected if you do not specify algorithms in the `jwt.verify()` function. This issue has been fixed, please update to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. There will be no impact, if you update to version 9.0.0 and you don’t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23540",
              "help": {
                "text": "Vulnerability CVE-2022-23540\nSeverity: MEDIUM\nPackage: jsonwebtoken\nFixed Version: 9.0.0\nLink: [CVE-2022-23540](https://avd.aquasec.com/nvd/cve-2022-23540)\nIn versions `\u003c=8.5.1` of `jsonwebtoken` library, lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. Users are affected if you do not specify algorithms in the `jwt.verify()` function. This issue has been fixed, please update to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. There will be no impact, if you update to version 9.0.0 and you don’t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options.",
                "markdown": "**Vulnerability CVE-2022-23540**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|jsonwebtoken|9.0.0|[CVE-2022-23540](https://avd.aquasec.com/nvd/cve-2022-23540)|\n\nIn versions `\u003c=8.5.1` of `jsonwebtoken` library, lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. Users are affected if you do not specify algorithms in the `jwt.verify()` function. This issue has been fixed, please update to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. There will be no impact, if you update to version 9.0.0 and you don’t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options."
              },
              "properties": {
                "cvssv3_baseScore": 6.4,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:L",
                "precision": "very-high",
                "security-severity": "6.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-23541",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jsonwebtoken: Insecure implementation of key retrieval function could lead to Forgeable Public/Private Tokens from RSA to HMAC"
              },
              "fullDescription": {
                "text": "jsonwebtoken is an implementation of JSON Web Tokens. Versions `\u003c= 8.5.1` of `jsonwebtoken` library can be misconfigured so that passing a poorly implemented key retrieval function referring to the `secretOrPublicKey` argument from the readme link will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification, other than the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of  forged tokens. If your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. This issue has been patched, please update to version 9.0.0."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23541",
              "help": {
                "text": "Vulnerability CVE-2022-23541\nSeverity: MEDIUM\nPackage: jsonwebtoken\nFixed Version: 9.0.0\nLink: [CVE-2022-23541](https://avd.aquasec.com/nvd/cve-2022-23541)\njsonwebtoken is an implementation of JSON Web Tokens. Versions `\u003c= 8.5.1` of `jsonwebtoken` library can be misconfigured so that passing a poorly implemented key retrieval function referring to the `secretOrPublicKey` argument from the readme link will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification, other than the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of  forged tokens. If your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. This issue has been patched, please update to version 9.0.0.",
                "markdown": "**Vulnerability CVE-2022-23541**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|jsonwebtoken|9.0.0|[CVE-2022-23541](https://avd.aquasec.com/nvd/cve-2022-23541)|\n\njsonwebtoken is an implementation of JSON Web Tokens. Versions `\u003c= 8.5.1` of `jsonwebtoken` library can be misconfigured so that passing a poorly implemented key retrieval function referring to the `secretOrPublicKey` argument from the readme link will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification, other than the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of  forged tokens. If your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. This issue has been patched, please update to version 9.0.0."
              },
              "properties": {
                "cvssv3_baseScore": 5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L",
                "precision": "very-high",
                "security-severity": "5.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2016-1000223",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Forgeable Public/Private Tokens"
              },
              "fullDescription": {
                "text": "Since \"algorithm\" isn't enforced in `jws.verify()`, a malicious user could choose what algorithm is sent to the server. If the server is expecting RSA but is sent HMAC-SHA with RSA's public key, the server will think the public key is actually an HMAC private key. This could be used to forge any data an attacker wants.\n\nIn addition, there is the `none` algorithm to be concerned about.  In versions prior to 3.0.0, verification of the token could be bypassed when the `alg` field is set to `none`.\n\n*Edit ( 7/29/16 ): A previous version of this advisory incorrectly stated that the vulnerability was patched in version 2.0.0 instead of 3.0.0. The advisory has been updated to reflect this new information. Thanks to Fabien Catteau for reporting the error.*"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2016-1000223",
              "help": {
                "text": "Vulnerability CVE-2016-1000223\nSeverity: HIGH\nPackage: jws\nFixed Version: \u003e=3.0.0\nLink: [CVE-2016-1000223](https://avd.aquasec.com/nvd/cve-2016-1000223)\nSince \"algorithm\" isn't enforced in `jws.verify()`, a malicious user could choose what algorithm is sent to the server. If the server is expecting RSA but is sent HMAC-SHA with RSA's public key, the server will think the public key is actually an HMAC private key. This could be used to forge any data an attacker wants.\n\nIn addition, there is the `none` algorithm to be concerned about.  In versions prior to 3.0.0, verification of the token could be bypassed when the `alg` field is set to `none`.\n\n*Edit ( 7/29/16 ): A previous version of this advisory incorrectly stated that the vulnerability was patched in version 2.0.0 instead of 3.0.0. The advisory has been updated to reflect this new information. Thanks to Fabien Catteau for reporting the error.*",
                "markdown": "**Vulnerability CVE-2016-1000223**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|jws|\u003e=3.0.0|[CVE-2016-1000223](https://avd.aquasec.com/nvd/cve-2016-1000223)|\n\nSince \"algorithm\" isn't enforced in `jws.verify()`, a malicious user could choose what algorithm is sent to the server. If the server is expecting RSA but is sent HMAC-SHA with RSA's public key, the server will think the public key is actually an HMAC private key. This could be used to forge any data an attacker wants.\n\nIn addition, there is the `none` algorithm to be concerned about.  In versions prior to 3.0.0, verification of the token could be bypassed when the `alg` field is set to `none`.\n\n*Edit ( 7/29/16 ): A previous version of this advisory incorrectly stated that the vulnerability was patched in version 2.0.0 instead of 3.0.0. The advisory has been updated to reflect this new information. Thanks to Fabien Catteau for reporting the error.*"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2019-10744",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-lodash: prototype pollution in defaultsDeep function leading to modifying properties"
              },
              "fullDescription": {
                "text": "Versions of lodash lower than 4.17.12 are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-10744",
              "help": {
                "text": "Vulnerability CVE-2019-10744\nSeverity: CRITICAL\nPackage: lodash\nFixed Version: 4.17.12\nLink: [CVE-2019-10744](https://avd.aquasec.com/nvd/cve-2019-10744)\nVersions of lodash lower than 4.17.12 are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.",
                "markdown": "**Vulnerability CVE-2019-10744**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|lodash|4.17.12|[CVE-2019-10744](https://avd.aquasec.com/nvd/cve-2019-10744)|\n\nVersions of lodash lower than 4.17.12 are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload."
              },
              "properties": {
                "cvssv3_baseScore": 9.1,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H",
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2018-16487",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "lodash: Prototype pollution in utilities function"
              },
              "fullDescription": {
                "text": "A prototype pollution vulnerability was found in lodash \u003c4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-16487",
              "help": {
                "text": "Vulnerability CVE-2018-16487\nSeverity: HIGH\nPackage: lodash\nFixed Version: \u003e=4.17.11\nLink: [CVE-2018-16487](https://avd.aquasec.com/nvd/cve-2018-16487)\nA prototype pollution vulnerability was found in lodash \u003c4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype.",
                "markdown": "**Vulnerability CVE-2018-16487**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|lodash|\u003e=4.17.11|[CVE-2018-16487](https://avd.aquasec.com/nvd/cve-2018-16487)|\n\nA prototype pollution vulnerability was found in lodash \u003c4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-23337",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-lodash: command injection via template"
              },
              "fullDescription": {
                "text": "Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-23337",
              "help": {
                "text": "Vulnerability CVE-2021-23337\nSeverity: HIGH\nPackage: lodash\nFixed Version: 4.17.21\nLink: [CVE-2021-23337](https://avd.aquasec.com/nvd/cve-2021-23337)\nLodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.",
                "markdown": "**Vulnerability CVE-2021-23337**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|lodash|4.17.21|[CVE-2021-23337](https://avd.aquasec.com/nvd/cve-2021-23337)|\n\nLodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function."
              },
              "properties": {
                "cvssv3_baseScore": 7.2,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
                "precision": "very-high",
                "security-severity": "7.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2019-1010266",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "lodash: uncontrolled resource consumption in Data handler causing denial of service"
              },
              "fullDescription": {
                "text": "lodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-1010266",
              "help": {
                "text": "Vulnerability CVE-2019-1010266\nSeverity: MEDIUM\nPackage: lodash\nFixed Version: 4.17.11\nLink: [CVE-2019-1010266](https://avd.aquasec.com/nvd/cve-2019-1010266)\nlodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11.",
                "markdown": "**Vulnerability CVE-2019-1010266**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|lodash|4.17.11|[CVE-2019-1010266](https://avd.aquasec.com/nvd/cve-2019-1010266)|\n\nlodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-28500",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-lodash: ReDoS via the toNumber, trim and trimEnd functions"
              },
              "fullDescription": {
                "text": "Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-28500",
              "help": {
                "text": "Vulnerability CVE-2020-28500\nSeverity: MEDIUM\nPackage: lodash\nFixed Version: 4.17.21\nLink: [CVE-2020-28500](https://avd.aquasec.com/nvd/cve-2020-28500)\nLodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.",
                "markdown": "**Vulnerability CVE-2020-28500**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|lodash|4.17.21|[CVE-2020-28500](https://avd.aquasec.com/nvd/cve-2020-28500)|\n\nLodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions."
              },
              "properties": {
                "cvssv3_baseScore": 5.3,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2018-3721",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "lodash: Prototype pollution in utilities function"
              },
              "fullDescription": {
                "text": "lodash node module before 4.17.5 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-3721",
              "help": {
                "text": "Vulnerability CVE-2018-3721\nSeverity: LOW\nPackage: lodash\nFixed Version: \u003e=4.17.5\nLink: [CVE-2018-3721](https://avd.aquasec.com/nvd/cve-2018-3721)\nlodash node module before 4.17.5 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
                "markdown": "**Vulnerability CVE-2018-3721**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|lodash|\u003e=4.17.5|[CVE-2018-3721](https://avd.aquasec.com/nvd/cve-2018-3721)|\n\nlodash node module before 4.17.5 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-8203",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-lodash: prototype pollution in zipObjectDeep function"
              },
              "fullDescription": {
                "text": "Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8203",
              "help": {
                "text": "Vulnerability CVE-2020-8203\nSeverity: HIGH\nPackage: lodash.set\nFixed Version: \nLink: [CVE-2020-8203](https://avd.aquasec.com/nvd/cve-2020-8203)\nPrototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.",
                "markdown": "**Vulnerability CVE-2020-8203**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|lodash.set||[CVE-2020-8203](https://avd.aquasec.com/nvd/cve-2020-8203)|\n\nPrototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20."
              },
              "properties": {
                "cvssv3_baseScore": 7.4,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H",
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "GHSA-5mrr-rgp6-x4gr",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Command Injection in marsdb"
              },
              "fullDescription": {
                "text": "All versions of `marsdb` are vulnerable to Command Injection. In the `DocumentMatcher` class, selectors on `$where` clauses are passed to a Function constructor unsanitized. This allows attackers to run arbitrary commands in the system when the function is executed.\n\n\n## Recommendation\n\nNo fix is currently available. Consider using an alternative package until a fix is made available."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://github.com/advisories/GHSA-5mrr-rgp6-x4gr",
              "help": {
                "text": "Vulnerability GHSA-5mrr-rgp6-x4gr\nSeverity: CRITICAL\nPackage: marsdb\nFixed Version: \nLink: [GHSA-5mrr-rgp6-x4gr](https://github.com/advisories/GHSA-5mrr-rgp6-x4gr)\nAll versions of `marsdb` are vulnerable to Command Injection. In the `DocumentMatcher` class, selectors on `$where` clauses are passed to a Function constructor unsanitized. This allows attackers to run arbitrary commands in the system when the function is executed.\n\n\n## Recommendation\n\nNo fix is currently available. Consider using an alternative package until a fix is made available.",
                "markdown": "**Vulnerability GHSA-5mrr-rgp6-x4gr**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|marsdb||[GHSA-5mrr-rgp6-x4gr](https://github.com/advisories/GHSA-5mrr-rgp6-x4gr)|\n\nAll versions of `marsdb` are vulnerable to Command Injection. In the `DocumentMatcher` class, selectors on `$where` clauses are passed to a Function constructor unsanitized. This allows attackers to run arbitrary commands in the system when the function is executed.\n\n\n## Recommendation\n\nNo fix is currently available. Consider using an alternative package until a fix is made available."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2024-4067",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "micromatch: vulnerable to Regular Expression Denial of Service"
              },
              "fullDescription": {
                "text": "The NPM package `micromatch` prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching. This issue was fixed in version 4.0.8."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-4067",
              "help": {
                "text": "Vulnerability CVE-2024-4067\nSeverity: MEDIUM\nPackage: micromatch\nFixed Version: 4.0.8\nLink: [CVE-2024-4067](https://avd.aquasec.com/nvd/cve-2024-4067)\nThe NPM package `micromatch` prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching. This issue was fixed in version 4.0.8.",
                "markdown": "**Vulnerability CVE-2024-4067**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|micromatch|4.0.8|[CVE-2024-4067](https://avd.aquasec.com/nvd/cve-2024-4067)|\n\nThe NPM package `micromatch` prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching. This issue was fixed in version 4.0.8."
              },
              "properties": {
                "cvssv3_baseScore": 5.3,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2017-18214",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-moment: Regular expression denial of service"
              },
              "fullDescription": {
                "text": "The moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2017-18214",
              "help": {
                "text": "Vulnerability CVE-2017-18214\nSeverity: HIGH\nPackage: moment\nFixed Version: 2.19.3\nLink: [CVE-2017-18214](https://avd.aquasec.com/nvd/cve-2017-18214)\nThe moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055.",
                "markdown": "**Vulnerability CVE-2017-18214**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|moment|2.19.3|[CVE-2017-18214](https://avd.aquasec.com/nvd/cve-2017-18214)|\n\nThe moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055."
              },
              "properties": {
                "cvssv3_baseScore": 7.5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-24785",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Moment.js: Path traversal  in moment.locale"
              },
              "fullDescription": {
                "text": "Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24785",
              "help": {
                "text": "Vulnerability CVE-2022-24785\nSeverity: HIGH\nPackage: moment\nFixed Version: 2.29.2\nLink: [CVE-2022-24785](https://avd.aquasec.com/nvd/cve-2022-24785)\nMoment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",
                "markdown": "**Vulnerability CVE-2022-24785**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|moment|2.29.2|[CVE-2022-24785](https://avd.aquasec.com/nvd/cve-2022-24785)|\n\nMoment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js."
              },
              "properties": {
                "cvssv3_baseScore": 7.5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2016-4055",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moment.js: regular expression denial of service"
              },
              "fullDescription": {
                "text": "The duration function in the moment package before 2.11.2 for Node.js allows remote attackers to cause a denial of service (CPU consumption) via a long string, aka a \"regular expression Denial of Service (ReDoS).\""
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2016-4055",
              "help": {
                "text": "Vulnerability CVE-2016-4055\nSeverity: MEDIUM\nPackage: moment\nFixed Version: \u003e=2.11.2\nLink: [CVE-2016-4055](https://avd.aquasec.com/nvd/cve-2016-4055)\nThe duration function in the moment package before 2.11.2 for Node.js allows remote attackers to cause a denial of service (CPU consumption) via a long string, aka a \"regular expression Denial of Service (ReDoS).\"",
                "markdown": "**Vulnerability CVE-2016-4055**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|moment|\u003e=2.11.2|[CVE-2016-4055](https://avd.aquasec.com/nvd/cve-2016-4055)|\n\nThe duration function in the moment package before 2.11.2 for Node.js allows remote attackers to cause a denial of service (CPU consumption) via a long string, aka a \"regular expression Denial of Service (ReDoS).\""
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2025-47935",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Multer vulnerable to Denial of Service via memory leaks from unclosed streams"
              },
              "fullDescription": {
                "text": "Multer is a node.js middleware for handling `multipart/form-data`. Versions prior to 2.0.0 are vulnerable to a resource exhaustion and memory leak issue due to improper stream handling. When the HTTP request stream emits an error, the internal `busboy` stream is not closed, violating Node.js stream safety guidance. This leads to unclosed streams accumulating over time, consuming memory and file descriptors. Under sustained or repeated failure conditions, this can result in denial of service, requiring manual server restarts to recover. All users of Multer handling file uploads are potentially impacted. Users should upgrade to 2.0.0 to receive a patch. No known workarounds are available."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-47935",
              "help": {
                "text": "Vulnerability CVE-2025-47935\nSeverity: HIGH\nPackage: multer\nFixed Version: 2.0.0\nLink: [CVE-2025-47935](https://avd.aquasec.com/nvd/cve-2025-47935)\nMulter is a node.js middleware for handling `multipart/form-data`. Versions prior to 2.0.0 are vulnerable to a resource exhaustion and memory leak issue due to improper stream handling. When the HTTP request stream emits an error, the internal `busboy` stream is not closed, violating Node.js stream safety guidance. This leads to unclosed streams accumulating over time, consuming memory and file descriptors. Under sustained or repeated failure conditions, this can result in denial of service, requiring manual server restarts to recover. All users of Multer handling file uploads are potentially impacted. Users should upgrade to 2.0.0 to receive a patch. No known workarounds are available.",
                "markdown": "**Vulnerability CVE-2025-47935**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|multer|2.0.0|[CVE-2025-47935](https://avd.aquasec.com/nvd/cve-2025-47935)|\n\nMulter is a node.js middleware for handling `multipart/form-data`. Versions prior to 2.0.0 are vulnerable to a resource exhaustion and memory leak issue due to improper stream handling. When the HTTP request stream emits an error, the internal `busboy` stream is not closed, violating Node.js stream safety guidance. This leads to unclosed streams accumulating over time, consuming memory and file descriptors. Under sustained or repeated failure conditions, this can result in denial of service, requiring manual server restarts to recover. All users of Multer handling file uploads are potentially impacted. Users should upgrade to 2.0.0 to receive a patch. No known workarounds are available."
              },
              "properties": {
                "cvssv3_baseScore": 7.5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2025-47944",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Multer vulnerable to Denial of Service from maliciously crafted requests"
              },
              "fullDescription": {
                "text": "Multer is a node.js middleware for handling `multipart/form-data`. A vulnerability that is present starting in version 1.4.4-lts.1 and prior to version 2.0.0 allows an attacker to trigger a Denial of Service (DoS) by sending a malformed multi-part upload request. This request causes an unhandled exception, leading to a crash of the process. Users should upgrade to version 2.0.0 to receive a patch. No known workarounds are available."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-47944",
              "help": {
                "text": "Vulnerability CVE-2025-47944\nSeverity: HIGH\nPackage: multer\nFixed Version: 2.0.0\nLink: [CVE-2025-47944](https://avd.aquasec.com/nvd/cve-2025-47944)\nMulter is a node.js middleware for handling `multipart/form-data`. A vulnerability that is present starting in version 1.4.4-lts.1 and prior to version 2.0.0 allows an attacker to trigger a Denial of Service (DoS) by sending a malformed multi-part upload request. This request causes an unhandled exception, leading to a crash of the process. Users should upgrade to version 2.0.0 to receive a patch. No known workarounds are available.",
                "markdown": "**Vulnerability CVE-2025-47944**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|multer|2.0.0|[CVE-2025-47944](https://avd.aquasec.com/nvd/cve-2025-47944)|\n\nMulter is a node.js middleware for handling `multipart/form-data`. A vulnerability that is present starting in version 1.4.4-lts.1 and prior to version 2.0.0 allows an attacker to trigger a Denial of Service (DoS) by sending a malformed multi-part upload request. This request causes an unhandled exception, leading to a crash of the process. Users should upgrade to version 2.0.0 to receive a patch. No known workarounds are available."
              },
              "properties": {
                "cvssv3_baseScore": 7.5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2025-48997",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "multer: Multer vulnerable to Denial of Service via unhandled exception"
              },
              "fullDescription": {
                "text": "Multer is a node.js middleware for handling `multipart/form-data`. A vulnerability that is present starting in version 1.4.4-lts.1 and prior to version 2.0.1 allows an attacker to trigger a Denial of Service (DoS) by sending an upload file request with an empty string field name. This request causes an unhandled exception, leading to a crash of the process. Users should upgrade to `2.0.1` to receive a patch. No known workarounds are available."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-48997",
              "help": {
                "text": "Vulnerability CVE-2025-48997\nSeverity: HIGH\nPackage: multer\nFixed Version: 2.0.1\nLink: [CVE-2025-48997](https://avd.aquasec.com/nvd/cve-2025-48997)\nMulter is a node.js middleware for handling `multipart/form-data`. A vulnerability that is present starting in version 1.4.4-lts.1 and prior to version 2.0.1 allows an attacker to trigger a Denial of Service (DoS) by sending an upload file request with an empty string field name. This request causes an unhandled exception, leading to a crash of the process. Users should upgrade to `2.0.1` to receive a patch. No known workarounds are available.",
                "markdown": "**Vulnerability CVE-2025-48997**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|multer|2.0.1|[CVE-2025-48997](https://avd.aquasec.com/nvd/cve-2025-48997)|\n\nMulter is a node.js middleware for handling `multipart/form-data`. A vulnerability that is present starting in version 1.4.4-lts.1 and prior to version 2.0.1 allows an attacker to trigger a Denial of Service (DoS) by sending an upload file request with an empty string field name. This request causes an unhandled exception, leading to a crash of the process. Users should upgrade to `2.0.1` to receive a patch. No known workarounds are available."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2025-7338",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "multer: Multer Denial of Service"
              },
              "fullDescription": {
                "text": "Multer is a node.js middleware for handling `multipart/form-data`. A vulnerability that is present starting in version 1.4.4-lts.1 and prior to version 2.0.2 allows an attacker to trigger a Denial of Service (DoS) by sending a malformed multi-part upload request. This request causes an unhandled exception, leading to a crash of the process. Users should upgrade to version 2.0.2 to receive a patch. No known workarounds are available."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-7338",
              "help": {
                "text": "Vulnerability CVE-2025-7338\nSeverity: HIGH\nPackage: multer\nFixed Version: 2.0.2\nLink: [CVE-2025-7338](https://avd.aquasec.com/nvd/cve-2025-7338)\nMulter is a node.js middleware for handling `multipart/form-data`. A vulnerability that is present starting in version 1.4.4-lts.1 and prior to version 2.0.2 allows an attacker to trigger a Denial of Service (DoS) by sending a malformed multi-part upload request. This request causes an unhandled exception, leading to a crash of the process. Users should upgrade to version 2.0.2 to receive a patch. No known workarounds are available.",
                "markdown": "**Vulnerability CVE-2025-7338**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|multer|2.0.2|[CVE-2025-7338](https://avd.aquasec.com/nvd/cve-2025-7338)|\n\nMulter is a node.js middleware for handling `multipart/form-data`. A vulnerability that is present starting in version 1.4.4-lts.1 and prior to version 2.0.2 allows an attacker to trigger a Denial of Service (DoS) by sending a malformed multi-part upload request. This request causes an unhandled exception, leading to a crash of the process. Users should upgrade to version 2.0.2 to receive a patch. No known workarounds are available."
              },
              "properties": {
                "cvssv3_baseScore": 7.5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-23771",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Sandbox escape in notevil and argencoders-notevil"
              },
              "fullDescription": {
                "text": "This affects all versions of package notevil; all versions of package argencoders-notevil. It is vulnerable to Sandbox Escape leading to Prototype pollution. The package fails to restrict access to the main context, allowing an attacker to add or modify an object's prototype. **Note:** This vulnerability derives from an incomplete fix in [SNYK-JS-NOTEVIL-608878](https://security.snyk.io/vuln/SNYK-JS-NOTEVIL-608878)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-23771",
              "help": {
                "text": "Vulnerability CVE-2021-23771\nSeverity: MEDIUM\nPackage: notevil\nFixed Version: \nLink: [CVE-2021-23771](https://avd.aquasec.com/nvd/cve-2021-23771)\nThis affects all versions of package notevil; all versions of package argencoders-notevil. It is vulnerable to Sandbox Escape leading to Prototype pollution. The package fails to restrict access to the main context, allowing an attacker to add or modify an object's prototype. **Note:** This vulnerability derives from an incomplete fix in [SNYK-JS-NOTEVIL-608878](https://security.snyk.io/vuln/SNYK-JS-NOTEVIL-608878).",
                "markdown": "**Vulnerability CVE-2021-23771**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|notevil||[CVE-2021-23771](https://avd.aquasec.com/nvd/cve-2021-23771)|\n\nThis affects all versions of package notevil; all versions of package argencoders-notevil. It is vulnerable to Sandbox Escape leading to Prototype pollution. The package fails to restrict access to the main context, allowing an attacker to add or modify an object's prototype. **Note:** This vulnerability derives from an incomplete fix in [SNYK-JS-NOTEVIL-608878](https://security.snyk.io/vuln/SNYK-JS-NOTEVIL-608878)."
              },
              "properties": {
                "cvssv3_baseScore": 6.5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-25887",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "sanitize-html: insecure global regular expression replacement logic may lead to ReDoS"
              },
              "fullDescription": {
                "text": "The package sanitize-html before 2.7.1 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure global regular expression replacement logic of HTML comment removal."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-25887",
              "help": {
                "text": "Vulnerability CVE-2022-25887\nSeverity: HIGH\nPackage: sanitize-html\nFixed Version: 2.7.1\nLink: [CVE-2022-25887](https://avd.aquasec.com/nvd/cve-2022-25887)\nThe package sanitize-html before 2.7.1 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure global regular expression replacement logic of HTML comment removal.",
                "markdown": "**Vulnerability CVE-2022-25887**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|sanitize-html|2.7.1|[CVE-2022-25887](https://avd.aquasec.com/nvd/cve-2022-25887)|\n\nThe package sanitize-html before 2.7.1 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure global regular expression replacement logic of HTML comment removal."
              },
              "properties": {
                "cvssv3_baseScore": 7.5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2016-1000237",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "XSS - Sanitization not applied recursively"
              },
              "fullDescription": {
                "text": "sanitize-html before 1.4.3 has XSS."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2016-1000237",
              "help": {
                "text": "Vulnerability CVE-2016-1000237\nSeverity: MEDIUM\nPackage: sanitize-html\nFixed Version: \u003e=1.4.3\nLink: [CVE-2016-1000237](https://avd.aquasec.com/nvd/cve-2016-1000237)\nsanitize-html before 1.4.3 has XSS.",
                "markdown": "**Vulnerability CVE-2016-1000237**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|sanitize-html|\u003e=1.4.3|[CVE-2016-1000237](https://avd.aquasec.com/nvd/cve-2016-1000237)|\n\nsanitize-html before 1.4.3 has XSS."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2017-16016",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Cross-Site Scripting in sanitize-html"
              },
              "fullDescription": {
                "text": "Sanitize-html is a library for scrubbing html input of malicious values. Versions 1.11.1 and below are vulnerable to cross site scripting (XSS) in certain scenarios: If allowed at least one nonTextTags, the result is a potential XSS vulnerability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2017-16016",
              "help": {
                "text": "Vulnerability CVE-2017-16016\nSeverity: MEDIUM\nPackage: sanitize-html\nFixed Version: 1.11.4\nLink: [CVE-2017-16016](https://avd.aquasec.com/nvd/cve-2017-16016)\nSanitize-html is a library for scrubbing html input of malicious values. Versions 1.11.1 and below are vulnerable to cross site scripting (XSS) in certain scenarios: If allowed at least one nonTextTags, the result is a potential XSS vulnerability.",
                "markdown": "**Vulnerability CVE-2017-16016**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|sanitize-html|1.11.4|[CVE-2017-16016](https://avd.aquasec.com/nvd/cve-2017-16016)|\n\nSanitize-html is a library for scrubbing html input of malicious values. Versions 1.11.1 and below are vulnerable to cross site scripting (XSS) in certain scenarios: If allowed at least one nonTextTags, the result is a potential XSS vulnerability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-26539",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "sanitize-html: improper handling of internationalized domain name (IDN) can lead to bypass hostname whitelist validation"
              },
              "fullDescription": {
                "text": "Apostrophe Technologies sanitize-html before 2.3.1 does not properly handle internationalized domain name (IDN) which could allow an attacker to bypass hostname whitelist validation set by the \"allowedIframeHostnames\" option."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-26539",
              "help": {
                "text": "Vulnerability CVE-2021-26539\nSeverity: MEDIUM\nPackage: sanitize-html\nFixed Version: 2.3.1\nLink: [CVE-2021-26539](https://avd.aquasec.com/nvd/cve-2021-26539)\nApostrophe Technologies sanitize-html before 2.3.1 does not properly handle internationalized domain name (IDN) which could allow an attacker to bypass hostname whitelist validation set by the \"allowedIframeHostnames\" option.",
                "markdown": "**Vulnerability CVE-2021-26539**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|sanitize-html|2.3.1|[CVE-2021-26539](https://avd.aquasec.com/nvd/cve-2021-26539)|\n\nApostrophe Technologies sanitize-html before 2.3.1 does not properly handle internationalized domain name (IDN) which could allow an attacker to bypass hostname whitelist validation set by the \"allowedIframeHostnames\" option."
              },
              "properties": {
                "cvssv3_baseScore": 5.3,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-26540",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "sanitize-html: improper validation of hostnames set by the \"allowedIframeHostnames\" option can lead to bypass hostname whitelist for iframe element"
              },
              "fullDescription": {
                "text": "Apostrophe Technologies sanitize-html before 2.3.2 does not properly validate the hostnames set by the \"allowedIframeHostnames\" option when the \"allowIframeRelativeUrls\" is set to true, which allows attackers to bypass hostname whitelist for iframe element, related using an src value that starts with \"/\\\\example.com\"."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-26540",
              "help": {
                "text": "Vulnerability CVE-2021-26540\nSeverity: MEDIUM\nPackage: sanitize-html\nFixed Version: 2.3.2\nLink: [CVE-2021-26540](https://avd.aquasec.com/nvd/cve-2021-26540)\nApostrophe Technologies sanitize-html before 2.3.2 does not properly validate the hostnames set by the \"allowedIframeHostnames\" option when the \"allowIframeRelativeUrls\" is set to true, which allows attackers to bypass hostname whitelist for iframe element, related using an src value that starts with \"/\\\\example.com\".",
                "markdown": "**Vulnerability CVE-2021-26540**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|sanitize-html|2.3.2|[CVE-2021-26540](https://avd.aquasec.com/nvd/cve-2021-26540)|\n\nApostrophe Technologies sanitize-html before 2.3.2 does not properly validate the hostnames set by the \"allowedIframeHostnames\" option when the \"allowIframeRelativeUrls\" is set to true, which allows attackers to bypass hostname whitelist for iframe element, related using an src value that starts with \"/\\\\example.com\"."
              },
              "properties": {
                "cvssv3_baseScore": 5.3,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-21501",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "sanitize-html: Information Exposure when used on the backend"
              },
              "fullDescription": {
                "text": "Versions of the package sanitize-html before 2.12.1 are vulnerable to Information Exposure when used on the backend and with the style attribute allowed, allowing enumeration of files in the system (including project dependencies). An attacker could exploit this vulnerability to gather details about the file system structure and dependencies of the targeted server."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-21501",
              "help": {
                "text": "Vulnerability CVE-2024-21501\nSeverity: MEDIUM\nPackage: sanitize-html\nFixed Version: 2.12.1\nLink: [CVE-2024-21501](https://avd.aquasec.com/nvd/cve-2024-21501)\nVersions of the package sanitize-html before 2.12.1 are vulnerable to Information Exposure when used on the backend and with the style attribute allowed, allowing enumeration of files in the system (including project dependencies). An attacker could exploit this vulnerability to gather details about the file system structure and dependencies of the targeted server.",
                "markdown": "**Vulnerability CVE-2024-21501**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|sanitize-html|2.12.1|[CVE-2024-21501](https://avd.aquasec.com/nvd/cve-2024-21501)|\n\nVersions of the package sanitize-html before 2.12.1 are vulnerable to Information Exposure when used on the backend and with the style attribute allowed, allowing enumeration of files in the system (including project dependencies). An attacker could exploit this vulnerability to gather details about the file system structure and dependencies of the targeted server."
              },
              "properties": {
                "cvssv3_baseScore": 5.3,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "NSWG-ECO-154",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Cross Site Scripting"
              },
              "fullDescription": {
                "text": "Sanitize-html is a library for scrubbing html input of malicious values.\n\nVersions 1.11.1 and below are vulnerable to cross site scripting (XSS) in certain scenarios:\n\nIf allowed at least one nonTextTags, the result is a potential XSS vulnerability.\nPoC:\n\n```\nvar sanitizeHtml = require('sanitize-html');\n\nvar dirty = '!\u003ctextarea\u003e\u0026lt;/textarea\u0026gt;\u003csvg/onload=prompt`xs`\u0026gt;\u003c/textarea\u003e!';\nvar clean = sanitizeHtml(dirty, {\n    allowedTags: [ 'textarea' ]\n});\n\nconsole.log(clean);\n\n// !\u003ctextarea\u003e\u003c/textarea\u003e\u003csvg/onload=prompt`xs`\u003e\u003c/textarea\u003e!\n```"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Vulnerability NSWG-ECO-154\nSeverity: MEDIUM\nPackage: sanitize-html\nFixed Version: \u003e=1.11.4\nLink: [NSWG-ECO-154]()\nSanitize-html is a library for scrubbing html input of malicious values.\n\nVersions 1.11.1 and below are vulnerable to cross site scripting (XSS) in certain scenarios:\n\nIf allowed at least one nonTextTags, the result is a potential XSS vulnerability.\nPoC:\n\n```\nvar sanitizeHtml = require('sanitize-html');\n\nvar dirty = '!\u003ctextarea\u003e\u0026lt;/textarea\u0026gt;\u003csvg/onload=prompt`xs`\u0026gt;\u003c/textarea\u003e!';\nvar clean = sanitizeHtml(dirty, {\n    allowedTags: [ 'textarea' ]\n});\n\nconsole.log(clean);\n\n// !\u003ctextarea\u003e\u003c/textarea\u003e\u003csvg/onload=prompt`xs`\u003e\u003c/textarea\u003e!\n```",
                "markdown": "**Vulnerability NSWG-ECO-154**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|sanitize-html|\u003e=1.11.4|[NSWG-ECO-154]()|\n\nSanitize-html is a library for scrubbing html input of malicious values.\n\nVersions 1.11.1 and below are vulnerable to cross site scripting (XSS) in certain scenarios:\n\nIf allowed at least one nonTextTags, the result is a potential XSS vulnerability.\nPoC:\n\n```\nvar sanitizeHtml = require('sanitize-html');\n\nvar dirty = '!\u003ctextarea\u003e\u0026lt;/textarea\u0026gt;\u003csvg/onload=prompt`xs`\u0026gt;\u003c/textarea\u003e!';\nvar clean = sanitizeHtml(dirty, {\n    allowedTags: [ 'textarea' ]\n});\n\nconsole.log(clean);\n\n// !\u003ctextarea\u003e\u003c/textarea\u003e\u003csvg/onload=prompt`xs`\u003e\u003c/textarea\u003e!\n```"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-38355",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "socket.io: Unhandled 'error' event"
              },
              "fullDescription": {
                "text": "Socket.IO is an open source, real-time, bidirectional, event-based, communication framework. A specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process. This issue is fixed by commit `15af22fc22` which has been included in `socket.io@4.6.2` (released in May 2023). The fix was backported in the 2.x branch as well with commit `d30630ba10`. Users are advised to upgrade. Users unable to upgrade may attach a listener for the \"error\" event to catch these errors.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-38355",
              "help": {
                "text": "Vulnerability CVE-2024-38355\nSeverity: MEDIUM\nPackage: socket.io\nFixed Version: 2.5.1, 4.6.2\nLink: [CVE-2024-38355](https://avd.aquasec.com/nvd/cve-2024-38355)\nSocket.IO is an open source, real-time, bidirectional, event-based, communication framework. A specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process. This issue is fixed by commit `15af22fc22` which has been included in `socket.io@4.6.2` (released in May 2023). The fix was backported in the 2.x branch as well with commit `d30630ba10`. Users are advised to upgrade. Users unable to upgrade may attach a listener for the \"error\" event to catch these errors.\n",
                "markdown": "**Vulnerability CVE-2024-38355**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|socket.io|2.5.1, 4.6.2|[CVE-2024-38355](https://avd.aquasec.com/nvd/cve-2024-38355)|\n\nSocket.IO is an open source, real-time, bidirectional, event-based, communication framework. A specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process. This issue is fixed by commit `15af22fc22` which has been included in `socket.io@4.6.2` (released in May 2023). The fix was backported in the 2.x branch as well with commit `d30630ba10`. Users are advised to upgrade. Users unable to upgrade may attach a listener for the \"error\" event to catch these errors.\n"
              },
              "properties": {
                "cvssv3_baseScore": 7.3,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-28863",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "node-tar: denial of service while parsing a tar file due to lack of folders depth validation"
              },
              "fullDescription": {
                "text": "node-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-28863",
              "help": {
                "text": "Vulnerability CVE-2024-28863\nSeverity: MEDIUM\nPackage: tar\nFixed Version: 6.2.1\nLink: [CVE-2024-28863](https://avd.aquasec.com/nvd/cve-2024-28863)\nnode-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders.",
                "markdown": "**Vulnerability CVE-2024-28863**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|tar|6.2.1|[CVE-2024-28863](https://avd.aquasec.com/nvd/cve-2024-28863)|\n\nnode-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders."
              },
              "properties": {
                "cvssv3_baseScore": 6.5,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-32314",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "vm2: Sandbox Escape"
              },
              "fullDescription": {
                "text": "vm2 is a sandbox that can run untrusted code with Node's built-in modules. A sandbox escape vulnerability exists in vm2 for versions up to and including 3.9.17. It abuses an unexpected creation of a host object based on the specification of `Proxy`. As a result a threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox. This vulnerability was patched in the release of version `3.9.18` of `vm2`. Users are advised to upgrade. There are no known workarounds for this vulnerability."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-32314",
              "help": {
                "text": "Vulnerability CVE-2023-32314\nSeverity: CRITICAL\nPackage: vm2\nFixed Version: 3.9.18\nLink: [CVE-2023-32314](https://avd.aquasec.com/nvd/cve-2023-32314)\nvm2 is a sandbox that can run untrusted code with Node's built-in modules. A sandbox escape vulnerability exists in vm2 for versions up to and including 3.9.17. It abuses an unexpected creation of a host object based on the specification of `Proxy`. As a result a threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox. This vulnerability was patched in the release of version `3.9.18` of `vm2`. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
                "markdown": "**Vulnerability CVE-2023-32314**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|vm2|3.9.18|[CVE-2023-32314](https://avd.aquasec.com/nvd/cve-2023-32314)|\n\nvm2 is a sandbox that can run untrusted code with Node's built-in modules. A sandbox escape vulnerability exists in vm2 for versions up to and including 3.9.17. It abuses an unexpected creation of a host object based on the specification of `Proxy`. As a result a threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox. This vulnerability was patched in the release of version `3.9.18` of `vm2`. Users are advised to upgrade. There are no known workarounds for this vulnerability."
              },
              "properties": {
                "cvssv3_baseScore": 9.8,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-37466",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "vm2: Promise handler sanitization can be bypassed allowing attackers to escape the sandbox and run arbitrary code"
              },
              "fullDescription": {
                "text": "vm2 is an advanced vm/sandbox for Node.js. The library contains critical security issues and should not be used for production. The maintenance of the project has been discontinued. In vm2 for versions up to 3.9.19, `Promise` handler sanitization can be bypassed with the `@@species` accessor property allowing attackers to escape the sandbox and run arbitrary code, potentially allowing remote code execution inside the context of vm2 sandbox."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-37466",
              "help": {
                "text": "Vulnerability CVE-2023-37466\nSeverity: CRITICAL\nPackage: vm2\nFixed Version: \nLink: [CVE-2023-37466](https://avd.aquasec.com/nvd/cve-2023-37466)\nvm2 is an advanced vm/sandbox for Node.js. The library contains critical security issues and should not be used for production. The maintenance of the project has been discontinued. In vm2 for versions up to 3.9.19, `Promise` handler sanitization can be bypassed with the `@@species` accessor property allowing attackers to escape the sandbox and run arbitrary code, potentially allowing remote code execution inside the context of vm2 sandbox.",
                "markdown": "**Vulnerability CVE-2023-37466**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|vm2||[CVE-2023-37466](https://avd.aquasec.com/nvd/cve-2023-37466)|\n\nvm2 is an advanced vm/sandbox for Node.js. The library contains critical security issues and should not be used for production. The maintenance of the project has been discontinued. In vm2 for versions up to 3.9.19, `Promise` handler sanitization can be bypassed with the `@@species` accessor property allowing attackers to escape the sandbox and run arbitrary code, potentially allowing remote code execution inside the context of vm2 sandbox."
              },
              "properties": {
                "cvssv3_baseScore": 9.8,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-37903",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "vm2: custom inspect function allows attackers to escape the sandbox and run arbitrary code"
              },
              "fullDescription": {
                "text": "vm2 is an open source vm/sandbox for Node.js. In vm2 for versions up to and including 3.9.19, Node.js custom inspect function allows attackers to escape the sandbox and run arbitrary code. This may result in Remote Code Execution, assuming the attacker has arbitrary code execution primitive inside the context of vm2 sandbox. There are no patches and no known workarounds. Users are advised to find an alternative software."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-37903",
              "help": {
                "text": "Vulnerability CVE-2023-37903\nSeverity: CRITICAL\nPackage: vm2\nFixed Version: \nLink: [CVE-2023-37903](https://avd.aquasec.com/nvd/cve-2023-37903)\nvm2 is an open source vm/sandbox for Node.js. In vm2 for versions up to and including 3.9.19, Node.js custom inspect function allows attackers to escape the sandbox and run arbitrary code. This may result in Remote Code Execution, assuming the attacker has arbitrary code execution primitive inside the context of vm2 sandbox. There are no patches and no known workarounds. Users are advised to find an alternative software.",
                "markdown": "**Vulnerability CVE-2023-37903**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|vm2||[CVE-2023-37903](https://avd.aquasec.com/nvd/cve-2023-37903)|\n\nvm2 is an open source vm/sandbox for Node.js. In vm2 for versions up to and including 3.9.19, Node.js custom inspect function allows attackers to escape the sandbox and run arbitrary code. This may result in Remote Code Execution, assuming the attacker has arbitrary code execution primitive inside the context of vm2 sandbox. There are no patches and no known workarounds. Users are advised to find an alternative software."
              },
              "properties": {
                "cvssv3_baseScore": 9.8,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-32313",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "vm2: Inspect Manipulation"
              },
              "fullDescription": {
                "text": "vm2 is a sandbox that can run untrusted code with Node's built-in modules. In versions 3.9.17 and lower of vm2 it was possible to get a read-write reference to the node `inspect` method and edit options for `console.log`. As a result a threat actor can edit options for the `console.log` command. This vulnerability was patched in the release of version `3.9.18` of `vm2`. Users are advised to upgrade. Users unable to upgrade may make the `inspect` method readonly with `vm.readonly(inspect)` after creating a vm."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-32313",
              "help": {
                "text": "Vulnerability CVE-2023-32313\nSeverity: MEDIUM\nPackage: vm2\nFixed Version: 3.9.18\nLink: [CVE-2023-32313](https://avd.aquasec.com/nvd/cve-2023-32313)\nvm2 is a sandbox that can run untrusted code with Node's built-in modules. In versions 3.9.17 and lower of vm2 it was possible to get a read-write reference to the node `inspect` method and edit options for `console.log`. As a result a threat actor can edit options for the `console.log` command. This vulnerability was patched in the release of version `3.9.18` of `vm2`. Users are advised to upgrade. Users unable to upgrade may make the `inspect` method readonly with `vm.readonly(inspect)` after creating a vm.",
                "markdown": "**Vulnerability CVE-2023-32313**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|vm2|3.9.18|[CVE-2023-32313](https://avd.aquasec.com/nvd/cve-2023-32313)|\n\nvm2 is a sandbox that can run untrusted code with Node's built-in modules. In versions 3.9.17 and lower of vm2 it was possible to get a read-write reference to the node `inspect` method and edit options for `console.log`. As a result a threat actor can edit options for the `console.log` command. This vulnerability was patched in the release of version `3.9.18` of `vm2`. Users are advised to upgrade. Users unable to upgrade may make the `inspect` method readonly with `vm.readonly(inspect)` after creating a vm."
              },
              "properties": {
                "cvssv3_baseScore": 5.3,
                "cvssv3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "private-key",
              "name": "Secret",
              "shortDescription": {
                "text": "Asymmetric Private Key"
              },
              "fullDescription": {
                "text
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://github.com/aquasecurity/trivy/blob/main/pkg/fanal/secret/builtin-rules.go",
              "help": {
                "text": "Secret Asymmetric Private Key\nSeverity: HIGH\nMatch
                "markdown": "**Secret Asymmetric Private Key**\n| Severity | Match |\n| --- | --- |\n|HIGH||"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "secret",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "jwt-token",
              "name": "Secret",
              "shortDescription": {
                "text": "JWT token"
              },
              "fullDescription": {
                "text": "ocalStorage.setItem('token', '*******************************************************************************************************************************')"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/aquasecurity/trivy/blob/main/pkg/fanal/secret/builtin-rules.go",
              "help": {
                "text": "Secret JWT token\nSeverity: MEDIUM\nMatch: ocalStorage.setItem('token', '*******************************************************************************************************************************')",
                "markdown": "**Secret JWT token**\n| Severity | Match |\n| --- | --- |\n|MEDIUM|ocalStorage.setItem('token', '*******************************************************************************************************************************')|"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "secret",
                  "security",
                  "MEDIUM"
                ]
              }
            }
          ],
          "version": "0.65.0"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2024-34394",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: libxmljs2\nInstalled Version: 0.35.0\nVulnerability CVE-2024-34394\nSeverity: CRITICAL\nFixed Version: \nLink: [CVE-2024-34394](https://avd.aquasec.com/nvd/cve-2024-34394)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 14303,
                  "startColumn": 1,
                  "endLine": 14319,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "frontend/package-lock.json: libxmljs2@0.35.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-36751",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Package: parseuri\nInstalled Version: 0.0.6\nVulnerability CVE-2024-36751\nSeverity: MEDIUM\nFixed Version: 2.0.0\nLink: [CVE-2024-36751](https://avd.aquasec.com/nvd/cve-2024-36751)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 16902,
                  "startColumn": 1,
                  "endLine": 16907,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "frontend/package-lock.json: parseuri@0.0.6"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32695",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: socket.io-parser\nInstalled Version: 4.0.5\nVulnerability CVE-2023-32695\nSeverity: MEDIUM\nFixed Version: 4.2.3, 3.4.3, 3.3.4\nLink: [CVE-2023-32695](https://avd.aquasec.com/nvd/cve-2023-32695)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 19527,
                  "startColumn": 1,
                  "endLine": 19540,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "frontend/package-lock.json: socket.io-parser@4.0.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37890",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Package: ws\nInstalled Version: 7.4.6\nVulnerability CVE-2024-37890\nSeverity: HIGH\nFixed Version: 5.2.4, 6.2.3, 7.5.10, 8.17.1\nLink: [CVE-2024-37890](https://avd.aquasec.com/nvd/cve-2024-37890)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 10091,
                  "startColumn": 1,
                  "endLine": 10111,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "frontend/package-lock.json: ws@7.4.6"
              }
            }
          ]
        },
        {
          "ruleId": "NSWG-ECO-428",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Package: base64url\nInstalled Version: 0.0.6\nVulnerability NSWG-ECO-428\nSeverity: HIGH\nFixed Version: \u003e=3.0.0\nLink: [NSWG-ECO-428](https://hackerone.com/reports/321687)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 5615,
                  "startColumn": 1,
                  "endLine": 5620,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: base64url@0.0.6"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-rvg8-pwq2-xj7q",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Package: base64url\nInstalled Version: 0.0.6\nVulnerability GHSA-rvg8-pwq2-xj7q\nSeverity: MEDIUM\nFixed Version: 3.0.0\nLink: [GHSA-rvg8-pwq2-xj7q](https://github.com/advisories/GHSA-rvg8-pwq2-xj7q)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 5615,
                  "startColumn": 1,
                  "endLine": 5620,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: base64url@0.0.6"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4068",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: braces\nInstalled Version: 2.3.2\nVulnerability CVE-2024-4068\nSeverity: HIGH\nFixed Version: 3.0.3\nLink: [CVE-2024-4068](https://avd.aquasec.com/nvd/cve-2024-4068)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 5793,
                  "startColumn": 1,
                  "endLine": 5813,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: braces@2.3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-47764",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Package: cookie\nInstalled Version: 0.4.2\nVulnerability CVE-2024-47764\nSeverity: LOW\nFixed Version: 0.7.0\nLink: [CVE-2024-47764](https://avd.aquasec.com/nvd/cve-2024-47764)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 8493,
                  "startColumn": 1,
                  "endLine": 8501,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: cookie@0.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46233",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Package: crypto-js\nInstalled Version: 3.3.0\nVulnerability CVE-2023-46233\nSeverity: CRITICAL\nFixed Version: 4.2.0\nLink: [CVE-2023-46233](https://avd.aquasec.com/nvd/cve-2023-46233)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 7334,
                  "startColumn": 1,
                  "endLine": 7339,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: crypto-js@3.3.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41940",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: engine.io\nInstalled Version: 4.1.2\nVulnerability CVE-2022-41940\nSeverity: MEDIUM\nFixed Version: 3.6.1, 6.2.1\nLink: [CVE-2022-41940](https://avd.aquasec.com/nvd/cve-2022-41940)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 8404,
                  "startColumn": 1,
                  "endLine": 8421,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: engine.io@4.1.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15084",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Package: express-jwt\nInstalled Version: 0.1.3\nVulnerability CVE-2020-15084\nSeverity: HIGH\nFixed Version: 6.0.0\nLink: [CVE-2020-15084](https://avd.aquasec.com/nvd/cve-2020-15084)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 9958,
                  "startColumn": 1,
                  "endLine": 9968,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: express-jwt@0.1.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-33987",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: got\nInstalled Version: 8.3.2\nVulnerability CVE-2022-33987\nSeverity: MEDIUM\nFixed Version: 12.1.0, 11.8.5\nLink: [CVE-2022-33987](https://avd.aquasec.com/nvd/cve-2022-33987)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 11608,
                  "startColumn": 1,
                  "endLine": 11635,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: got@8.3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25881",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Package: http-cache-semantics\nInstalled Version: 3.8.1\nVulnerability CVE-2022-25881\nSeverity: HIGH\nFixed Version: 4.1.1\nLink: [CVE-2022-25881](https://avd.aquasec.com/nvd/cve-2022-25881)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 12512,
                  "startColumn": 1,
                  "endLine": 12517,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: http-cache-semantics@3.8.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29415",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "Package: ip\nInstalled Version: 2.0.1\nVulnerability CVE-2024-29415\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2024-29415](https://avd.aquasec.com/nvd/cve-2024-29415)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 12887,
                  "startColumn": 1,
                  "endLine": 12892,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: ip@2.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-9235",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Package: jsonwebtoken\nInstalled Version: 0.1.0\nVulnerability CVE-2015-9235\nSeverity: CRITICAL\nFixed Version: 4.2.2\nLink: [CVE-2015-9235](https://avd.aquasec.com/nvd/cve-2015-9235)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 9969,
                  "startColumn": 1,
                  "endLine": 9979,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: jsonwebtoken@0.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23539",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Package: jsonwebtoken\nInstalled Version: 0.1.0\nVulnerability CVE-2022-23539\nSeverity: HIGH\nFixed Version: 9.0.0\nLink: [CVE-2022-23539](https://avd.aquasec.com/nvd/cve-2022-23539)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 9969,
                  "startColumn": 1,
                  "endLine": 9979,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: jsonwebtoken@0.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "NSWG-ECO-17",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Package: jsonwebtoken\nInstalled Version: 0.1.0\nVulnerability NSWG-ECO-17\nSeverity: HIGH\nFixed Version: \u003e=4.2.2\nLink: [NSWG-ECO-17]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 9969,
                  "startColumn": 1,
                  "endLine": 9979,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: jsonwebtoken@0.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23540",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Package: jsonwebtoken\nInstalled Version: 0.1.0\nVulnerability CVE-2022-23540\nSeverity: MEDIUM\nFixed Version: 9.0.0\nLink: [CVE-2022-23540](https://avd.aquasec.com/nvd/cve-2022-23540)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 9969,
                  "startColumn": 1,
                  "endLine": 9979,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: jsonwebtoken@0.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23541",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: jsonwebtoken\nInstalled Version: 0.1.0\nVulnerability CVE-2022-23541\nSeverity: MEDIUM\nFixed Version: 9.0.0\nLink: [CVE-2022-23541](https://avd.aquasec.com/nvd/cve-2022-23541)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 9969,
                  "startColumn": 1,
                  "endLine": 9979,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: jsonwebtoken@0.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-9235",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Package: jsonwebtoken\nInstalled Version: 0.4.0\nVulnerability CVE-2015-9235\nSeverity: CRITICAL\nFixed Version: 4.2.2\nLink: [CVE-2015-9235](https://avd.aquasec.com/nvd/cve-2015-9235)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 16515,
                  "startColumn": 1,
                  "endLine": 16524,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: jsonwebtoken@0.4.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23539",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Package: jsonwebtoken\nInstalled Version: 0.4.0\nVulnerability CVE-2022-23539\nSeverity: HIGH\nFixed Version: 9.0.0\nLink: [CVE-2022-23539](https://avd.aquasec.com/nvd/cve-2022-23539)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 16515,
                  "startColumn": 1,
                  "endLine": 16524,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: jsonwebtoken@0.4.0"
              }
            }
          ]
        },
        {
          "ruleId": "NSWG-ECO-17",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Package: jsonwebtoken\nInstalled Version: 0.4.0\nVulnerability NSWG-ECO-17\nSeverity: HIGH\nFixed Version: \u003e=4.2.2\nLink: [NSWG-ECO-17]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 16515,
                  "startColumn": 1,
                  "endLine": 16524,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: jsonwebtoken@0.4.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23540",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Package: jsonwebtoken\nInstalled Version: 0.4.0\nVulnerability CVE-2022-23540\nSeverity: MEDIUM\nFixed Version: 9.0.0\nLink: [CVE-2022-23540](https://avd.aquasec.com/nvd/cve-2022-23540)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 16515,
                  "startColumn": 1,
                  "endLine": 16524,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: jsonwebtoken@0.4.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23541",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: jsonwebtoken\nInstalled Version: 0.4.0\nVulnerability CVE-2022-23541\nSeverity: MEDIUM\nFixed Version: 9.0.0\nLink: [CVE-2022-23541](https://avd.aquasec.com/nvd/cve-2022-23541)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 16515,
                  "startColumn": 1,
                  "endLine": 16524,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: jsonwebtoken@0.4.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000223",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "Package: jws\nInstalled Version: 0.2.6\nVulnerability CVE-2016-1000223\nSeverity: HIGH\nFixed Version: \u003e=3.0.0\nLink: [CVE-2016-1000223](https://avd.aquasec.com/nvd/cve-2016-1000223)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 16593,
                  "startColumn": 1,
                  "endLine": 16603,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: jws@0.2.6"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10744",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "Package: lodash\nInstalled Version: 2.4.2\nVulnerability CVE-2019-10744\nSeverity: CRITICAL\nFixed Version: 4.17.12\nLink: [CVE-2019-10744](https://avd.aquasec.com/nvd/cve-2019-10744)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21831,
                  "startColumn": 1,
                  "endLine": 21840,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: lodash@2.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16487",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "Package: lodash\nInstalled Version: 2.4.2\nVulnerability CVE-2018-16487\nSeverity: HIGH\nFixed Version: \u003e=4.17.11\nLink: [CVE-2018-16487](https://avd.aquasec.com/nvd/cve-2018-16487)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21831,
                  "startColumn": 1,
                  "endLine": 21840,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: lodash@2.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23337",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "Package: lodash\nInstalled Version: 2.4.2\nVulnerability CVE-2021-23337\nSeverity: HIGH\nFixed Version: 4.17.21\nLink: [CVE-2021-23337](https://avd.aquasec.com/nvd/cve-2021-23337)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21831,
                  "startColumn": 1,
                  "endLine": 21840,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: lodash@2.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1010266",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "Package: lodash\nInstalled Version: 2.4.2\nVulnerability CVE-2019-1010266\nSeverity: MEDIUM\nFixed Version: 4.17.11\nLink: [CVE-2019-1010266](https://avd.aquasec.com/nvd/cve-2019-1010266)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21831,
                  "startColumn": 1,
                  "endLine": 21840,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: lodash@2.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28500",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Package: lodash\nInstalled Version: 2.4.2\nVulnerability CVE-2020-28500\nSeverity: MEDIUM\nFixed Version: 4.17.21\nLink: [CVE-2020-28500](https://avd.aquasec.com/nvd/cve-2020-28500)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21831,
                  "startColumn": 1,
                  "endLine": 21840,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: lodash@2.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-3721",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "Package: lodash\nInstalled Version: 2.4.2\nVulnerability CVE-2018-3721\nSeverity: LOW\nFixed Version: \u003e=4.17.5\nLink: [CVE-2018-3721](https://avd.aquasec.com/nvd/cve-2018-3721)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21831,
                  "startColumn": 1,
                  "endLine": 21840,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: lodash@2.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8203",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "Package: lodash.set\nInstalled Version: 4.3.2\nVulnerability CVE-2020-8203\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2020-8203](https://avd.aquasec.com/nvd/cve-2020-8203)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 17098,
                  "startColumn": 1,
                  "endLine": 17103,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: lodash.set@4.3.2"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-5mrr-rgp6-x4gr",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "Package: marsdb\nInstalled Version: 0.6.11\nVulnerability GHSA-5mrr-rgp6-x4gr\nSeverity: CRITICAL\nFixed Version: \nLink: [GHSA-5mrr-rgp6-x4gr](https://github.com/advisories/GHSA-5mrr-rgp6-x4gr)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 17472,
                  "startColumn": 1,
                  "endLine": 17485,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: marsdb@0.6.11"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4067",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "Package: micromatch\nInstalled Version: 3.1.10\nVulnerability CVE-2024-4067\nSeverity: MEDIUM\nFixed Version: 4.0.8\nLink: [CVE-2024-4067](https://avd.aquasec.com/nvd/cve-2024-4067)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 17596,
                  "startColumn": 1,
                  "endLine": 17619,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: micromatch@3.1.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-18214",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "Package: moment\nInstalled Version: 2.0.0\nVulnerability CVE-2017-18214\nSeverity: HIGH\nFixed Version: 2.19.3\nLink: [CVE-2017-18214](https://avd.aquasec.com/nvd/cve-2017-18214)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 9980,
                  "startColumn": 1,
                  "endLine": 9987,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: moment@2.0.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24785",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "Package: moment\nInstalled Version: 2.0.0\nVulnerability CVE-2022-24785\nSeverity: HIGH\nFixed Version: 2.29.2\nLink: [CVE-2022-24785](https://avd.aquasec.com/nvd/cve-2022-24785)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 9980,
                  "startColumn": 1,
                  "endLine": 9987,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: moment@2.0.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-4055",
          "ruleIndex": 31,
          "level": "warning",
          "message": {
            "text": "Package: moment\nInstalled Version: 2.0.0\nVulnerability CVE-2016-4055\nSeverity: MEDIUM\nFixed Version: \u003e=2.11.2\nLink: [CVE-2016-4055](https://avd.aquasec.com/nvd/cve-2016-4055)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 9980,
                  "startColumn": 1,
                  "endLine": 9987,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: moment@2.0.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-47935",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "Package: multer\nInstalled Version: 1.4.5-lts.2\nVulnerability CVE-2025-47935\nSeverity: HIGH\nFixed Version: 2.0.0\nLink: [CVE-2025-47935](https://avd.aquasec.com/nvd/cve-2025-47935)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 18302,
                  "startColumn": 1,
                  "endLine": 18320,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: multer@1.4.5-lts.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-47944",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "Package: multer\nInstalled Version: 1.4.5-lts.2\nVulnerability CVE-2025-47944\nSeverity: HIGH\nFixed Version: 2.0.0\nLink: [CVE-2025-47944](https://avd.aquasec.com/nvd/cve-2025-47944)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 18302,
                  "startColumn": 1,
                  "endLine": 18320,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: multer@1.4.5-lts.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-48997",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "Package: multer\nInstalled Version: 1.4.5-lts.2\nVulnerability CVE-2025-48997\nSeverity: HIGH\nFixed Version: 2.0.1\nLink: [CVE-2025-48997](https://avd.aquasec.com/nvd/cve-2025-48997)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 18302,
                  "startColumn": 1,
                  "endLine": 18320,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: multer@1.4.5-lts.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-7338",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "Package: multer\nInstalled Version: 1.4.5-lts.2\nVulnerability CVE-2025-7338\nSeverity: HIGH\nFixed Version: 2.0.2\nLink: [CVE-2025-7338](https://avd.aquasec.com/nvd/cve-2025-7338)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 18302,
                  "startColumn": 1,
                  "endLine": 18320,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: multer@1.4.5-lts.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23771",
          "ruleIndex": 36,
          "level": "warning",
          "message": {
            "text": "Package: notevil\nInstalled Version: 1.3.3\nVulnerability CVE-2021-23771\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2021-23771](https://avd.aquasec.com/nvd/cve-2021-23771)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 18871,
                  "startColumn": 1,
                  "endLine": 18881,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: notevil@1.3.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25887",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "Package: sanitize-html\nInstalled Version: 1.4.2\nVulnerability CVE-2022-25887\nSeverity: HIGH\nFixed Version: 2.7.1\nLink: [CVE-2022-25887](https://avd.aquasec.com/nvd/cve-2022-25887)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21773,
                  "startColumn": 1,
                  "endLine": 21783,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: sanitize-html@1.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000237",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "Package: sanitize-html\nInstalled Version: 1.4.2\nVulnerability CVE-2016-1000237\nSeverity: MEDIUM\nFixed Version: \u003e=1.4.3\nLink: [CVE-2016-1000237](https://avd.aquasec.com/nvd/cve-2016-1000237)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21773,
                  "startColumn": 1,
                  "endLine": 21783,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: sanitize-html@1.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16016",
          "ruleIndex": 39,
          "level": "warning",
          "message": {
            "text": "Package: sanitize-html\nInstalled Version: 1.4.2\nVulnerability CVE-2017-16016\nSeverity: MEDIUM\nFixed Version: 1.11.4\nLink: [CVE-2017-16016](https://avd.aquasec.com/nvd/cve-2017-16016)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21773,
                  "startColumn": 1,
                  "endLine": 21783,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: sanitize-html@1.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-26539",
          "ruleIndex": 40,
          "level": "warning",
          "message": {
            "text": "Package: sanitize-html\nInstalled Version: 1.4.2\nVulnerability CVE-2021-26539\nSeverity: MEDIUM\nFixed Version: 2.3.1\nLink: [CVE-2021-26539](https://avd.aquasec.com/nvd/cve-2021-26539)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21773,
                  "startColumn": 1,
                  "endLine": 21783,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: sanitize-html@1.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-26540",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "Package: sanitize-html\nInstalled Version: 1.4.2\nVulnerability CVE-2021-26540\nSeverity: MEDIUM\nFixed Version: 2.3.2\nLink: [CVE-2021-26540](https://avd.aquasec.com/nvd/cve-2021-26540)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21773,
                  "startColumn": 1,
                  "endLine": 21783,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: sanitize-html@1.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21501",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "Package: sanitize-html\nInstalled Version: 1.4.2\nVulnerability CVE-2024-21501\nSeverity: MEDIUM\nFixed Version: 2.12.1\nLink: [CVE-2024-21501](https://avd.aquasec.com/nvd/cve-2024-21501)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21773,
                  "startColumn": 1,
                  "endLine": 21783,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: sanitize-html@1.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "NSWG-ECO-154",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "Package: sanitize-html\nInstalled Version: 1.4.2\nVulnerability NSWG-ECO-154\nSeverity: MEDIUM\nFixed Version: \u003e=1.11.4\nLink: [NSWG-ECO-154]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 21773,
                  "startColumn": 1,
                  "endLine": 21783,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: sanitize-html@1.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-38355",
          "ruleIndex": 44,
          "level": "warning",
          "message": {
            "text": "Package: socket.io\nInstalled Version: 3.1.2\nVulnerability CVE-2024-38355\nSeverity: MEDIUM\nFixed Version: 2.5.1, 4.6.2\nLink: [CVE-2024-38355](https://avd.aquasec.com/nvd/cve-2024-38355)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 22800,
                  "startColumn": 1,
                  "endLine": 22819,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: socket.io@3.1.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32695",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: socket.io-parser\nInstalled Version: 4.0.5\nVulnerability CVE-2023-32695\nSeverity: MEDIUM\nFixed Version: 4.2.3, 3.4.3, 3.3.4\nLink: [CVE-2023-32695](https://avd.aquasec.com/nvd/cve-2023-32695)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 22863,
                  "startColumn": 1,
                  "endLine": 22876,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: socket.io-parser@4.0.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "Package: tar\nInstalled Version: 4.4.19\nVulnerability CVE-2024-28863\nSeverity: MEDIUM\nFixed Version: 6.2.1\nLink: [CVE-2024-28863](https://avd.aquasec.com/nvd/cve-2024-28863)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 18773,
                  "startColumn": 1,
                  "endLine": 18790,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: tar@4.4.19"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32314",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "Package: vm2\nInstalled Version: 3.9.17\nVulnerability CVE-2023-32314\nSeverity: CRITICAL\nFixed Version: 3.9.18\nLink: [CVE-2023-32314](https://avd.aquasec.com/nvd/cve-2023-32314)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 25702,
                  "startColumn": 1,
                  "endLine": 25718,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: vm2@3.9.17"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-37466",
          "ruleIndex": 47,
          "level": "error",
          "message": {
            "text": "Package: vm2\nInstalled Version: 3.9.17\nVulnerability CVE-2023-37466\nSeverity: CRITICAL\nFixed Version: \nLink: [CVE-2023-37466](https://avd.aquasec.com/nvd/cve-2023-37466)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 25702,
                  "startColumn": 1,
                  "endLine": 25718,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: vm2@3.9.17"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-37903",
          "ruleIndex": 48,
          "level": "error",
          "message": {
            "text": "Package: vm2\nInstalled Version: 3.9.17\nVulnerability CVE-2023-37903\nSeverity: CRITICAL\nFixed Version: \nLink: [CVE-2023-37903](https://avd.aquasec.com/nvd/cve-2023-37903)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 25702,
                  "startColumn": 1,
                  "endLine": 25718,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: vm2@3.9.17"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32313",
          "ruleIndex": 49,
          "level": "warning",
          "message": {
            "text": "Package: vm2\nInstalled Version: 3.9.17\nVulnerability CVE-2023-32313\nSeverity: MEDIUM\nFixed Version: 3.9.18\nLink: [CVE-2023-32313](https://avd.aquasec.com/nvd/cve-2023-32313)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 25702,
                  "startColumn": 1,
                  "endLine": 25718,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: vm2@3.9.17"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37890",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Package: ws\nInstalled Version: 7.4.6\nVulnerability CVE-2024-37890\nSeverity: HIGH\nFixed Version: 5.2.4, 6.2.3, 7.5.10, 8.17.1\nLink: [CVE-2024-37890](https://avd.aquasec.com/nvd/cve-2024-37890)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 8459,
                  "startColumn": 1,
                  "endLine": 8480,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: ws@7.4.6"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 8519,
                  "startColumn": 1,
                  "endLine": 8539,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: ws@7.4.6"
              }
            }
          ]
        },
        {
          "ruleId": "private-key",
          "ruleIndex": 50,
          "level": "error",
          "message": {
            "text": "Artifact: build/lib/insecurity.js\nType: \nSecret Asymmetric Private Key\nSeverity: HIGH\nMatch
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build/lib/insecurity.js",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 1,
                  "endLine": 47,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "build/lib/insecurity.js"
              }
            }
          ]
        },
        {
          "ruleId": "jwt-token",
          "ruleIndex": 51,
          "level": "warning",
          "message": {
            "text": "Artifact: frontend/src/app/app.guard.spec.ts\nType: \nSecret JWT token\nSeverity: MEDIUM\nMatch: ocalStorage.setItem('token', '***********************************************************************************************************************************************************')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/app.guard.spec.ts",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "frontend/src/app/app.guard.spec.ts"
              }
            }
          ]
        },
        {
          "ruleId": "jwt-token",
          "ruleIndex": 51,
          "level": "warning",
          "message": {
            "text": "Artifact: frontend/src/app/last-login-ip/last-login-ip.component.spec.ts\nType: \nSecret JWT token\nSeverity: MEDIUM\nMatch: ocalStorage.setItem('token', '*******************************************************************************************************************************')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/last-login-ip/last-login-ip.component.spec.ts",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 1,
                  "endLine": 61,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "frontend/src/app/last-login-ip/last-login-ip.component.spec.ts"
              }
            }
          ]
        },
        {
          "ruleId": "private-key",
          "ruleIndex": 50,
          "level": "error",
          "message": {
            "text": "Artifact: lib/insecurity.ts\nType: \nSecret Asymmetric Private Key\nSeverity: HIGH\nMatch
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/insecurity.ts",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 23,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "lib/insecurity.ts"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///home/runner/work/report-samples/report-samples/juice-shop/"
        }
      }
    }
  ]
}